// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: use_bag_goods.proto

#ifndef PROTOBUF_use_5fbag_5fgoods_2eproto__INCLUDED
#define PROTOBUF_use_5fbag_5fgoods_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_bag_goods.pb.h"
#include "role_cooldown.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_use_5fbag_5fgoods_2eproto();
void protobuf_AssignDesc_use_5fbag_5fgoods_2eproto();
void protobuf_ShutdownFile_use_5fbag_5fgoods_2eproto();

class UseBagGoodsRequest;
class UseBagGoodsResponse;

// ===================================================================

class UseBagGoodsRequest : public ::google::protobuf::MessageLite {
 public:
  UseBagGoodsRequest();
  virtual ~UseBagGoodsRequest();

  UseBagGoodsRequest(const UseBagGoodsRequest& from);

  inline UseBagGoodsRequest& operator=(const UseBagGoodsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const UseBagGoodsRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UseBagGoodsRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UseBagGoodsRequest* other);

  // implements Message ----------------------------------------------

  UseBagGoodsRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UseBagGoodsRequest& from);
  void MergeFrom(const UseBagGoodsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint64 autoIncrID = 2;
  inline bool has_autoincrid() const;
  inline void clear_autoincrid();
  static const int kAutoIncrIDFieldNumber = 2;
  inline ::google::protobuf::uint64 autoincrid() const;
  inline void set_autoincrid(::google::protobuf::uint64 value);

  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.UseBagGoodsRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_autoincrid();
  inline void clear_has_autoincrid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::uint64 autoincrid_;
  int msgid_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_use_5fbag_5fgoods_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_use_5fbag_5fgoods_2eproto();
  #endif
  friend void protobuf_AssignDesc_use_5fbag_5fgoods_2eproto();
  friend void protobuf_ShutdownFile_use_5fbag_5fgoods_2eproto();

  void InitAsDefaultInstance();
  static UseBagGoodsRequest* default_instance_;
};
// -------------------------------------------------------------------

class UseBagGoodsResponse : public ::google::protobuf::MessageLite {
 public:
  UseBagGoodsResponse();
  virtual ~UseBagGoodsResponse();

  UseBagGoodsResponse(const UseBagGoodsResponse& from);

  inline UseBagGoodsResponse& operator=(const UseBagGoodsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const UseBagGoodsResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UseBagGoodsResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UseBagGoodsResponse* other);

  // implements Message ----------------------------------------------

  UseBagGoodsResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UseBagGoodsResponse& from);
  void MergeFrom(const UseBagGoodsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional .sanguo.MsgRoleBagGoods roleBagGoods = 3;
  inline bool has_rolebaggoods() const;
  inline void clear_rolebaggoods();
  static const int kRoleBagGoodsFieldNumber = 3;
  inline const ::sanguo::MsgRoleBagGoods& rolebaggoods() const;
  inline ::sanguo::MsgRoleBagGoods* mutable_rolebaggoods();
  inline ::sanguo::MsgRoleBagGoods* release_rolebaggoods();
  inline void set_allocated_rolebaggoods(::sanguo::MsgRoleBagGoods* rolebaggoods);

  // optional .sanguo.MsgRoleCooldown roleCoolDown = 4;
  inline bool has_rolecooldown() const;
  inline void clear_rolecooldown();
  static const int kRoleCoolDownFieldNumber = 4;
  inline const ::sanguo::MsgRoleCooldown& rolecooldown() const;
  inline ::sanguo::MsgRoleCooldown* mutable_rolecooldown();
  inline ::sanguo::MsgRoleCooldown* release_rolecooldown();
  inline void set_allocated_rolecooldown(::sanguo::MsgRoleCooldown* rolecooldown);

  // @@protoc_insertion_point(class_scope:sanguo.UseBagGoodsResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_rolebaggoods();
  inline void clear_has_rolebaggoods();
  inline void set_has_rolecooldown();
  inline void clear_has_rolecooldown();

  int msgid_;
  int status_;
  ::sanguo::MsgRoleBagGoods* rolebaggoods_;
  ::sanguo::MsgRoleCooldown* rolecooldown_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_use_5fbag_5fgoods_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_use_5fbag_5fgoods_2eproto();
  #endif
  friend void protobuf_AssignDesc_use_5fbag_5fgoods_2eproto();
  friend void protobuf_ShutdownFile_use_5fbag_5fgoods_2eproto();

  void InitAsDefaultInstance();
  static UseBagGoodsResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// UseBagGoodsRequest

// required .sanguo.MsgID msgID = 1;
inline bool UseBagGoodsRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseBagGoodsRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseBagGoodsRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseBagGoodsRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID UseBagGoodsRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void UseBagGoodsRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint64 autoIncrID = 2;
inline bool UseBagGoodsRequest::has_autoincrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseBagGoodsRequest::set_has_autoincrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseBagGoodsRequest::clear_has_autoincrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseBagGoodsRequest::clear_autoincrid() {
  autoincrid_ = GOOGLE_ULONGLONG(0);
  clear_has_autoincrid();
}
inline ::google::protobuf::uint64 UseBagGoodsRequest::autoincrid() const {
  return autoincrid_;
}
inline void UseBagGoodsRequest::set_autoincrid(::google::protobuf::uint64 value) {
  set_has_autoincrid();
  autoincrid_ = value;
}

// required uint32 count = 3;
inline bool UseBagGoodsRequest::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UseBagGoodsRequest::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UseBagGoodsRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UseBagGoodsRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 UseBagGoodsRequest::count() const {
  return count_;
}
inline void UseBagGoodsRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// UseBagGoodsResponse

// required .sanguo.MsgID msgID = 1;
inline bool UseBagGoodsResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseBagGoodsResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseBagGoodsResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseBagGoodsResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID UseBagGoodsResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void UseBagGoodsResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool UseBagGoodsResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseBagGoodsResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseBagGoodsResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseBagGoodsResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode UseBagGoodsResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void UseBagGoodsResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional .sanguo.MsgRoleBagGoods roleBagGoods = 3;
inline bool UseBagGoodsResponse::has_rolebaggoods() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UseBagGoodsResponse::set_has_rolebaggoods() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UseBagGoodsResponse::clear_has_rolebaggoods() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UseBagGoodsResponse::clear_rolebaggoods() {
  if (rolebaggoods_ != NULL) rolebaggoods_->::sanguo::MsgRoleBagGoods::Clear();
  clear_has_rolebaggoods();
}
inline const ::sanguo::MsgRoleBagGoods& UseBagGoodsResponse::rolebaggoods() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return rolebaggoods_ != NULL ? *rolebaggoods_ : *default_instance().rolebaggoods_;
#else
  return rolebaggoods_ != NULL ? *rolebaggoods_ : *default_instance_->rolebaggoods_;
#endif
}
inline ::sanguo::MsgRoleBagGoods* UseBagGoodsResponse::mutable_rolebaggoods() {
  set_has_rolebaggoods();
  if (rolebaggoods_ == NULL) rolebaggoods_ = new ::sanguo::MsgRoleBagGoods;
  return rolebaggoods_;
}
inline ::sanguo::MsgRoleBagGoods* UseBagGoodsResponse::release_rolebaggoods() {
  clear_has_rolebaggoods();
  ::sanguo::MsgRoleBagGoods* temp = rolebaggoods_;
  rolebaggoods_ = NULL;
  return temp;
}
inline void UseBagGoodsResponse::set_allocated_rolebaggoods(::sanguo::MsgRoleBagGoods* rolebaggoods) {
  delete rolebaggoods_;
  rolebaggoods_ = rolebaggoods;
  if (rolebaggoods) {
    set_has_rolebaggoods();
  } else {
    clear_has_rolebaggoods();
  }
}

// optional .sanguo.MsgRoleCooldown roleCoolDown = 4;
inline bool UseBagGoodsResponse::has_rolecooldown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UseBagGoodsResponse::set_has_rolecooldown() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UseBagGoodsResponse::clear_has_rolecooldown() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UseBagGoodsResponse::clear_rolecooldown() {
  if (rolecooldown_ != NULL) rolecooldown_->::sanguo::MsgRoleCooldown::Clear();
  clear_has_rolecooldown();
}
inline const ::sanguo::MsgRoleCooldown& UseBagGoodsResponse::rolecooldown() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return rolecooldown_ != NULL ? *rolecooldown_ : *default_instance().rolecooldown_;
#else
  return rolecooldown_ != NULL ? *rolecooldown_ : *default_instance_->rolecooldown_;
#endif
}
inline ::sanguo::MsgRoleCooldown* UseBagGoodsResponse::mutable_rolecooldown() {
  set_has_rolecooldown();
  if (rolecooldown_ == NULL) rolecooldown_ = new ::sanguo::MsgRoleCooldown;
  return rolecooldown_;
}
inline ::sanguo::MsgRoleCooldown* UseBagGoodsResponse::release_rolecooldown() {
  clear_has_rolecooldown();
  ::sanguo::MsgRoleCooldown* temp = rolecooldown_;
  rolecooldown_ = NULL;
  return temp;
}
inline void UseBagGoodsResponse::set_allocated_rolecooldown(::sanguo::MsgRoleCooldown* rolecooldown) {
  delete rolecooldown_;
  rolecooldown_ = rolecooldown;
  if (rolecooldown) {
    set_has_rolecooldown();
  } else {
    clear_has_rolecooldown();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_use_5fbag_5fgoods_2eproto__INCLUDED
