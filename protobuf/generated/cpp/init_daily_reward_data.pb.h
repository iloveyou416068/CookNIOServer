// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init_daily_reward_data.proto

#ifndef PROTOBUF_init_5fdaily_5freward_5fdata_2eproto__INCLUDED
#define PROTOBUF_init_5fdaily_5freward_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_init_5fdaily_5freward_5fdata_2eproto();
void protobuf_AssignDesc_init_5fdaily_5freward_5fdata_2eproto();
void protobuf_ShutdownFile_init_5fdaily_5freward_5fdata_2eproto();

class InitDailyRewardDataRequest;
class InitDailyRewardDataResponse;

// ===================================================================

class InitDailyRewardDataRequest : public ::google::protobuf::MessageLite {
 public:
  InitDailyRewardDataRequest();
  virtual ~InitDailyRewardDataRequest();

  InitDailyRewardDataRequest(const InitDailyRewardDataRequest& from);

  inline InitDailyRewardDataRequest& operator=(const InitDailyRewardDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const InitDailyRewardDataRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InitDailyRewardDataRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InitDailyRewardDataRequest* other);

  // implements Message ----------------------------------------------

  InitDailyRewardDataRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InitDailyRewardDataRequest& from);
  void MergeFrom(const InitDailyRewardDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.InitDailyRewardDataRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_init_5fdaily_5freward_5fdata_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_init_5fdaily_5freward_5fdata_2eproto();
  #endif
  friend void protobuf_AssignDesc_init_5fdaily_5freward_5fdata_2eproto();
  friend void protobuf_ShutdownFile_init_5fdaily_5freward_5fdata_2eproto();

  void InitAsDefaultInstance();
  static InitDailyRewardDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class InitDailyRewardDataResponse : public ::google::protobuf::MessageLite {
 public:
  InitDailyRewardDataResponse();
  virtual ~InitDailyRewardDataResponse();

  InitDailyRewardDataResponse(const InitDailyRewardDataResponse& from);

  inline InitDailyRewardDataResponse& operator=(const InitDailyRewardDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const InitDailyRewardDataResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InitDailyRewardDataResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InitDailyRewardDataResponse* other);

  // implements Message ----------------------------------------------

  InitDailyRewardDataResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InitDailyRewardDataResponse& from);
  void MergeFrom(const InitDailyRewardDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 dailyRewardProcess = 3;
  inline bool has_dailyrewardprocess() const;
  inline void clear_dailyrewardprocess();
  static const int kDailyRewardProcessFieldNumber = 3;
  inline ::google::protobuf::uint32 dailyrewardprocess() const;
  inline void set_dailyrewardprocess(::google::protobuf::uint32 value);

  // optional uint32 dailyRewardedToday = 4;
  inline bool has_dailyrewardedtoday() const;
  inline void clear_dailyrewardedtoday();
  static const int kDailyRewardedTodayFieldNumber = 4;
  inline ::google::protobuf::uint32 dailyrewardedtoday() const;
  inline void set_dailyrewardedtoday(::google::protobuf::uint32 value);

  // optional uint32 dailyVipRewardedToday = 5;
  inline bool has_dailyviprewardedtoday() const;
  inline void clear_dailyviprewardedtoday();
  static const int kDailyVipRewardedTodayFieldNumber = 5;
  inline ::google::protobuf::uint32 dailyviprewardedtoday() const;
  inline void set_dailyviprewardedtoday(::google::protobuf::uint32 value);

  // optional uint32 dailyGuanjieRewardedToday = 6;
  inline bool has_dailyguanjierewardedtoday() const;
  inline void clear_dailyguanjierewardedtoday();
  static const int kDailyGuanjieRewardedTodayFieldNumber = 6;
  inline ::google::protobuf::uint32 dailyguanjierewardedtoday() const;
  inline void set_dailyguanjierewardedtoday(::google::protobuf::uint32 value);

  // optional string dailyRewardRecord = 7;
  inline bool has_dailyrewardrecord() const;
  inline void clear_dailyrewardrecord();
  static const int kDailyRewardRecordFieldNumber = 7;
  inline const ::std::string& dailyrewardrecord() const;
  inline void set_dailyrewardrecord(const ::std::string& value);
  inline void set_dailyrewardrecord(const char* value);
  inline void set_dailyrewardrecord(const char* value, size_t size);
  inline ::std::string* mutable_dailyrewardrecord();
  inline ::std::string* release_dailyrewardrecord();
  inline void set_allocated_dailyrewardrecord(::std::string* dailyrewardrecord);

  // @@protoc_insertion_point(class_scope:sanguo.InitDailyRewardDataResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_dailyrewardprocess();
  inline void clear_has_dailyrewardprocess();
  inline void set_has_dailyrewardedtoday();
  inline void clear_has_dailyrewardedtoday();
  inline void set_has_dailyviprewardedtoday();
  inline void clear_has_dailyviprewardedtoday();
  inline void set_has_dailyguanjierewardedtoday();
  inline void clear_has_dailyguanjierewardedtoday();
  inline void set_has_dailyrewardrecord();
  inline void clear_has_dailyrewardrecord();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 dailyrewardprocess_;
  ::google::protobuf::uint32 dailyrewardedtoday_;
  ::google::protobuf::uint32 dailyviprewardedtoday_;
  ::google::protobuf::uint32 dailyguanjierewardedtoday_;
  ::std::string* dailyrewardrecord_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_init_5fdaily_5freward_5fdata_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_init_5fdaily_5freward_5fdata_2eproto();
  #endif
  friend void protobuf_AssignDesc_init_5fdaily_5freward_5fdata_2eproto();
  friend void protobuf_ShutdownFile_init_5fdaily_5freward_5fdata_2eproto();

  void InitAsDefaultInstance();
  static InitDailyRewardDataResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// InitDailyRewardDataRequest

// required .sanguo.MsgID msgID = 1;
inline bool InitDailyRewardDataRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitDailyRewardDataRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitDailyRewardDataRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitDailyRewardDataRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID InitDailyRewardDataRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void InitDailyRewardDataRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// InitDailyRewardDataResponse

// required .sanguo.MsgID msgID = 1;
inline bool InitDailyRewardDataResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitDailyRewardDataResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitDailyRewardDataResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitDailyRewardDataResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID InitDailyRewardDataResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void InitDailyRewardDataResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool InitDailyRewardDataResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitDailyRewardDataResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitDailyRewardDataResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitDailyRewardDataResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode InitDailyRewardDataResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void InitDailyRewardDataResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 dailyRewardProcess = 3;
inline bool InitDailyRewardDataResponse::has_dailyrewardprocess() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitDailyRewardDataResponse::set_has_dailyrewardprocess() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitDailyRewardDataResponse::clear_has_dailyrewardprocess() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitDailyRewardDataResponse::clear_dailyrewardprocess() {
  dailyrewardprocess_ = 0u;
  clear_has_dailyrewardprocess();
}
inline ::google::protobuf::uint32 InitDailyRewardDataResponse::dailyrewardprocess() const {
  return dailyrewardprocess_;
}
inline void InitDailyRewardDataResponse::set_dailyrewardprocess(::google::protobuf::uint32 value) {
  set_has_dailyrewardprocess();
  dailyrewardprocess_ = value;
}

// optional uint32 dailyRewardedToday = 4;
inline bool InitDailyRewardDataResponse::has_dailyrewardedtoday() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InitDailyRewardDataResponse::set_has_dailyrewardedtoday() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InitDailyRewardDataResponse::clear_has_dailyrewardedtoday() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InitDailyRewardDataResponse::clear_dailyrewardedtoday() {
  dailyrewardedtoday_ = 0u;
  clear_has_dailyrewardedtoday();
}
inline ::google::protobuf::uint32 InitDailyRewardDataResponse::dailyrewardedtoday() const {
  return dailyrewardedtoday_;
}
inline void InitDailyRewardDataResponse::set_dailyrewardedtoday(::google::protobuf::uint32 value) {
  set_has_dailyrewardedtoday();
  dailyrewardedtoday_ = value;
}

// optional uint32 dailyVipRewardedToday = 5;
inline bool InitDailyRewardDataResponse::has_dailyviprewardedtoday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InitDailyRewardDataResponse::set_has_dailyviprewardedtoday() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InitDailyRewardDataResponse::clear_has_dailyviprewardedtoday() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InitDailyRewardDataResponse::clear_dailyviprewardedtoday() {
  dailyviprewardedtoday_ = 0u;
  clear_has_dailyviprewardedtoday();
}
inline ::google::protobuf::uint32 InitDailyRewardDataResponse::dailyviprewardedtoday() const {
  return dailyviprewardedtoday_;
}
inline void InitDailyRewardDataResponse::set_dailyviprewardedtoday(::google::protobuf::uint32 value) {
  set_has_dailyviprewardedtoday();
  dailyviprewardedtoday_ = value;
}

// optional uint32 dailyGuanjieRewardedToday = 6;
inline bool InitDailyRewardDataResponse::has_dailyguanjierewardedtoday() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InitDailyRewardDataResponse::set_has_dailyguanjierewardedtoday() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InitDailyRewardDataResponse::clear_has_dailyguanjierewardedtoday() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InitDailyRewardDataResponse::clear_dailyguanjierewardedtoday() {
  dailyguanjierewardedtoday_ = 0u;
  clear_has_dailyguanjierewardedtoday();
}
inline ::google::protobuf::uint32 InitDailyRewardDataResponse::dailyguanjierewardedtoday() const {
  return dailyguanjierewardedtoday_;
}
inline void InitDailyRewardDataResponse::set_dailyguanjierewardedtoday(::google::protobuf::uint32 value) {
  set_has_dailyguanjierewardedtoday();
  dailyguanjierewardedtoday_ = value;
}

// optional string dailyRewardRecord = 7;
inline bool InitDailyRewardDataResponse::has_dailyrewardrecord() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InitDailyRewardDataResponse::set_has_dailyrewardrecord() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InitDailyRewardDataResponse::clear_has_dailyrewardrecord() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InitDailyRewardDataResponse::clear_dailyrewardrecord() {
  if (dailyrewardrecord_ != &::google::protobuf::internal::kEmptyString) {
    dailyrewardrecord_->clear();
  }
  clear_has_dailyrewardrecord();
}
inline const ::std::string& InitDailyRewardDataResponse::dailyrewardrecord() const {
  return *dailyrewardrecord_;
}
inline void InitDailyRewardDataResponse::set_dailyrewardrecord(const ::std::string& value) {
  set_has_dailyrewardrecord();
  if (dailyrewardrecord_ == &::google::protobuf::internal::kEmptyString) {
    dailyrewardrecord_ = new ::std::string;
  }
  dailyrewardrecord_->assign(value);
}
inline void InitDailyRewardDataResponse::set_dailyrewardrecord(const char* value) {
  set_has_dailyrewardrecord();
  if (dailyrewardrecord_ == &::google::protobuf::internal::kEmptyString) {
    dailyrewardrecord_ = new ::std::string;
  }
  dailyrewardrecord_->assign(value);
}
inline void InitDailyRewardDataResponse::set_dailyrewardrecord(const char* value, size_t size) {
  set_has_dailyrewardrecord();
  if (dailyrewardrecord_ == &::google::protobuf::internal::kEmptyString) {
    dailyrewardrecord_ = new ::std::string;
  }
  dailyrewardrecord_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InitDailyRewardDataResponse::mutable_dailyrewardrecord() {
  set_has_dailyrewardrecord();
  if (dailyrewardrecord_ == &::google::protobuf::internal::kEmptyString) {
    dailyrewardrecord_ = new ::std::string;
  }
  return dailyrewardrecord_;
}
inline ::std::string* InitDailyRewardDataResponse::release_dailyrewardrecord() {
  clear_has_dailyrewardrecord();
  if (dailyrewardrecord_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dailyrewardrecord_;
    dailyrewardrecord_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void InitDailyRewardDataResponse::set_allocated_dailyrewardrecord(::std::string* dailyrewardrecord) {
  if (dailyrewardrecord_ != &::google::protobuf::internal::kEmptyString) {
    delete dailyrewardrecord_;
  }
  if (dailyrewardrecord) {
    set_has_dailyrewardrecord();
    dailyrewardrecord_ = dailyrewardrecord;
  } else {
    clear_has_dailyrewardrecord();
    dailyrewardrecord_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_init_5fdaily_5freward_5fdata_2eproto__INCLUDED
