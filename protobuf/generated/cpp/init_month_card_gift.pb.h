// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init_month_card_gift.proto

#ifndef PROTOBUF_init_5fmonth_5fcard_5fgift_2eproto__INCLUDED
#define PROTOBUF_init_5fmonth_5fcard_5fgift_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_init_5fmonth_5fcard_5fgift_2eproto();
void protobuf_AssignDesc_init_5fmonth_5fcard_5fgift_2eproto();
void protobuf_ShutdownFile_init_5fmonth_5fcard_5fgift_2eproto();

class InitMonthCardGiftRequest;
class InitMonthCardGiftResponse;

// ===================================================================

class InitMonthCardGiftRequest : public ::google::protobuf::MessageLite {
 public:
  InitMonthCardGiftRequest();
  virtual ~InitMonthCardGiftRequest();

  InitMonthCardGiftRequest(const InitMonthCardGiftRequest& from);

  inline InitMonthCardGiftRequest& operator=(const InitMonthCardGiftRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const InitMonthCardGiftRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InitMonthCardGiftRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InitMonthCardGiftRequest* other);

  // implements Message ----------------------------------------------

  InitMonthCardGiftRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InitMonthCardGiftRequest& from);
  void MergeFrom(const InitMonthCardGiftRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.InitMonthCardGiftRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_init_5fmonth_5fcard_5fgift_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_init_5fmonth_5fcard_5fgift_2eproto();
  #endif
  friend void protobuf_AssignDesc_init_5fmonth_5fcard_5fgift_2eproto();
  friend void protobuf_ShutdownFile_init_5fmonth_5fcard_5fgift_2eproto();

  void InitAsDefaultInstance();
  static InitMonthCardGiftRequest* default_instance_;
};
// -------------------------------------------------------------------

class InitMonthCardGiftResponse : public ::google::protobuf::MessageLite {
 public:
  InitMonthCardGiftResponse();
  virtual ~InitMonthCardGiftResponse();

  InitMonthCardGiftResponse(const InitMonthCardGiftResponse& from);

  inline InitMonthCardGiftResponse& operator=(const InitMonthCardGiftResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const InitMonthCardGiftResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InitMonthCardGiftResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InitMonthCardGiftResponse* other);

  // implements Message ----------------------------------------------

  InitMonthCardGiftResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InitMonthCardGiftResponse& from);
  void MergeFrom(const InitMonthCardGiftResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional string gift = 3;
  inline bool has_gift() const;
  inline void clear_gift();
  static const int kGiftFieldNumber = 3;
  inline const ::std::string& gift() const;
  inline void set_gift(const ::std::string& value);
  inline void set_gift(const char* value);
  inline void set_gift(const char* value, size_t size);
  inline ::std::string* mutable_gift();
  inline ::std::string* release_gift();
  inline void set_allocated_gift(::std::string* gift);

  // optional uint32 openedStatus = 4;
  inline bool has_openedstatus() const;
  inline void clear_openedstatus();
  static const int kOpenedStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 openedstatus() const;
  inline void set_openedstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.InitMonthCardGiftResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_gift();
  inline void clear_has_gift();
  inline void set_has_openedstatus();
  inline void clear_has_openedstatus();

  int msgid_;
  int status_;
  ::std::string* gift_;
  ::google::protobuf::uint32 openedstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_init_5fmonth_5fcard_5fgift_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_init_5fmonth_5fcard_5fgift_2eproto();
  #endif
  friend void protobuf_AssignDesc_init_5fmonth_5fcard_5fgift_2eproto();
  friend void protobuf_ShutdownFile_init_5fmonth_5fcard_5fgift_2eproto();

  void InitAsDefaultInstance();
  static InitMonthCardGiftResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// InitMonthCardGiftRequest

// required .sanguo.MsgID msgID = 1;
inline bool InitMonthCardGiftRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitMonthCardGiftRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitMonthCardGiftRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitMonthCardGiftRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID InitMonthCardGiftRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void InitMonthCardGiftRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// InitMonthCardGiftResponse

// required .sanguo.MsgID msgID = 1;
inline bool InitMonthCardGiftResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitMonthCardGiftResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitMonthCardGiftResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitMonthCardGiftResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID InitMonthCardGiftResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void InitMonthCardGiftResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool InitMonthCardGiftResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitMonthCardGiftResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitMonthCardGiftResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitMonthCardGiftResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode InitMonthCardGiftResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void InitMonthCardGiftResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional string gift = 3;
inline bool InitMonthCardGiftResponse::has_gift() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitMonthCardGiftResponse::set_has_gift() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitMonthCardGiftResponse::clear_has_gift() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitMonthCardGiftResponse::clear_gift() {
  if (gift_ != &::google::protobuf::internal::kEmptyString) {
    gift_->clear();
  }
  clear_has_gift();
}
inline const ::std::string& InitMonthCardGiftResponse::gift() const {
  return *gift_;
}
inline void InitMonthCardGiftResponse::set_gift(const ::std::string& value) {
  set_has_gift();
  if (gift_ == &::google::protobuf::internal::kEmptyString) {
    gift_ = new ::std::string;
  }
  gift_->assign(value);
}
inline void InitMonthCardGiftResponse::set_gift(const char* value) {
  set_has_gift();
  if (gift_ == &::google::protobuf::internal::kEmptyString) {
    gift_ = new ::std::string;
  }
  gift_->assign(value);
}
inline void InitMonthCardGiftResponse::set_gift(const char* value, size_t size) {
  set_has_gift();
  if (gift_ == &::google::protobuf::internal::kEmptyString) {
    gift_ = new ::std::string;
  }
  gift_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InitMonthCardGiftResponse::mutable_gift() {
  set_has_gift();
  if (gift_ == &::google::protobuf::internal::kEmptyString) {
    gift_ = new ::std::string;
  }
  return gift_;
}
inline ::std::string* InitMonthCardGiftResponse::release_gift() {
  clear_has_gift();
  if (gift_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gift_;
    gift_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void InitMonthCardGiftResponse::set_allocated_gift(::std::string* gift) {
  if (gift_ != &::google::protobuf::internal::kEmptyString) {
    delete gift_;
  }
  if (gift) {
    set_has_gift();
    gift_ = gift;
  } else {
    clear_has_gift();
    gift_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 openedStatus = 4;
inline bool InitMonthCardGiftResponse::has_openedstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InitMonthCardGiftResponse::set_has_openedstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InitMonthCardGiftResponse::clear_has_openedstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InitMonthCardGiftResponse::clear_openedstatus() {
  openedstatus_ = 0u;
  clear_has_openedstatus();
}
inline ::google::protobuf::uint32 InitMonthCardGiftResponse::openedstatus() const {
  return openedstatus_;
}
inline void InitMonthCardGiftResponse::set_openedstatus(::google::protobuf::uint32 value) {
  set_has_openedstatus();
  openedstatus_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_init_5fmonth_5fcard_5fgift_2eproto__INCLUDED
