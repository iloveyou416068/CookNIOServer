// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_in_main_city.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "role_in_main_city.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sanguo {

void protobuf_ShutdownFile_role_5fin_5fmain_5fcity_2eproto() {
  delete MsgRoleInMainCity::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_role_5fin_5fmain_5fcity_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_role_5fin_5fmain_5fcity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::sanguo::protobuf_AddDesc_role_2eproto();
  ::sanguo::protobuf_AddDesc_role_5fbag_5fgoods_2eproto();
  ::sanguo::protobuf_AddDesc_pet_2eproto();
  MsgRoleInMainCity::default_instance_ = new MsgRoleInMainCity();
  MsgRoleInMainCity::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_role_5fin_5fmain_5fcity_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_role_5fin_5fmain_5fcity_2eproto_once_);
void protobuf_AddDesc_role_5fin_5fmain_5fcity_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_role_5fin_5fmain_5fcity_2eproto_once_,
                 &protobuf_AddDesc_role_5fin_5fmain_5fcity_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_role_5fin_5fmain_5fcity_2eproto {
  StaticDescriptorInitializer_role_5fin_5fmain_5fcity_2eproto() {
    protobuf_AddDesc_role_5fin_5fmain_5fcity_2eproto();
  }
} static_descriptor_initializer_role_5fin_5fmain_5fcity_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int MsgRoleInMainCity::kBasicInfoFieldNumber;
const int MsgRoleInMainCity::kEquipmentsFieldNumber;
const int MsgRoleInMainCity::kPetFieldNumber;
#endif  // !_MSC_VER

MsgRoleInMainCity::MsgRoleInMainCity()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void MsgRoleInMainCity::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  basicinfo_ = const_cast< ::sanguo::MsgRoleData*>(
      ::sanguo::MsgRoleData::internal_default_instance());
#else
  basicinfo_ = const_cast< ::sanguo::MsgRoleData*>(&::sanguo::MsgRoleData::default_instance());
#endif
}

MsgRoleInMainCity::MsgRoleInMainCity(const MsgRoleInMainCity& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void MsgRoleInMainCity::SharedCtor() {
  _cached_size_ = 0;
  basicinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgRoleInMainCity::~MsgRoleInMainCity() {
  SharedDtor();
}

void MsgRoleInMainCity::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete basicinfo_;
  }
}

void MsgRoleInMainCity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgRoleInMainCity& MsgRoleInMainCity::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_role_5fin_5fmain_5fcity_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fin_5fmain_5fcity_2eproto();
#endif
  return *default_instance_;
}

MsgRoleInMainCity* MsgRoleInMainCity::default_instance_ = NULL;

MsgRoleInMainCity* MsgRoleInMainCity::New() const {
  return new MsgRoleInMainCity;
}

void MsgRoleInMainCity::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_basicinfo()) {
      if (basicinfo_ != NULL) basicinfo_->::sanguo::MsgRoleData::Clear();
    }
  }
  equipments_.Clear();
  pet_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool MsgRoleInMainCity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sanguo.MsgRoleData basicInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basicinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_equipments;
        break;
      }

      // repeated .sanguo.MsgRoleBagGoods equipments = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equipments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipments()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_equipments;
        if (input->ExpectTag(26)) goto parse_pet;
        break;
      }

      // repeated .sanguo.MsgPet pet = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pet()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_pet;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgRoleInMainCity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .sanguo.MsgRoleData basicInfo = 1;
  if (has_basicinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->basicinfo(), output);
  }

  // repeated .sanguo.MsgRoleBagGoods equipments = 2;
  for (int i = 0; i < this->equipments_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->equipments(i), output);
  }

  // repeated .sanguo.MsgPet pet = 3;
  for (int i = 0; i < this->pet_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->pet(i), output);
  }

}

int MsgRoleInMainCity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .sanguo.MsgRoleData basicInfo = 1;
    if (has_basicinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->basicinfo());
    }

  }
  // repeated .sanguo.MsgRoleBagGoods equipments = 2;
  total_size += 1 * this->equipments_size();
  for (int i = 0; i < this->equipments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipments(i));
  }

  // repeated .sanguo.MsgPet pet = 3;
  total_size += 1 * this->pet_size();
  for (int i = 0; i < this->pet_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pet(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRoleInMainCity::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgRoleInMainCity*>(&from));
}

void MsgRoleInMainCity::MergeFrom(const MsgRoleInMainCity& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipments_.MergeFrom(from.equipments_);
  pet_.MergeFrom(from.pet_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basicinfo()) {
      mutable_basicinfo()->::sanguo::MsgRoleData::MergeFrom(from.basicinfo());
    }
  }
}

void MsgRoleInMainCity::CopyFrom(const MsgRoleInMainCity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRoleInMainCity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_basicinfo()) {
    if (!this->basicinfo().IsInitialized()) return false;
  }
  for (int i = 0; i < equipments_size(); i++) {
    if (!this->equipments(i).IsInitialized()) return false;
  }
  for (int i = 0; i < pet_size(); i++) {
    if (!this->pet(i).IsInitialized()) return false;
  }
  return true;
}

void MsgRoleInMainCity::Swap(MsgRoleInMainCity* other) {
  if (other != this) {
    std::swap(basicinfo_, other->basicinfo_);
    equipments_.Swap(&other->equipments_);
    pet_.Swap(&other->pet_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgRoleInMainCity::GetTypeName() const {
  return "sanguo.MsgRoleInMainCity";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)
