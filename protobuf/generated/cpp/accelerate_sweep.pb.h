// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: accelerate_sweep.proto

#ifndef PROTOBUF_accelerate_5fsweep_2eproto__INCLUDED
#define PROTOBUF_accelerate_5fsweep_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "sweep_dungeon_award.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_accelerate_5fsweep_2eproto();
void protobuf_AssignDesc_accelerate_5fsweep_2eproto();
void protobuf_ShutdownFile_accelerate_5fsweep_2eproto();

class AccelerateSweepDungeonRequest;
class AccelerateSweepDungeonResponse;

// ===================================================================

class AccelerateSweepDungeonRequest : public ::google::protobuf::MessageLite {
 public:
  AccelerateSweepDungeonRequest();
  virtual ~AccelerateSweepDungeonRequest();

  AccelerateSweepDungeonRequest(const AccelerateSweepDungeonRequest& from);

  inline AccelerateSweepDungeonRequest& operator=(const AccelerateSweepDungeonRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const AccelerateSweepDungeonRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AccelerateSweepDungeonRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AccelerateSweepDungeonRequest* other);

  // implements Message ----------------------------------------------

  AccelerateSweepDungeonRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AccelerateSweepDungeonRequest& from);
  void MergeFrom(const AccelerateSweepDungeonRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.AccelerateSweepDungeonRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gold();
  inline void clear_has_gold();

  int msgid_;
  ::google::protobuf::uint32 gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_accelerate_5fsweep_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_accelerate_5fsweep_2eproto();
  #endif
  friend void protobuf_AssignDesc_accelerate_5fsweep_2eproto();
  friend void protobuf_ShutdownFile_accelerate_5fsweep_2eproto();

  void InitAsDefaultInstance();
  static AccelerateSweepDungeonRequest* default_instance_;
};
// -------------------------------------------------------------------

class AccelerateSweepDungeonResponse : public ::google::protobuf::MessageLite {
 public:
  AccelerateSweepDungeonResponse();
  virtual ~AccelerateSweepDungeonResponse();

  AccelerateSweepDungeonResponse(const AccelerateSweepDungeonResponse& from);

  inline AccelerateSweepDungeonResponse& operator=(const AccelerateSweepDungeonResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const AccelerateSweepDungeonResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AccelerateSweepDungeonResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AccelerateSweepDungeonResponse* other);

  // implements Message ----------------------------------------------

  AccelerateSweepDungeonResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AccelerateSweepDungeonResponse& from);
  void MergeFrom(const AccelerateSweepDungeonResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 roleRemainPower = 3;
  inline bool has_roleremainpower() const;
  inline void clear_roleremainpower();
  static const int kRoleRemainPowerFieldNumber = 3;
  inline ::google::protobuf::uint32 roleremainpower() const;
  inline void set_roleremainpower(::google::protobuf::uint32 value);

  // required uint32 destFloor = 4;
  inline bool has_destfloor() const;
  inline void clear_destfloor();
  static const int kDestFloorFieldNumber = 4;
  inline ::google::protobuf::uint32 destfloor() const;
  inline void set_destfloor(::google::protobuf::uint32 value);

  // repeated .sanguo.MsgSweepDungeonAward rewards = 5;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 5;
  inline const ::sanguo::MsgSweepDungeonAward& rewards(int index) const;
  inline ::sanguo::MsgSweepDungeonAward* mutable_rewards(int index);
  inline ::sanguo::MsgSweepDungeonAward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:sanguo.AccelerateSweepDungeonResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_roleremainpower();
  inline void clear_has_roleremainpower();
  inline void set_has_destfloor();
  inline void clear_has_destfloor();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 roleremainpower_;
  ::google::protobuf::uint32 destfloor_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward > rewards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_accelerate_5fsweep_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_accelerate_5fsweep_2eproto();
  #endif
  friend void protobuf_AssignDesc_accelerate_5fsweep_2eproto();
  friend void protobuf_ShutdownFile_accelerate_5fsweep_2eproto();

  void InitAsDefaultInstance();
  static AccelerateSweepDungeonResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// AccelerateSweepDungeonRequest

// required .sanguo.MsgID msgID = 1;
inline bool AccelerateSweepDungeonRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccelerateSweepDungeonRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccelerateSweepDungeonRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccelerateSweepDungeonRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID AccelerateSweepDungeonRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void AccelerateSweepDungeonRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint32 gold = 2;
inline bool AccelerateSweepDungeonRequest::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccelerateSweepDungeonRequest::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccelerateSweepDungeonRequest::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccelerateSweepDungeonRequest::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 AccelerateSweepDungeonRequest::gold() const {
  return gold_;
}
inline void AccelerateSweepDungeonRequest::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// AccelerateSweepDungeonResponse

// required .sanguo.MsgID msgID = 1;
inline bool AccelerateSweepDungeonResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccelerateSweepDungeonResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccelerateSweepDungeonResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccelerateSweepDungeonResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID AccelerateSweepDungeonResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void AccelerateSweepDungeonResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool AccelerateSweepDungeonResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccelerateSweepDungeonResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccelerateSweepDungeonResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccelerateSweepDungeonResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode AccelerateSweepDungeonResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void AccelerateSweepDungeonResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 roleRemainPower = 3;
inline bool AccelerateSweepDungeonResponse::has_roleremainpower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccelerateSweepDungeonResponse::set_has_roleremainpower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccelerateSweepDungeonResponse::clear_has_roleremainpower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccelerateSweepDungeonResponse::clear_roleremainpower() {
  roleremainpower_ = 0u;
  clear_has_roleremainpower();
}
inline ::google::protobuf::uint32 AccelerateSweepDungeonResponse::roleremainpower() const {
  return roleremainpower_;
}
inline void AccelerateSweepDungeonResponse::set_roleremainpower(::google::protobuf::uint32 value) {
  set_has_roleremainpower();
  roleremainpower_ = value;
}

// required uint32 destFloor = 4;
inline bool AccelerateSweepDungeonResponse::has_destfloor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccelerateSweepDungeonResponse::set_has_destfloor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccelerateSweepDungeonResponse::clear_has_destfloor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccelerateSweepDungeonResponse::clear_destfloor() {
  destfloor_ = 0u;
  clear_has_destfloor();
}
inline ::google::protobuf::uint32 AccelerateSweepDungeonResponse::destfloor() const {
  return destfloor_;
}
inline void AccelerateSweepDungeonResponse::set_destfloor(::google::protobuf::uint32 value) {
  set_has_destfloor();
  destfloor_ = value;
}

// repeated .sanguo.MsgSweepDungeonAward rewards = 5;
inline int AccelerateSweepDungeonResponse::rewards_size() const {
  return rewards_.size();
}
inline void AccelerateSweepDungeonResponse::clear_rewards() {
  rewards_.Clear();
}
inline const ::sanguo::MsgSweepDungeonAward& AccelerateSweepDungeonResponse::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::sanguo::MsgSweepDungeonAward* AccelerateSweepDungeonResponse::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::sanguo::MsgSweepDungeonAward* AccelerateSweepDungeonResponse::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward >&
AccelerateSweepDungeonResponse::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward >*
AccelerateSweepDungeonResponse::mutable_rewards() {
  return &rewards_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_accelerate_5fsweep_2eproto__INCLUDED
