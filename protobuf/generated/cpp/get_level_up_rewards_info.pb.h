// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_level_up_rewards_info.proto

#ifndef PROTOBUF_get_5flevel_5fup_5frewards_5finfo_2eproto__INCLUDED
#define PROTOBUF_get_5flevel_5fup_5frewards_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_get_5flevel_5fup_5frewards_5finfo_2eproto();
void protobuf_AssignDesc_get_5flevel_5fup_5frewards_5finfo_2eproto();
void protobuf_ShutdownFile_get_5flevel_5fup_5frewards_5finfo_2eproto();

class GetLevelUpRewardsInfoRequest;
class GetLevelUpRewardsInfoResponse;

// ===================================================================

class GetLevelUpRewardsInfoRequest : public ::google::protobuf::MessageLite {
 public:
  GetLevelUpRewardsInfoRequest();
  virtual ~GetLevelUpRewardsInfoRequest();

  GetLevelUpRewardsInfoRequest(const GetLevelUpRewardsInfoRequest& from);

  inline GetLevelUpRewardsInfoRequest& operator=(const GetLevelUpRewardsInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetLevelUpRewardsInfoRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetLevelUpRewardsInfoRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetLevelUpRewardsInfoRequest* other);

  // implements Message ----------------------------------------------

  GetLevelUpRewardsInfoRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetLevelUpRewardsInfoRequest& from);
  void MergeFrom(const GetLevelUpRewardsInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 laterLevelCounts = 3;
  inline bool has_laterlevelcounts() const;
  inline void clear_laterlevelcounts();
  static const int kLaterLevelCountsFieldNumber = 3;
  inline ::google::protobuf::int32 laterlevelcounts() const;
  inline void set_laterlevelcounts(::google::protobuf::int32 value);

  // required uint32 goodstype = 4;
  inline bool has_goodstype() const;
  inline void clear_goodstype();
  static const int kGoodstypeFieldNumber = 4;
  inline ::google::protobuf::uint32 goodstype() const;
  inline void set_goodstype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.GetLevelUpRewardsInfoRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_laterlevelcounts();
  inline void clear_has_laterlevelcounts();
  inline void set_has_goodstype();
  inline void clear_has_goodstype();

  int msgid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 laterlevelcounts_;
  ::google::protobuf::uint32 goodstype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5flevel_5fup_5frewards_5finfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5flevel_5fup_5frewards_5finfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5flevel_5fup_5frewards_5finfo_2eproto();
  friend void protobuf_ShutdownFile_get_5flevel_5fup_5frewards_5finfo_2eproto();

  void InitAsDefaultInstance();
  static GetLevelUpRewardsInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetLevelUpRewardsInfoResponse : public ::google::protobuf::MessageLite {
 public:
  GetLevelUpRewardsInfoResponse();
  virtual ~GetLevelUpRewardsInfoResponse();

  GetLevelUpRewardsInfoResponse(const GetLevelUpRewardsInfoResponse& from);

  inline GetLevelUpRewardsInfoResponse& operator=(const GetLevelUpRewardsInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetLevelUpRewardsInfoResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetLevelUpRewardsInfoResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetLevelUpRewardsInfoResponse* other);

  // implements Message ----------------------------------------------

  GetLevelUpRewardsInfoResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetLevelUpRewardsInfoResponse& from);
  void MergeFrom(const GetLevelUpRewardsInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // repeated string rewardsInfo = 3;
  inline int rewardsinfo_size() const;
  inline void clear_rewardsinfo();
  static const int kRewardsInfoFieldNumber = 3;
  inline const ::std::string& rewardsinfo(int index) const;
  inline ::std::string* mutable_rewardsinfo(int index);
  inline void set_rewardsinfo(int index, const ::std::string& value);
  inline void set_rewardsinfo(int index, const char* value);
  inline void set_rewardsinfo(int index, const char* value, size_t size);
  inline ::std::string* add_rewardsinfo();
  inline void add_rewardsinfo(const ::std::string& value);
  inline void add_rewardsinfo(const char* value);
  inline void add_rewardsinfo(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& rewardsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_rewardsinfo();

  // @@protoc_insertion_point(class_scope:sanguo.GetLevelUpRewardsInfoResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();

  int msgid_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::std::string> rewardsinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5flevel_5fup_5frewards_5finfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5flevel_5fup_5frewards_5finfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5flevel_5fup_5frewards_5finfo_2eproto();
  friend void protobuf_ShutdownFile_get_5flevel_5fup_5frewards_5finfo_2eproto();

  void InitAsDefaultInstance();
  static GetLevelUpRewardsInfoResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// GetLevelUpRewardsInfoRequest

// required .sanguo.MsgID msgID = 1;
inline bool GetLevelUpRewardsInfoRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLevelUpRewardsInfoRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLevelUpRewardsInfoRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLevelUpRewardsInfoRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetLevelUpRewardsInfoRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetLevelUpRewardsInfoRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 level = 2;
inline bool GetLevelUpRewardsInfoRequest::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLevelUpRewardsInfoRequest::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLevelUpRewardsInfoRequest::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLevelUpRewardsInfoRequest::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GetLevelUpRewardsInfoRequest::level() const {
  return level_;
}
inline void GetLevelUpRewardsInfoRequest::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 laterLevelCounts = 3;
inline bool GetLevelUpRewardsInfoRequest::has_laterlevelcounts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLevelUpRewardsInfoRequest::set_has_laterlevelcounts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLevelUpRewardsInfoRequest::clear_has_laterlevelcounts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLevelUpRewardsInfoRequest::clear_laterlevelcounts() {
  laterlevelcounts_ = 0;
  clear_has_laterlevelcounts();
}
inline ::google::protobuf::int32 GetLevelUpRewardsInfoRequest::laterlevelcounts() const {
  return laterlevelcounts_;
}
inline void GetLevelUpRewardsInfoRequest::set_laterlevelcounts(::google::protobuf::int32 value) {
  set_has_laterlevelcounts();
  laterlevelcounts_ = value;
}

// required uint32 goodstype = 4;
inline bool GetLevelUpRewardsInfoRequest::has_goodstype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLevelUpRewardsInfoRequest::set_has_goodstype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLevelUpRewardsInfoRequest::clear_has_goodstype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLevelUpRewardsInfoRequest::clear_goodstype() {
  goodstype_ = 0u;
  clear_has_goodstype();
}
inline ::google::protobuf::uint32 GetLevelUpRewardsInfoRequest::goodstype() const {
  return goodstype_;
}
inline void GetLevelUpRewardsInfoRequest::set_goodstype(::google::protobuf::uint32 value) {
  set_has_goodstype();
  goodstype_ = value;
}

// -------------------------------------------------------------------

// GetLevelUpRewardsInfoResponse

// required .sanguo.MsgID msgID = 1;
inline bool GetLevelUpRewardsInfoResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLevelUpRewardsInfoResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLevelUpRewardsInfoResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLevelUpRewardsInfoResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetLevelUpRewardsInfoResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetLevelUpRewardsInfoResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool GetLevelUpRewardsInfoResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLevelUpRewardsInfoResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLevelUpRewardsInfoResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLevelUpRewardsInfoResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode GetLevelUpRewardsInfoResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void GetLevelUpRewardsInfoResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// repeated string rewardsInfo = 3;
inline int GetLevelUpRewardsInfoResponse::rewardsinfo_size() const {
  return rewardsinfo_.size();
}
inline void GetLevelUpRewardsInfoResponse::clear_rewardsinfo() {
  rewardsinfo_.Clear();
}
inline const ::std::string& GetLevelUpRewardsInfoResponse::rewardsinfo(int index) const {
  return rewardsinfo_.Get(index);
}
inline ::std::string* GetLevelUpRewardsInfoResponse::mutable_rewardsinfo(int index) {
  return rewardsinfo_.Mutable(index);
}
inline void GetLevelUpRewardsInfoResponse::set_rewardsinfo(int index, const ::std::string& value) {
  rewardsinfo_.Mutable(index)->assign(value);
}
inline void GetLevelUpRewardsInfoResponse::set_rewardsinfo(int index, const char* value) {
  rewardsinfo_.Mutable(index)->assign(value);
}
inline void GetLevelUpRewardsInfoResponse::set_rewardsinfo(int index, const char* value, size_t size) {
  rewardsinfo_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetLevelUpRewardsInfoResponse::add_rewardsinfo() {
  return rewardsinfo_.Add();
}
inline void GetLevelUpRewardsInfoResponse::add_rewardsinfo(const ::std::string& value) {
  rewardsinfo_.Add()->assign(value);
}
inline void GetLevelUpRewardsInfoResponse::add_rewardsinfo(const char* value) {
  rewardsinfo_.Add()->assign(value);
}
inline void GetLevelUpRewardsInfoResponse::add_rewardsinfo(const char* value, size_t size) {
  rewardsinfo_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetLevelUpRewardsInfoResponse::rewardsinfo() const {
  return rewardsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetLevelUpRewardsInfoResponse::mutable_rewardsinfo() {
  return &rewardsinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_get_5flevel_5fup_5frewards_5finfo_2eproto__INCLUDED
