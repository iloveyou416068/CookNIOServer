// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_bag_info.proto

#ifndef PROTOBUF_get_5fbag_5finfo_2eproto__INCLUDED
#define PROTOBUF_get_5fbag_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "role_bag_goods.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_get_5fbag_5finfo_2eproto();
void protobuf_AssignDesc_get_5fbag_5finfo_2eproto();
void protobuf_ShutdownFile_get_5fbag_5finfo_2eproto();

class GetBagInfoRequest;
class GetBagInfoResponse;

// ===================================================================

class GetBagInfoRequest : public ::google::protobuf::MessageLite {
 public:
  GetBagInfoRequest();
  virtual ~GetBagInfoRequest();

  GetBagInfoRequest(const GetBagInfoRequest& from);

  inline GetBagInfoRequest& operator=(const GetBagInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetBagInfoRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetBagInfoRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetBagInfoRequest* other);

  // implements Message ----------------------------------------------

  GetBagInfoRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetBagInfoRequest& from);
  void MergeFrom(const GetBagInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.GetBagInfoRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5fbag_5finfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5fbag_5finfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5fbag_5finfo_2eproto();
  friend void protobuf_ShutdownFile_get_5fbag_5finfo_2eproto();

  void InitAsDefaultInstance();
  static GetBagInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetBagInfoResponse : public ::google::protobuf::MessageLite {
 public:
  GetBagInfoResponse();
  virtual ~GetBagInfoResponse();

  GetBagInfoResponse(const GetBagInfoResponse& from);

  inline GetBagInfoResponse& operator=(const GetBagInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetBagInfoResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetBagInfoResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetBagInfoResponse* other);

  // implements Message ----------------------------------------------

  GetBagInfoResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetBagInfoResponse& from);
  void MergeFrom(const GetBagInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;
  inline int rolebaggoods_size() const;
  inline void clear_rolebaggoods();
  static const int kRoleBagGoodsFieldNumber = 3;
  inline const ::sanguo::MsgRoleBagGoods& rolebaggoods(int index) const;
  inline ::sanguo::MsgRoleBagGoods* mutable_rolebaggoods(int index);
  inline ::sanguo::MsgRoleBagGoods* add_rolebaggoods();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBagGoods >&
      rolebaggoods() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBagGoods >*
      mutable_rolebaggoods();

  // optional uint32 bagCount = 4;
  inline bool has_bagcount() const;
  inline void clear_bagcount();
  static const int kBagCountFieldNumber = 4;
  inline ::google::protobuf::uint32 bagcount() const;
  inline void set_bagcount(::google::protobuf::uint32 value);

  // optional string bagOrder = 5;
  inline bool has_bagorder() const;
  inline void clear_bagorder();
  static const int kBagOrderFieldNumber = 5;
  inline const ::std::string& bagorder() const;
  inline void set_bagorder(const ::std::string& value);
  inline void set_bagorder(const char* value);
  inline void set_bagorder(const char* value, size_t size);
  inline ::std::string* mutable_bagorder();
  inline ::std::string* release_bagorder();
  inline void set_allocated_bagorder(::std::string* bagorder);

  // @@protoc_insertion_point(class_scope:sanguo.GetBagInfoResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_bagcount();
  inline void clear_has_bagcount();
  inline void set_has_bagorder();
  inline void clear_has_bagorder();

  int msgid_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBagGoods > rolebaggoods_;
  ::std::string* bagorder_;
  ::google::protobuf::uint32 bagcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5fbag_5finfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5fbag_5finfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5fbag_5finfo_2eproto();
  friend void protobuf_ShutdownFile_get_5fbag_5finfo_2eproto();

  void InitAsDefaultInstance();
  static GetBagInfoResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// GetBagInfoRequest

// required .sanguo.MsgID msgID = 1;
inline bool GetBagInfoRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBagInfoRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBagInfoRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBagInfoRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetBagInfoRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetBagInfoRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// GetBagInfoResponse

// required .sanguo.MsgID msgID = 1;
inline bool GetBagInfoResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBagInfoResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBagInfoResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBagInfoResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetBagInfoResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetBagInfoResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool GetBagInfoResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBagInfoResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBagInfoResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBagInfoResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode GetBagInfoResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void GetBagInfoResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;
inline int GetBagInfoResponse::rolebaggoods_size() const {
  return rolebaggoods_.size();
}
inline void GetBagInfoResponse::clear_rolebaggoods() {
  rolebaggoods_.Clear();
}
inline const ::sanguo::MsgRoleBagGoods& GetBagInfoResponse::rolebaggoods(int index) const {
  return rolebaggoods_.Get(index);
}
inline ::sanguo::MsgRoleBagGoods* GetBagInfoResponse::mutable_rolebaggoods(int index) {
  return rolebaggoods_.Mutable(index);
}
inline ::sanguo::MsgRoleBagGoods* GetBagInfoResponse::add_rolebaggoods() {
  return rolebaggoods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBagGoods >&
GetBagInfoResponse::rolebaggoods() const {
  return rolebaggoods_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBagGoods >*
GetBagInfoResponse::mutable_rolebaggoods() {
  return &rolebaggoods_;
}

// optional uint32 bagCount = 4;
inline bool GetBagInfoResponse::has_bagcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetBagInfoResponse::set_has_bagcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetBagInfoResponse::clear_has_bagcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetBagInfoResponse::clear_bagcount() {
  bagcount_ = 0u;
  clear_has_bagcount();
}
inline ::google::protobuf::uint32 GetBagInfoResponse::bagcount() const {
  return bagcount_;
}
inline void GetBagInfoResponse::set_bagcount(::google::protobuf::uint32 value) {
  set_has_bagcount();
  bagcount_ = value;
}

// optional string bagOrder = 5;
inline bool GetBagInfoResponse::has_bagorder() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetBagInfoResponse::set_has_bagorder() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetBagInfoResponse::clear_has_bagorder() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetBagInfoResponse::clear_bagorder() {
  if (bagorder_ != &::google::protobuf::internal::kEmptyString) {
    bagorder_->clear();
  }
  clear_has_bagorder();
}
inline const ::std::string& GetBagInfoResponse::bagorder() const {
  return *bagorder_;
}
inline void GetBagInfoResponse::set_bagorder(const ::std::string& value) {
  set_has_bagorder();
  if (bagorder_ == &::google::protobuf::internal::kEmptyString) {
    bagorder_ = new ::std::string;
  }
  bagorder_->assign(value);
}
inline void GetBagInfoResponse::set_bagorder(const char* value) {
  set_has_bagorder();
  if (bagorder_ == &::google::protobuf::internal::kEmptyString) {
    bagorder_ = new ::std::string;
  }
  bagorder_->assign(value);
}
inline void GetBagInfoResponse::set_bagorder(const char* value, size_t size) {
  set_has_bagorder();
  if (bagorder_ == &::google::protobuf::internal::kEmptyString) {
    bagorder_ = new ::std::string;
  }
  bagorder_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetBagInfoResponse::mutable_bagorder() {
  set_has_bagorder();
  if (bagorder_ == &::google::protobuf::internal::kEmptyString) {
    bagorder_ = new ::std::string;
  }
  return bagorder_;
}
inline ::std::string* GetBagInfoResponse::release_bagorder() {
  clear_has_bagorder();
  if (bagorder_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bagorder_;
    bagorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetBagInfoResponse::set_allocated_bagorder(::std::string* bagorder) {
  if (bagorder_ != &::google::protobuf::internal::kEmptyString) {
    delete bagorder_;
  }
  if (bagorder) {
    set_has_bagorder();
    bagorder_ = bagorder;
  } else {
    clear_has_bagorder();
    bagorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_get_5fbag_5finfo_2eproto__INCLUDED
