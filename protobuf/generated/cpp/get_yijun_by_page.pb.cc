// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_yijun_by_page.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "get_yijun_by_page.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sanguo {

void protobuf_ShutdownFile_get_5fyijun_5fby_5fpage_2eproto() {
  delete GetYijunByPageRequest::default_instance_;
  delete GetYijunByPageResponse::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::sanguo::protobuf_AddDesc_msg_5fid_2eproto();
  ::sanguo::protobuf_AddDesc_msg_5fstatus_5fcode_2eproto();
  ::sanguo::protobuf_AddDesc_yijun_2eproto();
  GetYijunByPageRequest::default_instance_ = new GetYijunByPageRequest();
  GetYijunByPageResponse::default_instance_ = new GetYijunByPageResponse();
  GetYijunByPageRequest::default_instance_->InitAsDefaultInstance();
  GetYijunByPageResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_get_5fyijun_5fby_5fpage_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto_once_);
void protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto_once_,
                 &protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_get_5fyijun_5fby_5fpage_2eproto {
  StaticDescriptorInitializer_get_5fyijun_5fby_5fpage_2eproto() {
    protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto();
  }
} static_descriptor_initializer_get_5fyijun_5fby_5fpage_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int GetYijunByPageRequest::kMsgIDFieldNumber;
const int GetYijunByPageRequest::kPageNoFieldNumber;
const int GetYijunByPageRequest::kPageSizeFieldNumber;
const int GetYijunByPageRequest::kTypeFieldNumber;
#endif  // !_MSC_VER

GetYijunByPageRequest::GetYijunByPageRequest()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void GetYijunByPageRequest::InitAsDefaultInstance() {
}

GetYijunByPageRequest::GetYijunByPageRequest(const GetYijunByPageRequest& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void GetYijunByPageRequest::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 1;
  pageno_ = 0u;
  pagesize_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetYijunByPageRequest::~GetYijunByPageRequest() {
  SharedDtor();
}

void GetYijunByPageRequest::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void GetYijunByPageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetYijunByPageRequest& GetYijunByPageRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto();
#endif
  return *default_instance_;
}

GetYijunByPageRequest* GetYijunByPageRequest::default_instance_ = NULL;

GetYijunByPageRequest* GetYijunByPageRequest::New() const {
  return new GetYijunByPageRequest;
}

void GetYijunByPageRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msgid_ = 1;
    pageno_ = 0u;
    pagesize_ = 0u;
    type_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool GetYijunByPageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sanguo.MsgID msgID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sanguo::MsgID_IsValid(value)) {
            set_msgid(static_cast< ::sanguo::MsgID >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pageNo;
        break;
      }

      // required uint32 pageNo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pageNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pageno_)));
          set_has_pageno();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pageSize;
        break;
      }

      // required uint32 pageSize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pageSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pagesize_)));
          set_has_pagesize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // required uint32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetYijunByPageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .sanguo.MsgID msgID = 1;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // required uint32 pageNo = 2;
  if (has_pageno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pageno(), output);
  }

  // required uint32 pageSize = 3;
  if (has_pagesize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pagesize(), output);
  }

  // required uint32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->type(), output);
  }

}

int GetYijunByPageRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .sanguo.MsgID msgID = 1;
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // required uint32 pageNo = 2;
    if (has_pageno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pageno());
    }

    // required uint32 pageSize = 3;
    if (has_pagesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pagesize());
    }

    // required uint32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetYijunByPageRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GetYijunByPageRequest*>(&from));
}

void GetYijunByPageRequest::MergeFrom(const GetYijunByPageRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_pageno()) {
      set_pageno(from.pageno());
    }
    if (from.has_pagesize()) {
      set_pagesize(from.pagesize());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
}

void GetYijunByPageRequest::CopyFrom(const GetYijunByPageRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetYijunByPageRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void GetYijunByPageRequest::Swap(GetYijunByPageRequest* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(pageno_, other->pageno_);
    std::swap(pagesize_, other->pagesize_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string GetYijunByPageRequest::GetTypeName() const {
  return "sanguo.GetYijunByPageRequest";
}


// ===================================================================

#ifndef _MSC_VER
const int GetYijunByPageResponse::kMsgIDFieldNumber;
const int GetYijunByPageResponse::kStatusFieldNumber;
const int GetYijunByPageResponse::kMyYijunIDFieldNumber;
const int GetYijunByPageResponse::kConsumeGoldFieldNumber;
const int GetYijunByPageResponse::kYijunCaptureLastTimeFieldNumber;
const int GetYijunByPageResponse::kPageNoFieldNumber;
const int GetYijunByPageResponse::kSpyCountFieldNumber;
const int GetYijunByPageResponse::kCaptureCountFieldNumber;
const int GetYijunByPageResponse::kCaptureYijunIdFieldNumber;
const int GetYijunByPageResponse::kNextEnterYijunTimeFieldNumber;
const int GetYijunByPageResponse::kYijunFieldNumber;
#endif  // !_MSC_VER

GetYijunByPageResponse::GetYijunByPageResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void GetYijunByPageResponse::InitAsDefaultInstance() {
}

GetYijunByPageResponse::GetYijunByPageResponse(const GetYijunByPageResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void GetYijunByPageResponse::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 1;
  status_ = 0;
  myyijunid_ = GOOGLE_ULONGLONG(0);
  consumegold_ = 0u;
  yijuncapturelasttime_ = GOOGLE_ULONGLONG(0);
  pageno_ = 0u;
  spycount_ = 0u;
  capturecount_ = 0u;
  captureyijunid_ = GOOGLE_ULONGLONG(0);
  nextenteryijuntime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetYijunByPageResponse::~GetYijunByPageResponse() {
  SharedDtor();
}

void GetYijunByPageResponse::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void GetYijunByPageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetYijunByPageResponse& GetYijunByPageResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_get_5fyijun_5fby_5fpage_2eproto();
#endif
  return *default_instance_;
}

GetYijunByPageResponse* GetYijunByPageResponse::default_instance_ = NULL;

GetYijunByPageResponse* GetYijunByPageResponse::New() const {
  return new GetYijunByPageResponse;
}

void GetYijunByPageResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msgid_ = 1;
    status_ = 0;
    myyijunid_ = GOOGLE_ULONGLONG(0);
    consumegold_ = 0u;
    yijuncapturelasttime_ = GOOGLE_ULONGLONG(0);
    pageno_ = 0u;
    spycount_ = 0u;
    capturecount_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    captureyijunid_ = GOOGLE_ULONGLONG(0);
    nextenteryijuntime_ = GOOGLE_ULONGLONG(0);
  }
  yijun_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool GetYijunByPageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sanguo.MsgID msgID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sanguo::MsgID_IsValid(value)) {
            set_msgid(static_cast< ::sanguo::MsgID >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required .sanguo.StatusCode status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sanguo::StatusCode_IsValid(value)) {
            set_status(static_cast< ::sanguo::StatusCode >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_myYijunID;
        break;
      }

      // optional uint64 myYijunID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_myYijunID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &myyijunid_)));
          set_has_myyijunid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_consumeGold;
        break;
      }

      // optional uint32 consumeGold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_consumeGold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consumegold_)));
          set_has_consumegold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_yijunCaptureLastTime;
        break;
      }

      // optional uint64 yijunCaptureLastTime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yijunCaptureLastTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &yijuncapturelasttime_)));
          set_has_yijuncapturelasttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_pageNo;
        break;
      }

      // optional uint32 pageNo = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pageNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pageno_)));
          set_has_pageno();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_spyCount;
        break;
      }

      // optional uint32 spyCount = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_spyCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spycount_)));
          set_has_spycount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_captureCount;
        break;
      }

      // optional uint32 captureCount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_captureCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &capturecount_)));
          set_has_capturecount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_captureYijunId;
        break;
      }

      // optional uint64 captureYijunId = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_captureYijunId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &captureyijunid_)));
          set_has_captureyijunid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_nextEnterYijunTime;
        break;
      }

      // optional uint64 nextEnterYijunTime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nextEnterYijunTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nextenteryijuntime_)));
          set_has_nextenteryijuntime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_yijun;
        break;
      }

      // repeated .sanguo.MsgYijun yijun = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_yijun:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_yijun()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_yijun;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetYijunByPageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .sanguo.MsgID msgID = 1;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // required .sanguo.StatusCode status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional uint64 myYijunID = 3;
  if (has_myyijunid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->myyijunid(), output);
  }

  // optional uint32 consumeGold = 4;
  if (has_consumegold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->consumegold(), output);
  }

  // optional uint64 yijunCaptureLastTime = 5;
  if (has_yijuncapturelasttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->yijuncapturelasttime(), output);
  }

  // optional uint32 pageNo = 6;
  if (has_pageno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pageno(), output);
  }

  // optional uint32 spyCount = 7;
  if (has_spycount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->spycount(), output);
  }

  // optional uint32 captureCount = 8;
  if (has_capturecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->capturecount(), output);
  }

  // optional uint64 captureYijunId = 9;
  if (has_captureyijunid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->captureyijunid(), output);
  }

  // optional uint64 nextEnterYijunTime = 10;
  if (has_nextenteryijuntime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->nextenteryijuntime(), output);
  }

  // repeated .sanguo.MsgYijun yijun = 11;
  for (int i = 0; i < this->yijun_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->yijun(i), output);
  }

}

int GetYijunByPageResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .sanguo.MsgID msgID = 1;
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // required .sanguo.StatusCode status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint64 myYijunID = 3;
    if (has_myyijunid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->myyijunid());
    }

    // optional uint32 consumeGold = 4;
    if (has_consumegold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consumegold());
    }

    // optional uint64 yijunCaptureLastTime = 5;
    if (has_yijuncapturelasttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->yijuncapturelasttime());
    }

    // optional uint32 pageNo = 6;
    if (has_pageno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pageno());
    }

    // optional uint32 spyCount = 7;
    if (has_spycount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spycount());
    }

    // optional uint32 captureCount = 8;
    if (has_capturecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->capturecount());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint64 captureYijunId = 9;
    if (has_captureyijunid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->captureyijunid());
    }

    // optional uint64 nextEnterYijunTime = 10;
    if (has_nextenteryijuntime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nextenteryijuntime());
    }

  }
  // repeated .sanguo.MsgYijun yijun = 11;
  total_size += 1 * this->yijun_size();
  for (int i = 0; i < this->yijun_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->yijun(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetYijunByPageResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GetYijunByPageResponse*>(&from));
}

void GetYijunByPageResponse::MergeFrom(const GetYijunByPageResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  yijun_.MergeFrom(from.yijun_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_myyijunid()) {
      set_myyijunid(from.myyijunid());
    }
    if (from.has_consumegold()) {
      set_consumegold(from.consumegold());
    }
    if (from.has_yijuncapturelasttime()) {
      set_yijuncapturelasttime(from.yijuncapturelasttime());
    }
    if (from.has_pageno()) {
      set_pageno(from.pageno());
    }
    if (from.has_spycount()) {
      set_spycount(from.spycount());
    }
    if (from.has_capturecount()) {
      set_capturecount(from.capturecount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_captureyijunid()) {
      set_captureyijunid(from.captureyijunid());
    }
    if (from.has_nextenteryijuntime()) {
      set_nextenteryijuntime(from.nextenteryijuntime());
    }
  }
}

void GetYijunByPageResponse::CopyFrom(const GetYijunByPageResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetYijunByPageResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < yijun_size(); i++) {
    if (!this->yijun(i).IsInitialized()) return false;
  }
  return true;
}

void GetYijunByPageResponse::Swap(GetYijunByPageResponse* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(status_, other->status_);
    std::swap(myyijunid_, other->myyijunid_);
    std::swap(consumegold_, other->consumegold_);
    std::swap(yijuncapturelasttime_, other->yijuncapturelasttime_);
    std::swap(pageno_, other->pageno_);
    std::swap(spycount_, other->spycount_);
    std::swap(capturecount_, other->capturecount_);
    std::swap(captureyijunid_, other->captureyijunid_);
    std::swap(nextenteryijuntime_, other->nextenteryijuntime_);
    yijun_.Swap(&other->yijun_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string GetYijunByPageResponse::GetTypeName() const {
  return "sanguo.GetYijunByPageResponse";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)
