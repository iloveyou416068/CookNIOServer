// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
// @@protoc_insertion_point(includes)

namespace cook {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class MessagerRequest;
class MessagerResponse;

// ===================================================================

class MessagerRequest : public ::google::protobuf::MessageLite {
 public:
  MessagerRequest();
  virtual ~MessagerRequest();

  MessagerRequest(const MessagerRequest& from);

  inline MessagerRequest& operator=(const MessagerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const MessagerRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessagerRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessagerRequest* other);

  // implements Message ----------------------------------------------

  MessagerRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessagerRequest& from);
  void MergeFrom(const MessagerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .cook.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::cook::MsgID msgid() const;
  inline void set_msgid(::cook::MsgID value);

  // repeated int32 content = 2;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline ::google::protobuf::int32 content(int index) const;
  inline void set_content(int index, ::google::protobuf::int32 value);
  inline void add_content(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      content() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_content();

  // @@protoc_insertion_point(class_scope:cook.MessagerRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > content_;
  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_message_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_message_2eproto();
  #endif
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static MessagerRequest* default_instance_;
};
// -------------------------------------------------------------------

class MessagerResponse : public ::google::protobuf::MessageLite {
 public:
  MessagerResponse();
  virtual ~MessagerResponse();

  MessagerResponse(const MessagerResponse& from);

  inline MessagerResponse& operator=(const MessagerResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const MessagerResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessagerResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessagerResponse* other);

  // implements Message ----------------------------------------------

  MessagerResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessagerResponse& from);
  void MergeFrom(const MessagerResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .cook.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::cook::MsgID msgid() const;
  inline void set_msgid(::cook::MsgID value);

  // repeated int32 content = 2;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline ::google::protobuf::int32 content(int index) const;
  inline void set_content(int index, ::google::protobuf::int32 value);
  inline void add_content(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      content() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_content();

  // @@protoc_insertion_point(class_scope:cook.MessagerResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > content_;
  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_message_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_message_2eproto();
  #endif
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static MessagerResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// MessagerRequest

// required .cook.MsgID msgID = 1;
inline bool MessagerRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessagerRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessagerRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessagerRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::cook::MsgID MessagerRequest::msgid() const {
  return static_cast< ::cook::MsgID >(msgid_);
}
inline void MessagerRequest::set_msgid(::cook::MsgID value) {
  assert(::cook::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated int32 content = 2;
inline int MessagerRequest::content_size() const {
  return content_.size();
}
inline void MessagerRequest::clear_content() {
  content_.Clear();
}
inline ::google::protobuf::int32 MessagerRequest::content(int index) const {
  return content_.Get(index);
}
inline void MessagerRequest::set_content(int index, ::google::protobuf::int32 value) {
  content_.Set(index, value);
}
inline void MessagerRequest::add_content(::google::protobuf::int32 value) {
  content_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MessagerRequest::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MessagerRequest::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// MessagerResponse

// required .cook.MsgID msgID = 1;
inline bool MessagerResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessagerResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessagerResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessagerResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::cook::MsgID MessagerResponse::msgid() const {
  return static_cast< ::cook::MsgID >(msgid_);
}
inline void MessagerResponse::set_msgid(::cook::MsgID value) {
  assert(::cook::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated int32 content = 2;
inline int MessagerResponse::content_size() const {
  return content_.size();
}
inline void MessagerResponse::clear_content() {
  content_.Clear();
}
inline ::google::protobuf::int32 MessagerResponse::content(int index) const {
  return content_.Get(index);
}
inline void MessagerResponse::set_content(int index, ::google::protobuf::int32 value) {
  content_.Set(index, value);
}
inline void MessagerResponse::add_content(::google::protobuf::int32 value) {
  content_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MessagerResponse::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MessagerResponse::mutable_content() {
  return &content_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cook

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
