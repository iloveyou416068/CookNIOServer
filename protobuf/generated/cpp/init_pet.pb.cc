// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init_pet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "init_pet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sanguo {

void protobuf_ShutdownFile_init_5fpet_2eproto() {
  delete InitPetRequest::default_instance_;
  delete InitPetResponse::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_init_5fpet_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_init_5fpet_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::sanguo::protobuf_AddDesc_msg_5fid_2eproto();
  ::sanguo::protobuf_AddDesc_msg_5fstatus_5fcode_2eproto();
  ::sanguo::protobuf_AddDesc_pet_2eproto();
  ::sanguo::protobuf_AddDesc_pet_5fborn_5fegg_2eproto();
  ::sanguo::protobuf_AddDesc_pet_5fcooldown_2eproto();
  InitPetRequest::default_instance_ = new InitPetRequest();
  InitPetResponse::default_instance_ = new InitPetResponse();
  InitPetRequest::default_instance_->InitAsDefaultInstance();
  InitPetResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_init_5fpet_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_init_5fpet_2eproto_once_);
void protobuf_AddDesc_init_5fpet_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_init_5fpet_2eproto_once_,
                 &protobuf_AddDesc_init_5fpet_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_init_5fpet_2eproto {
  StaticDescriptorInitializer_init_5fpet_2eproto() {
    protobuf_AddDesc_init_5fpet_2eproto();
  }
} static_descriptor_initializer_init_5fpet_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int InitPetRequest::kMsgIDFieldNumber;
#endif  // !_MSC_VER

InitPetRequest::InitPetRequest()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void InitPetRequest::InitAsDefaultInstance() {
}

InitPetRequest::InitPetRequest(const InitPetRequest& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void InitPetRequest::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InitPetRequest::~InitPetRequest() {
  SharedDtor();
}

void InitPetRequest::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void InitPetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InitPetRequest& InitPetRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_init_5fpet_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_init_5fpet_2eproto();
#endif
  return *default_instance_;
}

InitPetRequest* InitPetRequest::default_instance_ = NULL;

InitPetRequest* InitPetRequest::New() const {
  return new InitPetRequest;
}

void InitPetRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msgid_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool InitPetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sanguo.MsgID msgID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sanguo::MsgID_IsValid(value)) {
            set_msgid(static_cast< ::sanguo::MsgID >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InitPetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .sanguo.MsgID msgID = 1;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

}

int InitPetRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .sanguo.MsgID msgID = 1;
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitPetRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InitPetRequest*>(&from));
}

void InitPetRequest::MergeFrom(const InitPetRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
}

void InitPetRequest::CopyFrom(const InitPetRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitPetRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void InitPetRequest::Swap(InitPetRequest* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string InitPetRequest::GetTypeName() const {
  return "sanguo.InitPetRequest";
}


// ===================================================================

#ifndef _MSC_VER
const int InitPetResponse::kMsgIDFieldNumber;
const int InitPetResponse::kStatusFieldNumber;
const int InitPetResponse::kPetNumFieldNumber;
const int InitPetResponse::kPetBornEggListFieldNumber;
const int InitPetResponse::kFollowPetListFieldNumber;
const int InitPetResponse::kFollowPetCDListFieldNumber;
#endif  // !_MSC_VER

InitPetResponse::InitPetResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void InitPetResponse::InitAsDefaultInstance() {
}

InitPetResponse::InitPetResponse(const InitPetResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void InitPetResponse::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 1;
  status_ = 0;
  petnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InitPetResponse::~InitPetResponse() {
  SharedDtor();
}

void InitPetResponse::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void InitPetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InitPetResponse& InitPetResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_init_5fpet_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_init_5fpet_2eproto();
#endif
  return *default_instance_;
}

InitPetResponse* InitPetResponse::default_instance_ = NULL;

InitPetResponse* InitPetResponse::New() const {
  return new InitPetResponse;
}

void InitPetResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msgid_ = 1;
    status_ = 0;
    petnum_ = 0u;
  }
  petbornegglist_.Clear();
  followpetlist_.Clear();
  followpetcdlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool InitPetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sanguo.MsgID msgID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sanguo::MsgID_IsValid(value)) {
            set_msgid(static_cast< ::sanguo::MsgID >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required .sanguo.StatusCode status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sanguo::StatusCode_IsValid(value)) {
            set_status(static_cast< ::sanguo::StatusCode >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_petNum;
        break;
      }

      // optional uint32 petNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_petNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &petnum_)));
          set_has_petnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_petBornEggList;
        break;
      }

      // repeated .sanguo.MsgPetBornEgg petBornEggList = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_petBornEggList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_petbornegglist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_petBornEggList;
        if (input->ExpectTag(42)) goto parse_followPetList;
        break;
      }

      // repeated .sanguo.MsgPet followPetList = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_followPetList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_followpetlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_followPetList;
        if (input->ExpectTag(50)) goto parse_followPetCDList;
        break;
      }

      // repeated .sanguo.MsgPetCooldown followPetCDList = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_followPetCDList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_followpetcdlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_followPetCDList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InitPetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .sanguo.MsgID msgID = 1;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // required .sanguo.StatusCode status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional uint32 petNum = 3;
  if (has_petnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->petnum(), output);
  }

  // repeated .sanguo.MsgPetBornEgg petBornEggList = 4;
  for (int i = 0; i < this->petbornegglist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->petbornegglist(i), output);
  }

  // repeated .sanguo.MsgPet followPetList = 5;
  for (int i = 0; i < this->followpetlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->followpetlist(i), output);
  }

  // repeated .sanguo.MsgPetCooldown followPetCDList = 6;
  for (int i = 0; i < this->followpetcdlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->followpetcdlist(i), output);
  }

}

int InitPetResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .sanguo.MsgID msgID = 1;
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // required .sanguo.StatusCode status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint32 petNum = 3;
    if (has_petnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->petnum());
    }

  }
  // repeated .sanguo.MsgPetBornEgg petBornEggList = 4;
  total_size += 1 * this->petbornegglist_size();
  for (int i = 0; i < this->petbornegglist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->petbornegglist(i));
  }

  // repeated .sanguo.MsgPet followPetList = 5;
  total_size += 1 * this->followpetlist_size();
  for (int i = 0; i < this->followpetlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->followpetlist(i));
  }

  // repeated .sanguo.MsgPetCooldown followPetCDList = 6;
  total_size += 1 * this->followpetcdlist_size();
  for (int i = 0; i < this->followpetcdlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->followpetcdlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitPetResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InitPetResponse*>(&from));
}

void InitPetResponse::MergeFrom(const InitPetResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  petbornegglist_.MergeFrom(from.petbornegglist_);
  followpetlist_.MergeFrom(from.followpetlist_);
  followpetcdlist_.MergeFrom(from.followpetcdlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_petnum()) {
      set_petnum(from.petnum());
    }
  }
}

void InitPetResponse::CopyFrom(const InitPetResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitPetResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < petbornegglist_size(); i++) {
    if (!this->petbornegglist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < followpetlist_size(); i++) {
    if (!this->followpetlist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < followpetcdlist_size(); i++) {
    if (!this->followpetcdlist(i).IsInitialized()) return false;
  }
  return true;
}

void InitPetResponse::Swap(InitPetResponse* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(status_, other->status_);
    std::swap(petnum_, other->petnum_);
    petbornegglist_.Swap(&other->petbornegglist_);
    followpetlist_.Swap(&other->followpetlist_);
    followpetcdlist_.Swap(&other->followpetcdlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string InitPetResponse::GetTypeName() const {
  return "sanguo.InitPetResponse";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)
