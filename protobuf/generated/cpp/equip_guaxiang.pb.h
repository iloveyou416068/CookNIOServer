// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equip_guaxiang.proto

#ifndef PROTOBUF_equip_5fguaxiang_2eproto__INCLUDED
#define PROTOBUF_equip_5fguaxiang_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_equip_5fguaxiang_2eproto();
void protobuf_AssignDesc_equip_5fguaxiang_2eproto();
void protobuf_ShutdownFile_equip_5fguaxiang_2eproto();

class EquipGuaxiangRequest;
class EquipGuaxiangResponse;

// ===================================================================

class EquipGuaxiangRequest : public ::google::protobuf::MessageLite {
 public:
  EquipGuaxiangRequest();
  virtual ~EquipGuaxiangRequest();

  EquipGuaxiangRequest(const EquipGuaxiangRequest& from);

  inline EquipGuaxiangRequest& operator=(const EquipGuaxiangRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const EquipGuaxiangRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EquipGuaxiangRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EquipGuaxiangRequest* other);

  // implements Message ----------------------------------------------

  EquipGuaxiangRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EquipGuaxiangRequest& from);
  void MergeFrom(const EquipGuaxiangRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint64 autoIncrID = 2;
  inline bool has_autoincrid() const;
  inline void clear_autoincrid();
  static const int kAutoIncrIDFieldNumber = 2;
  inline ::google::protobuf::uint64 autoincrid() const;
  inline void set_autoincrid(::google::protobuf::uint64 value);

  // required uint32 place = 3;
  inline bool has_place() const;
  inline void clear_place();
  static const int kPlaceFieldNumber = 3;
  inline ::google::protobuf::uint32 place() const;
  inline void set_place(::google::protobuf::uint32 value);

  // required uint32 lastPlace = 4;
  inline bool has_lastplace() const;
  inline void clear_lastplace();
  static const int kLastPlaceFieldNumber = 4;
  inline ::google::protobuf::uint32 lastplace() const;
  inline void set_lastplace(::google::protobuf::uint32 value);

  // required string bagGuaxiangOrder = 5;
  inline bool has_bagguaxiangorder() const;
  inline void clear_bagguaxiangorder();
  static const int kBagGuaxiangOrderFieldNumber = 5;
  inline const ::std::string& bagguaxiangorder() const;
  inline void set_bagguaxiangorder(const ::std::string& value);
  inline void set_bagguaxiangorder(const char* value);
  inline void set_bagguaxiangorder(const char* value, size_t size);
  inline ::std::string* mutable_bagguaxiangorder();
  inline ::std::string* release_bagguaxiangorder();
  inline void set_allocated_bagguaxiangorder(::std::string* bagguaxiangorder);

  // @@protoc_insertion_point(class_scope:sanguo.EquipGuaxiangRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_autoincrid();
  inline void clear_has_autoincrid();
  inline void set_has_place();
  inline void clear_has_place();
  inline void set_has_lastplace();
  inline void clear_has_lastplace();
  inline void set_has_bagguaxiangorder();
  inline void clear_has_bagguaxiangorder();

  ::google::protobuf::uint64 autoincrid_;
  int msgid_;
  ::google::protobuf::uint32 place_;
  ::std::string* bagguaxiangorder_;
  ::google::protobuf::uint32 lastplace_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_equip_5fguaxiang_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_equip_5fguaxiang_2eproto();
  #endif
  friend void protobuf_AssignDesc_equip_5fguaxiang_2eproto();
  friend void protobuf_ShutdownFile_equip_5fguaxiang_2eproto();

  void InitAsDefaultInstance();
  static EquipGuaxiangRequest* default_instance_;
};
// -------------------------------------------------------------------

class EquipGuaxiangResponse : public ::google::protobuf::MessageLite {
 public:
  EquipGuaxiangResponse();
  virtual ~EquipGuaxiangResponse();

  EquipGuaxiangResponse(const EquipGuaxiangResponse& from);

  inline EquipGuaxiangResponse& operator=(const EquipGuaxiangResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const EquipGuaxiangResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EquipGuaxiangResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EquipGuaxiangResponse* other);

  // implements Message ----------------------------------------------

  EquipGuaxiangResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EquipGuaxiangResponse& from);
  void MergeFrom(const EquipGuaxiangResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // @@protoc_insertion_point(class_scope:sanguo.EquipGuaxiangResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();

  int msgid_;
  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_equip_5fguaxiang_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_equip_5fguaxiang_2eproto();
  #endif
  friend void protobuf_AssignDesc_equip_5fguaxiang_2eproto();
  friend void protobuf_ShutdownFile_equip_5fguaxiang_2eproto();

  void InitAsDefaultInstance();
  static EquipGuaxiangResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// EquipGuaxiangRequest

// required .sanguo.MsgID msgID = 1;
inline bool EquipGuaxiangRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipGuaxiangRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipGuaxiangRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipGuaxiangRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID EquipGuaxiangRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void EquipGuaxiangRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint64 autoIncrID = 2;
inline bool EquipGuaxiangRequest::has_autoincrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipGuaxiangRequest::set_has_autoincrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipGuaxiangRequest::clear_has_autoincrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipGuaxiangRequest::clear_autoincrid() {
  autoincrid_ = GOOGLE_ULONGLONG(0);
  clear_has_autoincrid();
}
inline ::google::protobuf::uint64 EquipGuaxiangRequest::autoincrid() const {
  return autoincrid_;
}
inline void EquipGuaxiangRequest::set_autoincrid(::google::protobuf::uint64 value) {
  set_has_autoincrid();
  autoincrid_ = value;
}

// required uint32 place = 3;
inline bool EquipGuaxiangRequest::has_place() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipGuaxiangRequest::set_has_place() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipGuaxiangRequest::clear_has_place() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipGuaxiangRequest::clear_place() {
  place_ = 0u;
  clear_has_place();
}
inline ::google::protobuf::uint32 EquipGuaxiangRequest::place() const {
  return place_;
}
inline void EquipGuaxiangRequest::set_place(::google::protobuf::uint32 value) {
  set_has_place();
  place_ = value;
}

// required uint32 lastPlace = 4;
inline bool EquipGuaxiangRequest::has_lastplace() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipGuaxiangRequest::set_has_lastplace() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipGuaxiangRequest::clear_has_lastplace() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipGuaxiangRequest::clear_lastplace() {
  lastplace_ = 0u;
  clear_has_lastplace();
}
inline ::google::protobuf::uint32 EquipGuaxiangRequest::lastplace() const {
  return lastplace_;
}
inline void EquipGuaxiangRequest::set_lastplace(::google::protobuf::uint32 value) {
  set_has_lastplace();
  lastplace_ = value;
}

// required string bagGuaxiangOrder = 5;
inline bool EquipGuaxiangRequest::has_bagguaxiangorder() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipGuaxiangRequest::set_has_bagguaxiangorder() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipGuaxiangRequest::clear_has_bagguaxiangorder() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipGuaxiangRequest::clear_bagguaxiangorder() {
  if (bagguaxiangorder_ != &::google::protobuf::internal::kEmptyString) {
    bagguaxiangorder_->clear();
  }
  clear_has_bagguaxiangorder();
}
inline const ::std::string& EquipGuaxiangRequest::bagguaxiangorder() const {
  return *bagguaxiangorder_;
}
inline void EquipGuaxiangRequest::set_bagguaxiangorder(const ::std::string& value) {
  set_has_bagguaxiangorder();
  if (bagguaxiangorder_ == &::google::protobuf::internal::kEmptyString) {
    bagguaxiangorder_ = new ::std::string;
  }
  bagguaxiangorder_->assign(value);
}
inline void EquipGuaxiangRequest::set_bagguaxiangorder(const char* value) {
  set_has_bagguaxiangorder();
  if (bagguaxiangorder_ == &::google::protobuf::internal::kEmptyString) {
    bagguaxiangorder_ = new ::std::string;
  }
  bagguaxiangorder_->assign(value);
}
inline void EquipGuaxiangRequest::set_bagguaxiangorder(const char* value, size_t size) {
  set_has_bagguaxiangorder();
  if (bagguaxiangorder_ == &::google::protobuf::internal::kEmptyString) {
    bagguaxiangorder_ = new ::std::string;
  }
  bagguaxiangorder_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EquipGuaxiangRequest::mutable_bagguaxiangorder() {
  set_has_bagguaxiangorder();
  if (bagguaxiangorder_ == &::google::protobuf::internal::kEmptyString) {
    bagguaxiangorder_ = new ::std::string;
  }
  return bagguaxiangorder_;
}
inline ::std::string* EquipGuaxiangRequest::release_bagguaxiangorder() {
  clear_has_bagguaxiangorder();
  if (bagguaxiangorder_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bagguaxiangorder_;
    bagguaxiangorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void EquipGuaxiangRequest::set_allocated_bagguaxiangorder(::std::string* bagguaxiangorder) {
  if (bagguaxiangorder_ != &::google::protobuf::internal::kEmptyString) {
    delete bagguaxiangorder_;
  }
  if (bagguaxiangorder) {
    set_has_bagguaxiangorder();
    bagguaxiangorder_ = bagguaxiangorder;
  } else {
    clear_has_bagguaxiangorder();
    bagguaxiangorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// EquipGuaxiangResponse

// required .sanguo.MsgID msgID = 1;
inline bool EquipGuaxiangResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipGuaxiangResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipGuaxiangResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipGuaxiangResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID EquipGuaxiangResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void EquipGuaxiangResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool EquipGuaxiangResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipGuaxiangResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipGuaxiangResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipGuaxiangResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode EquipGuaxiangResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void EquipGuaxiangResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_equip_5fguaxiang_2eproto__INCLUDED
