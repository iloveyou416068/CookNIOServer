// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_kungfu_slot.proto

#ifndef PROTOBUF_get_5fkungfu_5fslot_2eproto__INCLUDED
#define PROTOBUF_get_5fkungfu_5fslot_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "kungfu_slot_child.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_get_5fkungfu_5fslot_2eproto();
void protobuf_AssignDesc_get_5fkungfu_5fslot_2eproto();
void protobuf_ShutdownFile_get_5fkungfu_5fslot_2eproto();

class GetKungfuSlotRequest;
class GetKungfuSlotResponse;

// ===================================================================

class GetKungfuSlotRequest : public ::google::protobuf::MessageLite {
 public:
  GetKungfuSlotRequest();
  virtual ~GetKungfuSlotRequest();

  GetKungfuSlotRequest(const GetKungfuSlotRequest& from);

  inline GetKungfuSlotRequest& operator=(const GetKungfuSlotRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetKungfuSlotRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetKungfuSlotRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetKungfuSlotRequest* other);

  // implements Message ----------------------------------------------

  GetKungfuSlotRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetKungfuSlotRequest& from);
  void MergeFrom(const GetKungfuSlotRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint64 roleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.GetKungfuSlotRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::uint64 roleid_;
  int msgid_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5fkungfu_5fslot_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5fkungfu_5fslot_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5fkungfu_5fslot_2eproto();
  friend void protobuf_ShutdownFile_get_5fkungfu_5fslot_2eproto();

  void InitAsDefaultInstance();
  static GetKungfuSlotRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetKungfuSlotResponse : public ::google::protobuf::MessageLite {
 public:
  GetKungfuSlotResponse();
  virtual ~GetKungfuSlotResponse();

  GetKungfuSlotResponse(const GetKungfuSlotResponse& from);

  inline GetKungfuSlotResponse& operator=(const GetKungfuSlotResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetKungfuSlotResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetKungfuSlotResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetKungfuSlotResponse* other);

  // implements Message ----------------------------------------------

  GetKungfuSlotResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetKungfuSlotResponse& from);
  void MergeFrom(const GetKungfuSlotResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint64 roleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated .sanguo.MsgKungfuSlotChild kungfuSlotA = 5;
  inline int kungfuslota_size() const;
  inline void clear_kungfuslota();
  static const int kKungfuSlotAFieldNumber = 5;
  inline const ::sanguo::MsgKungfuSlotChild& kungfuslota(int index) const;
  inline ::sanguo::MsgKungfuSlotChild* mutable_kungfuslota(int index);
  inline ::sanguo::MsgKungfuSlotChild* add_kungfuslota();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >&
      kungfuslota() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >*
      mutable_kungfuslota();

  // repeated .sanguo.MsgKungfuSlotChild kungfuSlotB = 6;
  inline int kungfuslotb_size() const;
  inline void clear_kungfuslotb();
  static const int kKungfuSlotBFieldNumber = 6;
  inline const ::sanguo::MsgKungfuSlotChild& kungfuslotb(int index) const;
  inline ::sanguo::MsgKungfuSlotChild* mutable_kungfuslotb(int index);
  inline ::sanguo::MsgKungfuSlotChild* add_kungfuslotb();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >&
      kungfuslotb() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >*
      mutable_kungfuslotb();

  // repeated .sanguo.MsgKungfuSlotChild kungfuSlotC = 7;
  inline int kungfuslotc_size() const;
  inline void clear_kungfuslotc();
  static const int kKungfuSlotCFieldNumber = 7;
  inline const ::sanguo::MsgKungfuSlotChild& kungfuslotc(int index) const;
  inline ::sanguo::MsgKungfuSlotChild* mutable_kungfuslotc(int index);
  inline ::sanguo::MsgKungfuSlotChild* add_kungfuslotc();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >&
      kungfuslotc() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >*
      mutable_kungfuslotc();

  // @@protoc_insertion_point(class_scope:sanguo.GetKungfuSlotResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_type();
  inline void clear_has_type();

  int msgid_;
  int status_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild > kungfuslota_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild > kungfuslotb_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild > kungfuslotc_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5fkungfu_5fslot_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5fkungfu_5fslot_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5fkungfu_5fslot_2eproto();
  friend void protobuf_ShutdownFile_get_5fkungfu_5fslot_2eproto();

  void InitAsDefaultInstance();
  static GetKungfuSlotResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// GetKungfuSlotRequest

// required .sanguo.MsgID msgID = 1;
inline bool GetKungfuSlotRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetKungfuSlotRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetKungfuSlotRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetKungfuSlotRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetKungfuSlotRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetKungfuSlotRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint64 roleID = 2;
inline bool GetKungfuSlotRequest::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetKungfuSlotRequest::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetKungfuSlotRequest::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetKungfuSlotRequest::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 GetKungfuSlotRequest::roleid() const {
  return roleid_;
}
inline void GetKungfuSlotRequest::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required uint32 type = 3;
inline bool GetKungfuSlotRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetKungfuSlotRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetKungfuSlotRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetKungfuSlotRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetKungfuSlotRequest::type() const {
  return type_;
}
inline void GetKungfuSlotRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GetKungfuSlotResponse

// required .sanguo.MsgID msgID = 1;
inline bool GetKungfuSlotResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetKungfuSlotResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetKungfuSlotResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetKungfuSlotResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetKungfuSlotResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetKungfuSlotResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool GetKungfuSlotResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetKungfuSlotResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetKungfuSlotResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetKungfuSlotResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode GetKungfuSlotResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void GetKungfuSlotResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint64 roleID = 3;
inline bool GetKungfuSlotResponse::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetKungfuSlotResponse::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetKungfuSlotResponse::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetKungfuSlotResponse::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 GetKungfuSlotResponse::roleid() const {
  return roleid_;
}
inline void GetKungfuSlotResponse::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required uint32 type = 4;
inline bool GetKungfuSlotResponse::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetKungfuSlotResponse::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetKungfuSlotResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetKungfuSlotResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetKungfuSlotResponse::type() const {
  return type_;
}
inline void GetKungfuSlotResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// repeated .sanguo.MsgKungfuSlotChild kungfuSlotA = 5;
inline int GetKungfuSlotResponse::kungfuslota_size() const {
  return kungfuslota_.size();
}
inline void GetKungfuSlotResponse::clear_kungfuslota() {
  kungfuslota_.Clear();
}
inline const ::sanguo::MsgKungfuSlotChild& GetKungfuSlotResponse::kungfuslota(int index) const {
  return kungfuslota_.Get(index);
}
inline ::sanguo::MsgKungfuSlotChild* GetKungfuSlotResponse::mutable_kungfuslota(int index) {
  return kungfuslota_.Mutable(index);
}
inline ::sanguo::MsgKungfuSlotChild* GetKungfuSlotResponse::add_kungfuslota() {
  return kungfuslota_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >&
GetKungfuSlotResponse::kungfuslota() const {
  return kungfuslota_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >*
GetKungfuSlotResponse::mutable_kungfuslota() {
  return &kungfuslota_;
}

// repeated .sanguo.MsgKungfuSlotChild kungfuSlotB = 6;
inline int GetKungfuSlotResponse::kungfuslotb_size() const {
  return kungfuslotb_.size();
}
inline void GetKungfuSlotResponse::clear_kungfuslotb() {
  kungfuslotb_.Clear();
}
inline const ::sanguo::MsgKungfuSlotChild& GetKungfuSlotResponse::kungfuslotb(int index) const {
  return kungfuslotb_.Get(index);
}
inline ::sanguo::MsgKungfuSlotChild* GetKungfuSlotResponse::mutable_kungfuslotb(int index) {
  return kungfuslotb_.Mutable(index);
}
inline ::sanguo::MsgKungfuSlotChild* GetKungfuSlotResponse::add_kungfuslotb() {
  return kungfuslotb_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >&
GetKungfuSlotResponse::kungfuslotb() const {
  return kungfuslotb_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >*
GetKungfuSlotResponse::mutable_kungfuslotb() {
  return &kungfuslotb_;
}

// repeated .sanguo.MsgKungfuSlotChild kungfuSlotC = 7;
inline int GetKungfuSlotResponse::kungfuslotc_size() const {
  return kungfuslotc_.size();
}
inline void GetKungfuSlotResponse::clear_kungfuslotc() {
  kungfuslotc_.Clear();
}
inline const ::sanguo::MsgKungfuSlotChild& GetKungfuSlotResponse::kungfuslotc(int index) const {
  return kungfuslotc_.Get(index);
}
inline ::sanguo::MsgKungfuSlotChild* GetKungfuSlotResponse::mutable_kungfuslotc(int index) {
  return kungfuslotc_.Mutable(index);
}
inline ::sanguo::MsgKungfuSlotChild* GetKungfuSlotResponse::add_kungfuslotc() {
  return kungfuslotc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >&
GetKungfuSlotResponse::kungfuslotc() const {
  return kungfuslotc_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgKungfuSlotChild >*
GetKungfuSlotResponse::mutable_kungfuslotc() {
  return &kungfuslotc_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_get_5fkungfu_5fslot_2eproto__INCLUDED
