// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_recharge_info.proto

#ifndef PROTOBUF_get_5frecharge_5finfo_2eproto__INCLUDED
#define PROTOBUF_get_5frecharge_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "constants.pb.h"
#include "recharge_info.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_get_5frecharge_5finfo_2eproto();
void protobuf_AssignDesc_get_5frecharge_5finfo_2eproto();
void protobuf_ShutdownFile_get_5frecharge_5finfo_2eproto();

class GetRechargeInfoRequest;
class GetRechargeInfoResponse;

// ===================================================================

class GetRechargeInfoRequest : public ::google::protobuf::MessageLite {
 public:
  GetRechargeInfoRequest();
  virtual ~GetRechargeInfoRequest();

  GetRechargeInfoRequest(const GetRechargeInfoRequest& from);

  inline GetRechargeInfoRequest& operator=(const GetRechargeInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetRechargeInfoRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRechargeInfoRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRechargeInfoRequest* other);

  // implements Message ----------------------------------------------

  GetRechargeInfoRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetRechargeInfoRequest& from);
  void MergeFrom(const GetRechargeInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.GetRechargeInfoRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5frecharge_5finfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5frecharge_5finfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5frecharge_5finfo_2eproto();
  friend void protobuf_ShutdownFile_get_5frecharge_5finfo_2eproto();

  void InitAsDefaultInstance();
  static GetRechargeInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetRechargeInfoResponse : public ::google::protobuf::MessageLite {
 public:
  GetRechargeInfoResponse();
  virtual ~GetRechargeInfoResponse();

  GetRechargeInfoResponse(const GetRechargeInfoResponse& from);

  inline GetRechargeInfoResponse& operator=(const GetRechargeInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetRechargeInfoResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRechargeInfoResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRechargeInfoResponse* other);

  // implements Message ----------------------------------------------

  GetRechargeInfoResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetRechargeInfoResponse& from);
  void MergeFrom(const GetRechargeInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 recharge = 3;
  inline bool has_recharge() const;
  inline void clear_recharge();
  static const int kRechargeFieldNumber = 3;
  inline ::google::protobuf::uint32 recharge() const;
  inline void set_recharge(::google::protobuf::uint32 value);

  // repeated .sanguo.MsgRechargeInfo rechargeInfo = 4;
  inline int rechargeinfo_size() const;
  inline void clear_rechargeinfo();
  static const int kRechargeInfoFieldNumber = 4;
  inline const ::sanguo::MsgRechargeInfo& rechargeinfo(int index) const;
  inline ::sanguo::MsgRechargeInfo* mutable_rechargeinfo(int index);
  inline ::sanguo::MsgRechargeInfo* add_rechargeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRechargeInfo >&
      rechargeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRechargeInfo >*
      mutable_rechargeinfo();

  // @@protoc_insertion_point(class_scope:sanguo.GetRechargeInfoResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_recharge();
  inline void clear_has_recharge();

  int msgid_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRechargeInfo > rechargeinfo_;
  ::google::protobuf::uint32 recharge_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5frecharge_5finfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5frecharge_5finfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5frecharge_5finfo_2eproto();
  friend void protobuf_ShutdownFile_get_5frecharge_5finfo_2eproto();

  void InitAsDefaultInstance();
  static GetRechargeInfoResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// GetRechargeInfoRequest

// required .sanguo.MsgID msgID = 1;
inline bool GetRechargeInfoRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRechargeInfoRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRechargeInfoRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRechargeInfoRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetRechargeInfoRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetRechargeInfoRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// GetRechargeInfoResponse

// required .sanguo.MsgID msgID = 1;
inline bool GetRechargeInfoResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRechargeInfoResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRechargeInfoResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRechargeInfoResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetRechargeInfoResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetRechargeInfoResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool GetRechargeInfoResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRechargeInfoResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRechargeInfoResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRechargeInfoResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode GetRechargeInfoResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void GetRechargeInfoResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 recharge = 3;
inline bool GetRechargeInfoResponse::has_recharge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRechargeInfoResponse::set_has_recharge() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRechargeInfoResponse::clear_has_recharge() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRechargeInfoResponse::clear_recharge() {
  recharge_ = 0u;
  clear_has_recharge();
}
inline ::google::protobuf::uint32 GetRechargeInfoResponse::recharge() const {
  return recharge_;
}
inline void GetRechargeInfoResponse::set_recharge(::google::protobuf::uint32 value) {
  set_has_recharge();
  recharge_ = value;
}

// repeated .sanguo.MsgRechargeInfo rechargeInfo = 4;
inline int GetRechargeInfoResponse::rechargeinfo_size() const {
  return rechargeinfo_.size();
}
inline void GetRechargeInfoResponse::clear_rechargeinfo() {
  rechargeinfo_.Clear();
}
inline const ::sanguo::MsgRechargeInfo& GetRechargeInfoResponse::rechargeinfo(int index) const {
  return rechargeinfo_.Get(index);
}
inline ::sanguo::MsgRechargeInfo* GetRechargeInfoResponse::mutable_rechargeinfo(int index) {
  return rechargeinfo_.Mutable(index);
}
inline ::sanguo::MsgRechargeInfo* GetRechargeInfoResponse::add_rechargeinfo() {
  return rechargeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRechargeInfo >&
GetRechargeInfoResponse::rechargeinfo() const {
  return rechargeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRechargeInfo >*
GetRechargeInfoResponse::mutable_rechargeinfo() {
  return &rechargeinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_get_5frecharge_5finfo_2eproto__INCLUDED
