// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_invite_list.proto

#ifndef PROTOBUF_get_5finvite_5flist_2eproto__INCLUDED
#define PROTOBUF_get_5finvite_5flist_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_get_5finvite_5flist_2eproto();
void protobuf_AssignDesc_get_5finvite_5flist_2eproto();
void protobuf_ShutdownFile_get_5finvite_5flist_2eproto();

class GetInviteListRequest;
class GetInviteListResponse;
class MsgInviteInfoData;

// ===================================================================

class GetInviteListRequest : public ::google::protobuf::MessageLite {
 public:
  GetInviteListRequest();
  virtual ~GetInviteListRequest();

  GetInviteListRequest(const GetInviteListRequest& from);

  inline GetInviteListRequest& operator=(const GetInviteListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetInviteListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetInviteListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetInviteListRequest* other);

  // implements Message ----------------------------------------------

  GetInviteListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetInviteListRequest& from);
  void MergeFrom(const GetInviteListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.GetInviteListRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5finvite_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5finvite_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5finvite_5flist_2eproto();
  friend void protobuf_ShutdownFile_get_5finvite_5flist_2eproto();

  void InitAsDefaultInstance();
  static GetInviteListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetInviteListResponse : public ::google::protobuf::MessageLite {
 public:
  GetInviteListResponse();
  virtual ~GetInviteListResponse();

  GetInviteListResponse(const GetInviteListResponse& from);

  inline GetInviteListResponse& operator=(const GetInviteListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetInviteListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetInviteListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetInviteListResponse* other);

  // implements Message ----------------------------------------------

  GetInviteListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetInviteListResponse& from);
  void MergeFrom(const GetInviteListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // repeated .sanguo.MsgInviteInfoData inviteInfoData = 3;
  inline int inviteinfodata_size() const;
  inline void clear_inviteinfodata();
  static const int kInviteInfoDataFieldNumber = 3;
  inline const ::sanguo::MsgInviteInfoData& inviteinfodata(int index) const;
  inline ::sanguo::MsgInviteInfoData* mutable_inviteinfodata(int index);
  inline ::sanguo::MsgInviteInfoData* add_inviteinfodata();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgInviteInfoData >&
      inviteinfodata() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgInviteInfoData >*
      mutable_inviteinfodata();

  // @@protoc_insertion_point(class_scope:sanguo.GetInviteListResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();

  int msgid_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgInviteInfoData > inviteinfodata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5finvite_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5finvite_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5finvite_5flist_2eproto();
  friend void protobuf_ShutdownFile_get_5finvite_5flist_2eproto();

  void InitAsDefaultInstance();
  static GetInviteListResponse* default_instance_;
};
// -------------------------------------------------------------------

class MsgInviteInfoData : public ::google::protobuf::MessageLite {
 public:
  MsgInviteInfoData();
  virtual ~MsgInviteInfoData();

  MsgInviteInfoData(const MsgInviteInfoData& from);

  inline MsgInviteInfoData& operator=(const MsgInviteInfoData& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgInviteInfoData& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgInviteInfoData* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgInviteInfoData* other);

  // implements Message ----------------------------------------------

  MsgInviteInfoData* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgInviteInfoData& from);
  void MergeFrom(const MsgInviteInfoData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 relationtype = 3;
  inline bool has_relationtype() const;
  inline void clear_relationtype();
  static const int kRelationtypeFieldNumber = 3;
  inline ::google::protobuf::uint32 relationtype() const;
  inline void set_relationtype(::google::protobuf::uint32 value);

  // required uint32 fight = 4;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 4;
  inline ::google::protobuf::uint32 fight() const;
  inline void set_fight(::google::protobuf::uint32 value);

  // required uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 profession = 6;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 6;
  inline ::google::protobuf::uint32 profession() const;
  inline void set_profession(::google::protobuf::uint32 value);

  // required uint32 friendShip = 7;
  inline bool has_friendship() const;
  inline void clear_friendship();
  static const int kFriendShipFieldNumber = 7;
  inline ::google::protobuf::uint32 friendship() const;
  inline void set_friendship(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.MsgInviteInfoData)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_relationtype();
  inline void clear_has_relationtype();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_friendship();
  inline void clear_has_friendship();

  ::google::protobuf::uint64 roleid_;
  ::std::string* name_;
  ::google::protobuf::uint32 relationtype_;
  ::google::protobuf::uint32 fight_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint32 friendship_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5finvite_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5finvite_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5finvite_5flist_2eproto();
  friend void protobuf_ShutdownFile_get_5finvite_5flist_2eproto();

  void InitAsDefaultInstance();
  static MsgInviteInfoData* default_instance_;
};
// ===================================================================


// ===================================================================

// GetInviteListRequest

// required .sanguo.MsgID msgID = 1;
inline bool GetInviteListRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInviteListRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInviteListRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInviteListRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetInviteListRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetInviteListRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// GetInviteListResponse

// required .sanguo.MsgID msgID = 1;
inline bool GetInviteListResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInviteListResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInviteListResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInviteListResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetInviteListResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetInviteListResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool GetInviteListResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetInviteListResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetInviteListResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetInviteListResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode GetInviteListResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void GetInviteListResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// repeated .sanguo.MsgInviteInfoData inviteInfoData = 3;
inline int GetInviteListResponse::inviteinfodata_size() const {
  return inviteinfodata_.size();
}
inline void GetInviteListResponse::clear_inviteinfodata() {
  inviteinfodata_.Clear();
}
inline const ::sanguo::MsgInviteInfoData& GetInviteListResponse::inviteinfodata(int index) const {
  return inviteinfodata_.Get(index);
}
inline ::sanguo::MsgInviteInfoData* GetInviteListResponse::mutable_inviteinfodata(int index) {
  return inviteinfodata_.Mutable(index);
}
inline ::sanguo::MsgInviteInfoData* GetInviteListResponse::add_inviteinfodata() {
  return inviteinfodata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgInviteInfoData >&
GetInviteListResponse::inviteinfodata() const {
  return inviteinfodata_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgInviteInfoData >*
GetInviteListResponse::mutable_inviteinfodata() {
  return &inviteinfodata_;
}

// -------------------------------------------------------------------

// MsgInviteInfoData

// required uint64 roleid = 1;
inline bool MsgInviteInfoData::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgInviteInfoData::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgInviteInfoData::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgInviteInfoData::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 MsgInviteInfoData::roleid() const {
  return roleid_;
}
inline void MsgInviteInfoData::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string name = 2;
inline bool MsgInviteInfoData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgInviteInfoData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgInviteInfoData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgInviteInfoData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgInviteInfoData::name() const {
  return *name_;
}
inline void MsgInviteInfoData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgInviteInfoData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgInviteInfoData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgInviteInfoData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MsgInviteInfoData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgInviteInfoData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 relationtype = 3;
inline bool MsgInviteInfoData::has_relationtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgInviteInfoData::set_has_relationtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgInviteInfoData::clear_has_relationtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgInviteInfoData::clear_relationtype() {
  relationtype_ = 0u;
  clear_has_relationtype();
}
inline ::google::protobuf::uint32 MsgInviteInfoData::relationtype() const {
  return relationtype_;
}
inline void MsgInviteInfoData::set_relationtype(::google::protobuf::uint32 value) {
  set_has_relationtype();
  relationtype_ = value;
}

// required uint32 fight = 4;
inline bool MsgInviteInfoData::has_fight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgInviteInfoData::set_has_fight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgInviteInfoData::clear_has_fight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgInviteInfoData::clear_fight() {
  fight_ = 0u;
  clear_has_fight();
}
inline ::google::protobuf::uint32 MsgInviteInfoData::fight() const {
  return fight_;
}
inline void MsgInviteInfoData::set_fight(::google::protobuf::uint32 value) {
  set_has_fight();
  fight_ = value;
}

// required uint32 level = 5;
inline bool MsgInviteInfoData::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgInviteInfoData::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgInviteInfoData::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgInviteInfoData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MsgInviteInfoData::level() const {
  return level_;
}
inline void MsgInviteInfoData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 profession = 6;
inline bool MsgInviteInfoData::has_profession() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgInviteInfoData::set_has_profession() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgInviteInfoData::clear_has_profession() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgInviteInfoData::clear_profession() {
  profession_ = 0u;
  clear_has_profession();
}
inline ::google::protobuf::uint32 MsgInviteInfoData::profession() const {
  return profession_;
}
inline void MsgInviteInfoData::set_profession(::google::protobuf::uint32 value) {
  set_has_profession();
  profession_ = value;
}

// required uint32 friendShip = 7;
inline bool MsgInviteInfoData::has_friendship() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgInviteInfoData::set_has_friendship() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgInviteInfoData::clear_has_friendship() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgInviteInfoData::clear_friendship() {
  friendship_ = 0u;
  clear_has_friendship();
}
inline ::google::protobuf::uint32 MsgInviteInfoData::friendship() const {
  return friendship_;
}
inline void MsgInviteInfoData::set_friendship(::google::protobuf::uint32 value) {
  set_has_friendship();
  friendship_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_get_5finvite_5flist_2eproto__INCLUDED
