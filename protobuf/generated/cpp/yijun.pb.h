// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yijun.proto

#ifndef PROTOBUF_yijun_2eproto__INCLUDED
#define PROTOBUF_yijun_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "constants.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_yijun_2eproto();
void protobuf_AssignDesc_yijun_2eproto();
void protobuf_ShutdownFile_yijun_2eproto();

class MsgYijun;

// ===================================================================

class MsgYijun : public ::google::protobuf::MessageLite {
 public:
  MsgYijun();
  virtual ~MsgYijun();

  MsgYijun(const MsgYijun& from);

  inline MsgYijun& operator=(const MsgYijun& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgYijun& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgYijun* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgYijun* other);

  // implements Message ----------------------------------------------

  MsgYijun* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgYijun& from);
  void MergeFrom(const MsgYijun& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 memberCount = 4;
  inline bool has_membercount() const;
  inline void clear_membercount();
  static const int kMemberCountFieldNumber = 4;
  inline ::google::protobuf::uint32 membercount() const;
  inline void set_membercount(::google::protobuf::uint32 value);

  // required uint64 wealth = 5;
  inline bool has_wealth() const;
  inline void clear_wealth();
  static const int kWealthFieldNumber = 5;
  inline ::google::protobuf::uint64 wealth() const;
  inline void set_wealth(::google::protobuf::uint64 value);

  // required uint64 wealthPD = 6;
  inline bool has_wealthpd() const;
  inline void clear_wealthpd();
  static const int kWealthPDFieldNumber = 6;
  inline ::google::protobuf::uint64 wealthpd() const;
  inline void set_wealthpd(::google::protobuf::uint64 value);

  // required uint64 marshalID = 7;
  inline bool has_marshalid() const;
  inline void clear_marshalid();
  static const int kMarshalIDFieldNumber = 7;
  inline ::google::protobuf::uint64 marshalid() const;
  inline void set_marshalid(::google::protobuf::uint64 value);

  // required string marshalName = 8;
  inline bool has_marshalname() const;
  inline void clear_marshalname();
  static const int kMarshalNameFieldNumber = 8;
  inline const ::std::string& marshalname() const;
  inline void set_marshalname(const ::std::string& value);
  inline void set_marshalname(const char* value);
  inline void set_marshalname(const char* value, size_t size);
  inline ::std::string* mutable_marshalname();
  inline ::std::string* release_marshalname();
  inline void set_allocated_marshalname(::std::string* marshalname);

  // required uint32 applied = 9;
  inline bool has_applied() const;
  inline void clear_applied();
  static const int kAppliedFieldNumber = 9;
  inline ::google::protobuf::uint32 applied() const;
  inline void set_applied(::google::protobuf::uint32 value);

  // optional uint64 generalAID = 10;
  inline bool has_generalaid() const;
  inline void clear_generalaid();
  static const int kGeneralAIDFieldNumber = 10;
  inline ::google::protobuf::uint64 generalaid() const;
  inline void set_generalaid(::google::protobuf::uint64 value);

  // optional uint64 generalBID = 11;
  inline bool has_generalbid() const;
  inline void clear_generalbid();
  static const int kGeneralBIDFieldNumber = 11;
  inline ::google::protobuf::uint64 generalbid() const;
  inline void set_generalbid(::google::protobuf::uint64 value);

  // optional string notice = 12;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 12;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // optional sint64 spyWealthPD = 13;
  inline bool has_spywealthpd() const;
  inline void clear_spywealthpd();
  static const int kSpyWealthPDFieldNumber = 13;
  inline ::google::protobuf::int64 spywealthpd() const;
  inline void set_spywealthpd(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sanguo.MsgYijun)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_membercount();
  inline void clear_has_membercount();
  inline void set_has_wealth();
  inline void clear_has_wealth();
  inline void set_has_wealthpd();
  inline void clear_has_wealthpd();
  inline void set_has_marshalid();
  inline void clear_has_marshalid();
  inline void set_has_marshalname();
  inline void clear_has_marshalname();
  inline void set_has_applied();
  inline void clear_has_applied();
  inline void set_has_generalaid();
  inline void clear_has_generalaid();
  inline void set_has_generalbid();
  inline void clear_has_generalbid();
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_spywealthpd();
  inline void clear_has_spywealthpd();

  ::google::protobuf::uint64 id_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 membercount_;
  ::google::protobuf::uint64 wealth_;
  ::google::protobuf::uint64 wealthpd_;
  ::google::protobuf::uint64 marshalid_;
  ::std::string* marshalname_;
  ::google::protobuf::uint64 generalaid_;
  ::google::protobuf::uint64 generalbid_;
  ::std::string* notice_;
  ::google::protobuf::int64 spywealthpd_;
  ::google::protobuf::uint32 applied_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_yijun_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_yijun_2eproto();
  #endif
  friend void protobuf_AssignDesc_yijun_2eproto();
  friend void protobuf_ShutdownFile_yijun_2eproto();

  void InitAsDefaultInstance();
  static MsgYijun* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgYijun

// required uint64 id = 1;
inline bool MsgYijun::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgYijun::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgYijun::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgYijun::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MsgYijun::id() const {
  return id_;
}
inline void MsgYijun::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required string name = 2;
inline bool MsgYijun::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgYijun::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgYijun::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgYijun::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgYijun::name() const {
  return *name_;
}
inline void MsgYijun::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgYijun::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgYijun::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgYijun::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MsgYijun::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgYijun::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 level = 3;
inline bool MsgYijun::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgYijun::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgYijun::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgYijun::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MsgYijun::level() const {
  return level_;
}
inline void MsgYijun::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 memberCount = 4;
inline bool MsgYijun::has_membercount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgYijun::set_has_membercount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgYijun::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgYijun::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 MsgYijun::membercount() const {
  return membercount_;
}
inline void MsgYijun::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
}

// required uint64 wealth = 5;
inline bool MsgYijun::has_wealth() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgYijun::set_has_wealth() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgYijun::clear_has_wealth() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgYijun::clear_wealth() {
  wealth_ = GOOGLE_ULONGLONG(0);
  clear_has_wealth();
}
inline ::google::protobuf::uint64 MsgYijun::wealth() const {
  return wealth_;
}
inline void MsgYijun::set_wealth(::google::protobuf::uint64 value) {
  set_has_wealth();
  wealth_ = value;
}

// required uint64 wealthPD = 6;
inline bool MsgYijun::has_wealthpd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgYijun::set_has_wealthpd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgYijun::clear_has_wealthpd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgYijun::clear_wealthpd() {
  wealthpd_ = GOOGLE_ULONGLONG(0);
  clear_has_wealthpd();
}
inline ::google::protobuf::uint64 MsgYijun::wealthpd() const {
  return wealthpd_;
}
inline void MsgYijun::set_wealthpd(::google::protobuf::uint64 value) {
  set_has_wealthpd();
  wealthpd_ = value;
}

// required uint64 marshalID = 7;
inline bool MsgYijun::has_marshalid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgYijun::set_has_marshalid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgYijun::clear_has_marshalid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgYijun::clear_marshalid() {
  marshalid_ = GOOGLE_ULONGLONG(0);
  clear_has_marshalid();
}
inline ::google::protobuf::uint64 MsgYijun::marshalid() const {
  return marshalid_;
}
inline void MsgYijun::set_marshalid(::google::protobuf::uint64 value) {
  set_has_marshalid();
  marshalid_ = value;
}

// required string marshalName = 8;
inline bool MsgYijun::has_marshalname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgYijun::set_has_marshalname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgYijun::clear_has_marshalname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgYijun::clear_marshalname() {
  if (marshalname_ != &::google::protobuf::internal::kEmptyString) {
    marshalname_->clear();
  }
  clear_has_marshalname();
}
inline const ::std::string& MsgYijun::marshalname() const {
  return *marshalname_;
}
inline void MsgYijun::set_marshalname(const ::std::string& value) {
  set_has_marshalname();
  if (marshalname_ == &::google::protobuf::internal::kEmptyString) {
    marshalname_ = new ::std::string;
  }
  marshalname_->assign(value);
}
inline void MsgYijun::set_marshalname(const char* value) {
  set_has_marshalname();
  if (marshalname_ == &::google::protobuf::internal::kEmptyString) {
    marshalname_ = new ::std::string;
  }
  marshalname_->assign(value);
}
inline void MsgYijun::set_marshalname(const char* value, size_t size) {
  set_has_marshalname();
  if (marshalname_ == &::google::protobuf::internal::kEmptyString) {
    marshalname_ = new ::std::string;
  }
  marshalname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgYijun::mutable_marshalname() {
  set_has_marshalname();
  if (marshalname_ == &::google::protobuf::internal::kEmptyString) {
    marshalname_ = new ::std::string;
  }
  return marshalname_;
}
inline ::std::string* MsgYijun::release_marshalname() {
  clear_has_marshalname();
  if (marshalname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = marshalname_;
    marshalname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgYijun::set_allocated_marshalname(::std::string* marshalname) {
  if (marshalname_ != &::google::protobuf::internal::kEmptyString) {
    delete marshalname_;
  }
  if (marshalname) {
    set_has_marshalname();
    marshalname_ = marshalname;
  } else {
    clear_has_marshalname();
    marshalname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 applied = 9;
inline bool MsgYijun::has_applied() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgYijun::set_has_applied() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgYijun::clear_has_applied() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgYijun::clear_applied() {
  applied_ = 0u;
  clear_has_applied();
}
inline ::google::protobuf::uint32 MsgYijun::applied() const {
  return applied_;
}
inline void MsgYijun::set_applied(::google::protobuf::uint32 value) {
  set_has_applied();
  applied_ = value;
}

// optional uint64 generalAID = 10;
inline bool MsgYijun::has_generalaid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgYijun::set_has_generalaid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgYijun::clear_has_generalaid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgYijun::clear_generalaid() {
  generalaid_ = GOOGLE_ULONGLONG(0);
  clear_has_generalaid();
}
inline ::google::protobuf::uint64 MsgYijun::generalaid() const {
  return generalaid_;
}
inline void MsgYijun::set_generalaid(::google::protobuf::uint64 value) {
  set_has_generalaid();
  generalaid_ = value;
}

// optional uint64 generalBID = 11;
inline bool MsgYijun::has_generalbid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgYijun::set_has_generalbid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgYijun::clear_has_generalbid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgYijun::clear_generalbid() {
  generalbid_ = GOOGLE_ULONGLONG(0);
  clear_has_generalbid();
}
inline ::google::protobuf::uint64 MsgYijun::generalbid() const {
  return generalbid_;
}
inline void MsgYijun::set_generalbid(::google::protobuf::uint64 value) {
  set_has_generalbid();
  generalbid_ = value;
}

// optional string notice = 12;
inline bool MsgYijun::has_notice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MsgYijun::set_has_notice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MsgYijun::clear_has_notice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MsgYijun::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& MsgYijun::notice() const {
  return *notice_;
}
inline void MsgYijun::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void MsgYijun::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void MsgYijun::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgYijun::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* MsgYijun::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgYijun::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional sint64 spyWealthPD = 13;
inline bool MsgYijun::has_spywealthpd() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MsgYijun::set_has_spywealthpd() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MsgYijun::clear_has_spywealthpd() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MsgYijun::clear_spywealthpd() {
  spywealthpd_ = GOOGLE_LONGLONG(0);
  clear_has_spywealthpd();
}
inline ::google::protobuf::int64 MsgYijun::spywealthpd() const {
  return spywealthpd_;
}
inline void MsgYijun::set_spywealthpd(::google::protobuf::int64 value) {
  set_has_spywealthpd();
  spywealthpd_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_yijun_2eproto__INCLUDED
