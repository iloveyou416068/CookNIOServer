// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_dungeon_reward.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "role_dungeon_reward.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sanguo {

void protobuf_ShutdownFile_role_5fdungeon_5freward_2eproto() {
  delete MsgDungeonReward::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_role_5fdungeon_5freward_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_role_5fdungeon_5freward_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  MsgDungeonReward::default_instance_ = new MsgDungeonReward();
  MsgDungeonReward::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_role_5fdungeon_5freward_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_role_5fdungeon_5freward_2eproto_once_);
void protobuf_AddDesc_role_5fdungeon_5freward_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_role_5fdungeon_5freward_2eproto_once_,
                 &protobuf_AddDesc_role_5fdungeon_5freward_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_role_5fdungeon_5freward_2eproto {
  StaticDescriptorInitializer_role_5fdungeon_5freward_2eproto() {
    protobuf_AddDesc_role_5fdungeon_5freward_2eproto();
  }
} static_descriptor_initializer_role_5fdungeon_5freward_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonReward::kCopperFieldNumber;
const int MsgDungeonReward::kPowerFieldNumber;
const int MsgDungeonReward::kJugongFieldNumber;
const int MsgDungeonReward::kExpFieldNumber;
const int MsgDungeonReward::kStarFieldNumber;
#endif  // !_MSC_VER

MsgDungeonReward::MsgDungeonReward()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void MsgDungeonReward::InitAsDefaultInstance() {
}

MsgDungeonReward::MsgDungeonReward(const MsgDungeonReward& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void MsgDungeonReward::SharedCtor() {
  _cached_size_ = 0;
  copper_ = GOOGLE_ULONGLONG(0);
  power_ = 0u;
  jugong_ = GOOGLE_ULONGLONG(0);
  exp_ = GOOGLE_ULONGLONG(0);
  star_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonReward::~MsgDungeonReward() {
  SharedDtor();
}

void MsgDungeonReward::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgDungeonReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgDungeonReward& MsgDungeonReward::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_role_5fdungeon_5freward_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fdungeon_5freward_2eproto();
#endif
  return *default_instance_;
}

MsgDungeonReward* MsgDungeonReward::default_instance_ = NULL;

MsgDungeonReward* MsgDungeonReward::New() const {
  return new MsgDungeonReward;
}

void MsgDungeonReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    copper_ = GOOGLE_ULONGLONG(0);
    power_ = 0u;
    jugong_ = GOOGLE_ULONGLONG(0);
    exp_ = GOOGLE_ULONGLONG(0);
    star_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool MsgDungeonReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 copper = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &copper_)));
          set_has_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_power;
        break;
      }

      // optional uint32 power = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &power_)));
          set_has_power();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_jugong;
        break;
      }

      // optional uint64 jugong = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jugong:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &jugong_)));
          set_has_jugong();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exp;
        break;
      }

      // optional uint64 exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_star;
        break;
      }

      // optional uint32 star = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgDungeonReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 copper = 1;
  if (has_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->copper(), output);
  }

  // optional uint32 power = 2;
  if (has_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->power(), output);
  }

  // optional uint64 jugong = 3;
  if (has_jugong()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->jugong(), output);
  }

  // optional uint64 exp = 4;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->exp(), output);
  }

  // optional uint32 star = 5;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->star(), output);
  }

}

int MsgDungeonReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 copper = 1;
    if (has_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->copper());
    }

    // optional uint32 power = 2;
    if (has_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->power());
    }

    // optional uint64 jugong = 3;
    if (has_jugong()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->jugong());
    }

    // optional uint64 exp = 4;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exp());
    }

    // optional uint32 star = 5;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonReward::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgDungeonReward*>(&from));
}

void MsgDungeonReward::MergeFrom(const MsgDungeonReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_copper()) {
      set_copper(from.copper());
    }
    if (from.has_power()) {
      set_power(from.power());
    }
    if (from.has_jugong()) {
      set_jugong(from.jugong());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
  }
}

void MsgDungeonReward::CopyFrom(const MsgDungeonReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonReward::IsInitialized() const {

  return true;
}

void MsgDungeonReward::Swap(MsgDungeonReward* other) {
  if (other != this) {
    std::swap(copper_, other->copper_);
    std::swap(power_, other->power_);
    std::swap(jugong_, other->jugong_);
    std::swap(exp_, other->exp_);
    std::swap(star_, other->star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgDungeonReward::GetTypeName() const {
  return "sanguo.MsgDungeonReward";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)
