// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: refresh_kungfu_star.proto

#ifndef PROTOBUF_refresh_5fkungfu_5fstar_2eproto__INCLUDED
#define PROTOBUF_refresh_5fkungfu_5fstar_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_bag_goods.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_refresh_5fkungfu_5fstar_2eproto();
void protobuf_AssignDesc_refresh_5fkungfu_5fstar_2eproto();
void protobuf_ShutdownFile_refresh_5fkungfu_5fstar_2eproto();

class RefreshKungfuStarRequest;
class RefreshKungfuStarResponse;

// ===================================================================

class RefreshKungfuStarRequest : public ::google::protobuf::MessageLite {
 public:
  RefreshKungfuStarRequest();
  virtual ~RefreshKungfuStarRequest();

  RefreshKungfuStarRequest(const RefreshKungfuStarRequest& from);

  inline RefreshKungfuStarRequest& operator=(const RefreshKungfuStarRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const RefreshKungfuStarRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RefreshKungfuStarRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RefreshKungfuStarRequest* other);

  // implements Message ----------------------------------------------

  RefreshKungfuStarRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RefreshKungfuStarRequest& from);
  void MergeFrom(const RefreshKungfuStarRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint32 kungfuID = 2;
  inline bool has_kungfuid() const;
  inline void clear_kungfuid();
  static const int kKungfuIDFieldNumber = 2;
  inline ::google::protobuf::uint32 kungfuid() const;
  inline void set_kungfuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.RefreshKungfuStarRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_kungfuid();
  inline void clear_has_kungfuid();

  int msgid_;
  ::google::protobuf::uint32 kungfuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_refresh_5fkungfu_5fstar_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_refresh_5fkungfu_5fstar_2eproto();
  #endif
  friend void protobuf_AssignDesc_refresh_5fkungfu_5fstar_2eproto();
  friend void protobuf_ShutdownFile_refresh_5fkungfu_5fstar_2eproto();

  void InitAsDefaultInstance();
  static RefreshKungfuStarRequest* default_instance_;
};
// -------------------------------------------------------------------

class RefreshKungfuStarResponse : public ::google::protobuf::MessageLite {
 public:
  RefreshKungfuStarResponse();
  virtual ~RefreshKungfuStarResponse();

  RefreshKungfuStarResponse(const RefreshKungfuStarResponse& from);

  inline RefreshKungfuStarResponse& operator=(const RefreshKungfuStarResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const RefreshKungfuStarResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RefreshKungfuStarResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RefreshKungfuStarResponse* other);

  // implements Message ----------------------------------------------

  RefreshKungfuStarResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RefreshKungfuStarResponse& from);
  void MergeFrom(const RefreshKungfuStarResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint64 copper = 3;
  inline bool has_copper() const;
  inline void clear_copper();
  static const int kCopperFieldNumber = 3;
  inline ::google::protobuf::uint64 copper() const;
  inline void set_copper(::google::protobuf::uint64 value);

  // optional uint64 honour = 5;
  inline bool has_honour() const;
  inline void clear_honour();
  static const int kHonourFieldNumber = 5;
  inline ::google::protobuf::uint64 honour() const;
  inline void set_honour(::google::protobuf::uint64 value);

  // optional .sanguo.MsgRoleBagGoods item = 6;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 6;
  inline const ::sanguo::MsgRoleBagGoods& item() const;
  inline ::sanguo::MsgRoleBagGoods* mutable_item();
  inline ::sanguo::MsgRoleBagGoods* release_item();
  inline void set_allocated_item(::sanguo::MsgRoleBagGoods* item);

  // @@protoc_insertion_point(class_scope:sanguo.RefreshKungfuStarResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_copper();
  inline void clear_has_copper();
  inline void set_has_honour();
  inline void clear_has_honour();
  inline void set_has_item();
  inline void clear_has_item();

  int msgid_;
  int status_;
  ::google::protobuf::uint64 copper_;
  ::google::protobuf::uint64 honour_;
  ::sanguo::MsgRoleBagGoods* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_refresh_5fkungfu_5fstar_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_refresh_5fkungfu_5fstar_2eproto();
  #endif
  friend void protobuf_AssignDesc_refresh_5fkungfu_5fstar_2eproto();
  friend void protobuf_ShutdownFile_refresh_5fkungfu_5fstar_2eproto();

  void InitAsDefaultInstance();
  static RefreshKungfuStarResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// RefreshKungfuStarRequest

// required .sanguo.MsgID msgID = 1;
inline bool RefreshKungfuStarRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshKungfuStarRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshKungfuStarRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshKungfuStarRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID RefreshKungfuStarRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void RefreshKungfuStarRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint32 kungfuID = 2;
inline bool RefreshKungfuStarRequest::has_kungfuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefreshKungfuStarRequest::set_has_kungfuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefreshKungfuStarRequest::clear_has_kungfuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefreshKungfuStarRequest::clear_kungfuid() {
  kungfuid_ = 0u;
  clear_has_kungfuid();
}
inline ::google::protobuf::uint32 RefreshKungfuStarRequest::kungfuid() const {
  return kungfuid_;
}
inline void RefreshKungfuStarRequest::set_kungfuid(::google::protobuf::uint32 value) {
  set_has_kungfuid();
  kungfuid_ = value;
}

// -------------------------------------------------------------------

// RefreshKungfuStarResponse

// required .sanguo.MsgID msgID = 1;
inline bool RefreshKungfuStarResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshKungfuStarResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshKungfuStarResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshKungfuStarResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID RefreshKungfuStarResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void RefreshKungfuStarResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool RefreshKungfuStarResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefreshKungfuStarResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefreshKungfuStarResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefreshKungfuStarResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode RefreshKungfuStarResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void RefreshKungfuStarResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint64 copper = 3;
inline bool RefreshKungfuStarResponse::has_copper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RefreshKungfuStarResponse::set_has_copper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RefreshKungfuStarResponse::clear_has_copper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RefreshKungfuStarResponse::clear_copper() {
  copper_ = GOOGLE_ULONGLONG(0);
  clear_has_copper();
}
inline ::google::protobuf::uint64 RefreshKungfuStarResponse::copper() const {
  return copper_;
}
inline void RefreshKungfuStarResponse::set_copper(::google::protobuf::uint64 value) {
  set_has_copper();
  copper_ = value;
}

// optional uint64 honour = 5;
inline bool RefreshKungfuStarResponse::has_honour() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RefreshKungfuStarResponse::set_has_honour() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RefreshKungfuStarResponse::clear_has_honour() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RefreshKungfuStarResponse::clear_honour() {
  honour_ = GOOGLE_ULONGLONG(0);
  clear_has_honour();
}
inline ::google::protobuf::uint64 RefreshKungfuStarResponse::honour() const {
  return honour_;
}
inline void RefreshKungfuStarResponse::set_honour(::google::protobuf::uint64 value) {
  set_has_honour();
  honour_ = value;
}

// optional .sanguo.MsgRoleBagGoods item = 6;
inline bool RefreshKungfuStarResponse::has_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RefreshKungfuStarResponse::set_has_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RefreshKungfuStarResponse::clear_has_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RefreshKungfuStarResponse::clear_item() {
  if (item_ != NULL) item_->::sanguo::MsgRoleBagGoods::Clear();
  clear_has_item();
}
inline const ::sanguo::MsgRoleBagGoods& RefreshKungfuStarResponse::item() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return item_ != NULL ? *item_ : *default_instance().item_;
#else
  return item_ != NULL ? *item_ : *default_instance_->item_;
#endif
}
inline ::sanguo::MsgRoleBagGoods* RefreshKungfuStarResponse::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::sanguo::MsgRoleBagGoods;
  return item_;
}
inline ::sanguo::MsgRoleBagGoods* RefreshKungfuStarResponse::release_item() {
  clear_has_item();
  ::sanguo::MsgRoleBagGoods* temp = item_;
  item_ = NULL;
  return temp;
}
inline void RefreshKungfuStarResponse::set_allocated_item(::sanguo::MsgRoleBagGoods* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_refresh_5fkungfu_5fstar_2eproto__INCLUDED
