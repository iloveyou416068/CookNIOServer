// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yijun.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "yijun.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sanguo {

void protobuf_ShutdownFile_yijun_2eproto() {
  delete MsgYijun::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_yijun_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_yijun_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::sanguo::protobuf_AddDesc_constants_2eproto();
  MsgYijun::default_instance_ = new MsgYijun();
  MsgYijun::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_yijun_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_yijun_2eproto_once_);
void protobuf_AddDesc_yijun_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_yijun_2eproto_once_,
                 &protobuf_AddDesc_yijun_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_yijun_2eproto {
  StaticDescriptorInitializer_yijun_2eproto() {
    protobuf_AddDesc_yijun_2eproto();
  }
} static_descriptor_initializer_yijun_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int MsgYijun::kIdFieldNumber;
const int MsgYijun::kNameFieldNumber;
const int MsgYijun::kLevelFieldNumber;
const int MsgYijun::kMemberCountFieldNumber;
const int MsgYijun::kWealthFieldNumber;
const int MsgYijun::kWealthPDFieldNumber;
const int MsgYijun::kMarshalIDFieldNumber;
const int MsgYijun::kMarshalNameFieldNumber;
const int MsgYijun::kAppliedFieldNumber;
const int MsgYijun::kGeneralAIDFieldNumber;
const int MsgYijun::kGeneralBIDFieldNumber;
const int MsgYijun::kNoticeFieldNumber;
const int MsgYijun::kSpyWealthPDFieldNumber;
#endif  // !_MSC_VER

MsgYijun::MsgYijun()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void MsgYijun::InitAsDefaultInstance() {
}

MsgYijun::MsgYijun(const MsgYijun& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void MsgYijun::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0u;
  membercount_ = 0u;
  wealth_ = GOOGLE_ULONGLONG(0);
  wealthpd_ = GOOGLE_ULONGLONG(0);
  marshalid_ = GOOGLE_ULONGLONG(0);
  marshalname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  applied_ = 0u;
  generalaid_ = GOOGLE_ULONGLONG(0);
  generalbid_ = GOOGLE_ULONGLONG(0);
  notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  spywealthpd_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgYijun::~MsgYijun() {
  SharedDtor();
}

void MsgYijun::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (marshalname_ != &::google::protobuf::internal::kEmptyString) {
    delete marshalname_;
  }
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgYijun::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgYijun& MsgYijun::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yijun_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yijun_2eproto();
#endif
  return *default_instance_;
}

MsgYijun* MsgYijun::default_instance_ = NULL;

MsgYijun* MsgYijun::New() const {
  return new MsgYijun;
}

void MsgYijun::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    level_ = 0u;
    membercount_ = 0u;
    wealth_ = GOOGLE_ULONGLONG(0);
    wealthpd_ = GOOGLE_ULONGLONG(0);
    marshalid_ = GOOGLE_ULONGLONG(0);
    if (has_marshalname()) {
      if (marshalname_ != &::google::protobuf::internal::kEmptyString) {
        marshalname_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    applied_ = 0u;
    generalaid_ = GOOGLE_ULONGLONG(0);
    generalbid_ = GOOGLE_ULONGLONG(0);
    if (has_notice()) {
      if (notice_ != &::google::protobuf::internal::kEmptyString) {
        notice_->clear();
      }
    }
    spywealthpd_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool MsgYijun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required uint32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_memberCount;
        break;
      }

      // required uint32 memberCount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_memberCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &membercount_)));
          set_has_membercount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_wealth;
        break;
      }

      // required uint64 wealth = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wealth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &wealth_)));
          set_has_wealth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_wealthPD;
        break;
      }

      // required uint64 wealthPD = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wealthPD:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &wealthpd_)));
          set_has_wealthpd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_marshalID;
        break;
      }

      // required uint64 marshalID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_marshalID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &marshalid_)));
          set_has_marshalid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_marshalName;
        break;
      }

      // required string marshalName = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_marshalName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marshalname()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_applied;
        break;
      }

      // required uint32 applied = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_applied:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &applied_)));
          set_has_applied();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_generalAID;
        break;
      }

      // optional uint64 generalAID = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_generalAID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &generalaid_)));
          set_has_generalaid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_generalBID;
        break;
      }

      // optional uint64 generalBID = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_generalBID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &generalbid_)));
          set_has_generalbid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_notice;
        break;
      }

      // optional string notice = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_notice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notice()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_spyWealthPD;
        break;
      }

      // optional sint64 spyWealthPD = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_spyWealthPD:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &spywealthpd_)));
          set_has_spywealthpd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgYijun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // required uint32 memberCount = 4;
  if (has_membercount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->membercount(), output);
  }

  // required uint64 wealth = 5;
  if (has_wealth()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->wealth(), output);
  }

  // required uint64 wealthPD = 6;
  if (has_wealthpd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->wealthpd(), output);
  }

  // required uint64 marshalID = 7;
  if (has_marshalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->marshalid(), output);
  }

  // required string marshalName = 8;
  if (has_marshalname()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->marshalname(), output);
  }

  // required uint32 applied = 9;
  if (has_applied()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->applied(), output);
  }

  // optional uint64 generalAID = 10;
  if (has_generalaid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->generalaid(), output);
  }

  // optional uint64 generalBID = 11;
  if (has_generalbid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->generalbid(), output);
  }

  // optional string notice = 12;
  if (has_notice()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->notice(), output);
  }

  // optional sint64 spyWealthPD = 13;
  if (has_spywealthpd()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(13, this->spywealthpd(), output);
  }

}

int MsgYijun::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 memberCount = 4;
    if (has_membercount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->membercount());
    }

    // required uint64 wealth = 5;
    if (has_wealth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->wealth());
    }

    // required uint64 wealthPD = 6;
    if (has_wealthpd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->wealthpd());
    }

    // required uint64 marshalID = 7;
    if (has_marshalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->marshalid());
    }

    // required string marshalName = 8;
    if (has_marshalname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marshalname());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 applied = 9;
    if (has_applied()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->applied());
    }

    // optional uint64 generalAID = 10;
    if (has_generalaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->generalaid());
    }

    // optional uint64 generalBID = 11;
    if (has_generalbid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->generalbid());
    }

    // optional string notice = 12;
    if (has_notice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->notice());
    }

    // optional sint64 spyWealthPD = 13;
    if (has_spywealthpd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->spywealthpd());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgYijun::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgYijun*>(&from));
}

void MsgYijun::MergeFrom(const MsgYijun& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_membercount()) {
      set_membercount(from.membercount());
    }
    if (from.has_wealth()) {
      set_wealth(from.wealth());
    }
    if (from.has_wealthpd()) {
      set_wealthpd(from.wealthpd());
    }
    if (from.has_marshalid()) {
      set_marshalid(from.marshalid());
    }
    if (from.has_marshalname()) {
      set_marshalname(from.marshalname());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_applied()) {
      set_applied(from.applied());
    }
    if (from.has_generalaid()) {
      set_generalaid(from.generalaid());
    }
    if (from.has_generalbid()) {
      set_generalbid(from.generalbid());
    }
    if (from.has_notice()) {
      set_notice(from.notice());
    }
    if (from.has_spywealthpd()) {
      set_spywealthpd(from.spywealthpd());
    }
  }
}

void MsgYijun::CopyFrom(const MsgYijun& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgYijun::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void MsgYijun::Swap(MsgYijun* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(level_, other->level_);
    std::swap(membercount_, other->membercount_);
    std::swap(wealth_, other->wealth_);
    std::swap(wealthpd_, other->wealthpd_);
    std::swap(marshalid_, other->marshalid_);
    std::swap(marshalname_, other->marshalname_);
    std::swap(applied_, other->applied_);
    std::swap(generalaid_, other->generalaid_);
    std::swap(generalbid_, other->generalbid_);
    std::swap(notice_, other->notice_);
    std::swap(spywealthpd_, other->spywealthpd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgYijun::GetTypeName() const {
  return "sanguo.MsgYijun";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)
