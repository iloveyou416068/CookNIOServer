// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buy_pk_count.proto

#ifndef PROTOBUF_buy_5fpk_5fcount_2eproto__INCLUDED
#define PROTOBUF_buy_5fpk_5fcount_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_buy_5fpk_5fcount_2eproto();
void protobuf_AssignDesc_buy_5fpk_5fcount_2eproto();
void protobuf_ShutdownFile_buy_5fpk_5fcount_2eproto();

class BuyPkCountRequest;
class BuyPkCountResponse;

// ===================================================================

class BuyPkCountRequest : public ::google::protobuf::MessageLite {
 public:
  BuyPkCountRequest();
  virtual ~BuyPkCountRequest();

  BuyPkCountRequest(const BuyPkCountRequest& from);

  inline BuyPkCountRequest& operator=(const BuyPkCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const BuyPkCountRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BuyPkCountRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BuyPkCountRequest* other);

  // implements Message ----------------------------------------------

  BuyPkCountRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BuyPkCountRequest& from);
  void MergeFrom(const BuyPkCountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.BuyPkCountRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_buy_5fpk_5fcount_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_buy_5fpk_5fcount_2eproto();
  #endif
  friend void protobuf_AssignDesc_buy_5fpk_5fcount_2eproto();
  friend void protobuf_ShutdownFile_buy_5fpk_5fcount_2eproto();

  void InitAsDefaultInstance();
  static BuyPkCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class BuyPkCountResponse : public ::google::protobuf::MessageLite {
 public:
  BuyPkCountResponse();
  virtual ~BuyPkCountResponse();

  BuyPkCountResponse(const BuyPkCountResponse& from);

  inline BuyPkCountResponse& operator=(const BuyPkCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const BuyPkCountResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BuyPkCountResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BuyPkCountResponse* other);

  // implements Message ----------------------------------------------

  BuyPkCountResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BuyPkCountResponse& from);
  void MergeFrom(const BuyPkCountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 jade = 3;
  inline bool has_jade() const;
  inline void clear_jade();
  static const int kJadeFieldNumber = 3;
  inline ::google::protobuf::uint32 jade() const;
  inline void set_jade(::google::protobuf::uint32 value);

  // optional uint32 gold = 4;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 4;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 nextCost = 5;
  inline bool has_nextcost() const;
  inline void clear_nextcost();
  static const int kNextCostFieldNumber = 5;
  inline ::google::protobuf::uint32 nextcost() const;
  inline void set_nextcost(::google::protobuf::uint32 value);

  // optional uint32 remainPkCount = 6;
  inline bool has_remainpkcount() const;
  inline void clear_remainpkcount();
  static const int kRemainPkCountFieldNumber = 6;
  inline ::google::protobuf::uint32 remainpkcount() const;
  inline void set_remainpkcount(::google::protobuf::uint32 value);

  // optional uint32 buyPkCountToday = 7;
  inline bool has_buypkcounttoday() const;
  inline void clear_buypkcounttoday();
  static const int kBuyPkCountTodayFieldNumber = 7;
  inline ::google::protobuf::uint32 buypkcounttoday() const;
  inline void set_buypkcounttoday(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.BuyPkCountResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_jade();
  inline void clear_has_jade();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_nextcost();
  inline void clear_has_nextcost();
  inline void set_has_remainpkcount();
  inline void clear_has_remainpkcount();
  inline void set_has_buypkcounttoday();
  inline void clear_has_buypkcounttoday();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 jade_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 nextcost_;
  ::google::protobuf::uint32 remainpkcount_;
  ::google::protobuf::uint32 buypkcounttoday_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_buy_5fpk_5fcount_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_buy_5fpk_5fcount_2eproto();
  #endif
  friend void protobuf_AssignDesc_buy_5fpk_5fcount_2eproto();
  friend void protobuf_ShutdownFile_buy_5fpk_5fcount_2eproto();

  void InitAsDefaultInstance();
  static BuyPkCountResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BuyPkCountRequest

// required .sanguo.MsgID msgID = 1;
inline bool BuyPkCountRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyPkCountRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyPkCountRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyPkCountRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID BuyPkCountRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void BuyPkCountRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// BuyPkCountResponse

// required .sanguo.MsgID msgID = 1;
inline bool BuyPkCountResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyPkCountResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyPkCountResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyPkCountResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID BuyPkCountResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void BuyPkCountResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool BuyPkCountResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyPkCountResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyPkCountResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyPkCountResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode BuyPkCountResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void BuyPkCountResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 jade = 3;
inline bool BuyPkCountResponse::has_jade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyPkCountResponse::set_has_jade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyPkCountResponse::clear_has_jade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyPkCountResponse::clear_jade() {
  jade_ = 0u;
  clear_has_jade();
}
inline ::google::protobuf::uint32 BuyPkCountResponse::jade() const {
  return jade_;
}
inline void BuyPkCountResponse::set_jade(::google::protobuf::uint32 value) {
  set_has_jade();
  jade_ = value;
}

// optional uint32 gold = 4;
inline bool BuyPkCountResponse::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuyPkCountResponse::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuyPkCountResponse::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuyPkCountResponse::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 BuyPkCountResponse::gold() const {
  return gold_;
}
inline void BuyPkCountResponse::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint32 nextCost = 5;
inline bool BuyPkCountResponse::has_nextcost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuyPkCountResponse::set_has_nextcost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuyPkCountResponse::clear_has_nextcost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuyPkCountResponse::clear_nextcost() {
  nextcost_ = 0u;
  clear_has_nextcost();
}
inline ::google::protobuf::uint32 BuyPkCountResponse::nextcost() const {
  return nextcost_;
}
inline void BuyPkCountResponse::set_nextcost(::google::protobuf::uint32 value) {
  set_has_nextcost();
  nextcost_ = value;
}

// optional uint32 remainPkCount = 6;
inline bool BuyPkCountResponse::has_remainpkcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuyPkCountResponse::set_has_remainpkcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuyPkCountResponse::clear_has_remainpkcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuyPkCountResponse::clear_remainpkcount() {
  remainpkcount_ = 0u;
  clear_has_remainpkcount();
}
inline ::google::protobuf::uint32 BuyPkCountResponse::remainpkcount() const {
  return remainpkcount_;
}
inline void BuyPkCountResponse::set_remainpkcount(::google::protobuf::uint32 value) {
  set_has_remainpkcount();
  remainpkcount_ = value;
}

// optional uint32 buyPkCountToday = 7;
inline bool BuyPkCountResponse::has_buypkcounttoday() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuyPkCountResponse::set_has_buypkcounttoday() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuyPkCountResponse::clear_has_buypkcounttoday() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuyPkCountResponse::clear_buypkcounttoday() {
  buypkcounttoday_ = 0u;
  clear_has_buypkcounttoday();
}
inline ::google::protobuf::uint32 BuyPkCountResponse::buypkcounttoday() const {
  return buypkcounttoday_;
}
inline void BuyPkCountResponse::set_buypkcounttoday(::google::protobuf::uint32 value) {
  set_has_buypkcounttoday();
  buypkcounttoday_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_buy_5fpk_5fcount_2eproto__INCLUDED
