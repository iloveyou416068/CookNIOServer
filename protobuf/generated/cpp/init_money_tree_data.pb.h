// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init_money_tree_data.proto

#ifndef PROTOBUF_init_5fmoney_5ftree_5fdata_2eproto__INCLUDED
#define PROTOBUF_init_5fmoney_5ftree_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_init_5fmoney_5ftree_5fdata_2eproto();
void protobuf_AssignDesc_init_5fmoney_5ftree_5fdata_2eproto();
void protobuf_ShutdownFile_init_5fmoney_5ftree_5fdata_2eproto();

class InitMoneyTreeDataRequest;
class InitMoneyTreeDataResponse;

// ===================================================================

class InitMoneyTreeDataRequest : public ::google::protobuf::MessageLite {
 public:
  InitMoneyTreeDataRequest();
  virtual ~InitMoneyTreeDataRequest();

  InitMoneyTreeDataRequest(const InitMoneyTreeDataRequest& from);

  inline InitMoneyTreeDataRequest& operator=(const InitMoneyTreeDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const InitMoneyTreeDataRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InitMoneyTreeDataRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InitMoneyTreeDataRequest* other);

  // implements Message ----------------------------------------------

  InitMoneyTreeDataRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InitMoneyTreeDataRequest& from);
  void MergeFrom(const InitMoneyTreeDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.InitMoneyTreeDataRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_init_5fmoney_5ftree_5fdata_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_init_5fmoney_5ftree_5fdata_2eproto();
  #endif
  friend void protobuf_AssignDesc_init_5fmoney_5ftree_5fdata_2eproto();
  friend void protobuf_ShutdownFile_init_5fmoney_5ftree_5fdata_2eproto();

  void InitAsDefaultInstance();
  static InitMoneyTreeDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class InitMoneyTreeDataResponse : public ::google::protobuf::MessageLite {
 public:
  InitMoneyTreeDataResponse();
  virtual ~InitMoneyTreeDataResponse();

  InitMoneyTreeDataResponse(const InitMoneyTreeDataResponse& from);

  inline InitMoneyTreeDataResponse& operator=(const InitMoneyTreeDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const InitMoneyTreeDataResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InitMoneyTreeDataResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InitMoneyTreeDataResponse* other);

  // implements Message ----------------------------------------------

  InitMoneyTreeDataResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InitMoneyTreeDataResponse& from);
  void MergeFrom(const InitMoneyTreeDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // required uint32 leftShakeCount = 3;
  inline bool has_leftshakecount() const;
  inline void clear_leftshakecount();
  static const int kLeftShakeCountFieldNumber = 3;
  inline ::google::protobuf::uint32 leftshakecount() const;
  inline void set_leftshakecount(::google::protobuf::uint32 value);

  // required uint32 costGold = 4;
  inline bool has_costgold() const;
  inline void clear_costgold();
  static const int kCostGoldFieldNumber = 4;
  inline ::google::protobuf::uint32 costgold() const;
  inline void set_costgold(::google::protobuf::uint32 value);

  // required uint32 getCopper = 5;
  inline bool has_getcopper() const;
  inline void clear_getcopper();
  static const int kGetCopperFieldNumber = 5;
  inline ::google::protobuf::uint32 getcopper() const;
  inline void set_getcopper(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.InitMoneyTreeDataResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_leftshakecount();
  inline void clear_has_leftshakecount();
  inline void set_has_costgold();
  inline void clear_has_costgold();
  inline void set_has_getcopper();
  inline void clear_has_getcopper();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 leftshakecount_;
  ::google::protobuf::uint32 costgold_;
  ::google::protobuf::uint32 getcopper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_init_5fmoney_5ftree_5fdata_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_init_5fmoney_5ftree_5fdata_2eproto();
  #endif
  friend void protobuf_AssignDesc_init_5fmoney_5ftree_5fdata_2eproto();
  friend void protobuf_ShutdownFile_init_5fmoney_5ftree_5fdata_2eproto();

  void InitAsDefaultInstance();
  static InitMoneyTreeDataResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// InitMoneyTreeDataRequest

// required .sanguo.MsgID msgID = 1;
inline bool InitMoneyTreeDataRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitMoneyTreeDataRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitMoneyTreeDataRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitMoneyTreeDataRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID InitMoneyTreeDataRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void InitMoneyTreeDataRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// InitMoneyTreeDataResponse

// required .sanguo.MsgID msgID = 1;
inline bool InitMoneyTreeDataResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitMoneyTreeDataResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitMoneyTreeDataResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitMoneyTreeDataResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID InitMoneyTreeDataResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void InitMoneyTreeDataResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool InitMoneyTreeDataResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitMoneyTreeDataResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitMoneyTreeDataResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitMoneyTreeDataResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode InitMoneyTreeDataResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void InitMoneyTreeDataResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// required uint32 leftShakeCount = 3;
inline bool InitMoneyTreeDataResponse::has_leftshakecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitMoneyTreeDataResponse::set_has_leftshakecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitMoneyTreeDataResponse::clear_has_leftshakecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitMoneyTreeDataResponse::clear_leftshakecount() {
  leftshakecount_ = 0u;
  clear_has_leftshakecount();
}
inline ::google::protobuf::uint32 InitMoneyTreeDataResponse::leftshakecount() const {
  return leftshakecount_;
}
inline void InitMoneyTreeDataResponse::set_leftshakecount(::google::protobuf::uint32 value) {
  set_has_leftshakecount();
  leftshakecount_ = value;
}

// required uint32 costGold = 4;
inline bool InitMoneyTreeDataResponse::has_costgold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InitMoneyTreeDataResponse::set_has_costgold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InitMoneyTreeDataResponse::clear_has_costgold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InitMoneyTreeDataResponse::clear_costgold() {
  costgold_ = 0u;
  clear_has_costgold();
}
inline ::google::protobuf::uint32 InitMoneyTreeDataResponse::costgold() const {
  return costgold_;
}
inline void InitMoneyTreeDataResponse::set_costgold(::google::protobuf::uint32 value) {
  set_has_costgold();
  costgold_ = value;
}

// required uint32 getCopper = 5;
inline bool InitMoneyTreeDataResponse::has_getcopper() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InitMoneyTreeDataResponse::set_has_getcopper() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InitMoneyTreeDataResponse::clear_has_getcopper() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InitMoneyTreeDataResponse::clear_getcopper() {
  getcopper_ = 0u;
  clear_has_getcopper();
}
inline ::google::protobuf::uint32 InitMoneyTreeDataResponse::getcopper() const {
  return getcopper_;
}
inline void InitMoneyTreeDataResponse::set_getcopper(::google::protobuf::uint32 value) {
  set_has_getcopper();
  getcopper_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_init_5fmoney_5ftree_5fdata_2eproto__INCLUDED
