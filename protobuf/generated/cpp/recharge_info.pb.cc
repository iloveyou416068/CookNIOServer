// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recharge_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "recharge_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sanguo {

void protobuf_ShutdownFile_recharge_5finfo_2eproto() {
  delete MsgRechargeInfo::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_recharge_5finfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_recharge_5finfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::sanguo::protobuf_AddDesc_constants_2eproto();
  MsgRechargeInfo::default_instance_ = new MsgRechargeInfo();
  MsgRechargeInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_recharge_5finfo_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_recharge_5finfo_2eproto_once_);
void protobuf_AddDesc_recharge_5finfo_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_recharge_5finfo_2eproto_once_,
                 &protobuf_AddDesc_recharge_5finfo_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_recharge_5finfo_2eproto {
  StaticDescriptorInitializer_recharge_5finfo_2eproto() {
    protobuf_AddDesc_recharge_5finfo_2eproto();
  }
} static_descriptor_initializer_recharge_5finfo_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int MsgRechargeInfo::kIdFieldNumber;
const int MsgRechargeInfo::kJadeFieldNumber;
const int MsgRechargeInfo::kGoldFieldNumber;
const int MsgRechargeInfo::kStatusFieldNumber;
const int MsgRechargeInfo::kIconIDFieldNumber;
const int MsgRechargeInfo::kJadeIconIDFieldNumber;
#endif  // !_MSC_VER

MsgRechargeInfo::MsgRechargeInfo()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void MsgRechargeInfo::InitAsDefaultInstance() {
}

MsgRechargeInfo::MsgRechargeInfo(const MsgRechargeInfo& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void MsgRechargeInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  jade_ = 0u;
  gold_ = 0u;
  status_ = 0u;
  iconid_ = 0u;
  jadeiconid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgRechargeInfo::~MsgRechargeInfo() {
  SharedDtor();
}

void MsgRechargeInfo::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgRechargeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgRechargeInfo& MsgRechargeInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_recharge_5finfo_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_recharge_5finfo_2eproto();
#endif
  return *default_instance_;
}

MsgRechargeInfo* MsgRechargeInfo::default_instance_ = NULL;

MsgRechargeInfo* MsgRechargeInfo::New() const {
  return new MsgRechargeInfo;
}

void MsgRechargeInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    jade_ = 0u;
    gold_ = 0u;
    status_ = 0u;
    iconid_ = 0u;
    jadeiconid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool MsgRechargeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_jade;
        break;
      }

      // required uint32 jade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jade_)));
          set_has_jade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gold;
        break;
      }

      // required uint32 gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }

      // required uint32 status = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_iconID;
        break;
      }

      // required uint32 iconID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_iconID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iconid_)));
          set_has_iconid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_jadeIconID;
        break;
      }

      // required uint32 jadeIconID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jadeIconID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jadeiconid_)));
          set_has_jadeiconid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgRechargeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 jade = 2;
  if (has_jade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->jade(), output);
  }

  // required uint32 gold = 3;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gold(), output);
  }

  // required uint32 status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->status(), output);
  }

  // required uint32 iconID = 5;
  if (has_iconid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->iconid(), output);
  }

  // required uint32 jadeIconID = 6;
  if (has_jadeiconid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->jadeiconid(), output);
  }

}

int MsgRechargeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 jade = 2;
    if (has_jade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jade());
    }

    // required uint32 gold = 3;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gold());
    }

    // required uint32 status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // required uint32 iconID = 5;
    if (has_iconid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->iconid());
    }

    // required uint32 jadeIconID = 6;
    if (has_jadeiconid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jadeiconid());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRechargeInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgRechargeInfo*>(&from));
}

void MsgRechargeInfo::MergeFrom(const MsgRechargeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_jade()) {
      set_jade(from.jade());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_iconid()) {
      set_iconid(from.iconid());
    }
    if (from.has_jadeiconid()) {
      set_jadeiconid(from.jadeiconid());
    }
  }
}

void MsgRechargeInfo::CopyFrom(const MsgRechargeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRechargeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void MsgRechargeInfo::Swap(MsgRechargeInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(jade_, other->jade_);
    std::swap(gold_, other->gold_);
    std::swap(status_, other->status_);
    std::swap(iconid_, other->iconid_);
    std::swap(jadeiconid_, other->jadeiconid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgRechargeInfo::GetTypeName() const {
  return "sanguo.MsgRechargeInfo";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)
