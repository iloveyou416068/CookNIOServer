// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: end_pk.proto

#ifndef PROTOBUF_end_5fpk_2eproto__INCLUDED
#define PROTOBUF_end_5fpk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_end_5fpk_2eproto();
void protobuf_AssignDesc_end_5fpk_2eproto();
void protobuf_ShutdownFile_end_5fpk_2eproto();

class EndPkRequest;
class EndPkResponse;

// ===================================================================

class EndPkRequest : public ::google::protobuf::MessageLite {
 public:
  EndPkRequest();
  virtual ~EndPkRequest();

  EndPkRequest(const EndPkRequest& from);

  inline EndPkRequest& operator=(const EndPkRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const EndPkRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EndPkRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EndPkRequest* other);

  // implements Message ----------------------------------------------

  EndPkRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EndPkRequest& from);
  void MergeFrom(const EndPkRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // optional uint64 targetId = 2;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIdFieldNumber = 2;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // optional uint32 pkResult = 3;
  inline bool has_pkresult() const;
  inline void clear_pkresult();
  static const int kPkResultFieldNumber = 3;
  inline ::google::protobuf::uint32 pkresult() const;
  inline void set_pkresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.EndPkRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_pkresult();
  inline void clear_has_pkresult();

  ::google::protobuf::uint64 targetid_;
  int msgid_;
  ::google::protobuf::uint32 pkresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_end_5fpk_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_end_5fpk_2eproto();
  #endif
  friend void protobuf_AssignDesc_end_5fpk_2eproto();
  friend void protobuf_ShutdownFile_end_5fpk_2eproto();

  void InitAsDefaultInstance();
  static EndPkRequest* default_instance_;
};
// -------------------------------------------------------------------

class EndPkResponse : public ::google::protobuf::MessageLite {
 public:
  EndPkResponse();
  virtual ~EndPkResponse();

  EndPkResponse(const EndPkResponse& from);

  inline EndPkResponse& operator=(const EndPkResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const EndPkResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EndPkResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EndPkResponse* other);

  // implements Message ----------------------------------------------

  EndPkResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EndPkResponse& from);
  void MergeFrom(const EndPkResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 copperReward = 3;
  inline bool has_copperreward() const;
  inline void clear_copperreward();
  static const int kCopperRewardFieldNumber = 3;
  inline ::google::protobuf::uint32 copperreward() const;
  inline void set_copperreward(::google::protobuf::uint32 value);

  // optional uint32 honourReward = 4;
  inline bool has_honourreward() const;
  inline void clear_honourreward();
  static const int kHonourRewardFieldNumber = 4;
  inline ::google::protobuf::uint32 honourreward() const;
  inline void set_honourreward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.EndPkResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_copperreward();
  inline void clear_has_copperreward();
  inline void set_has_honourreward();
  inline void clear_has_honourreward();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 copperreward_;
  ::google::protobuf::uint32 honourreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_end_5fpk_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_end_5fpk_2eproto();
  #endif
  friend void protobuf_AssignDesc_end_5fpk_2eproto();
  friend void protobuf_ShutdownFile_end_5fpk_2eproto();

  void InitAsDefaultInstance();
  static EndPkResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// EndPkRequest

// required .sanguo.MsgID msgID = 1;
inline bool EndPkRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EndPkRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EndPkRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EndPkRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID EndPkRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void EndPkRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional uint64 targetId = 2;
inline bool EndPkRequest::has_targetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EndPkRequest::set_has_targetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EndPkRequest::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EndPkRequest::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 EndPkRequest::targetid() const {
  return targetid_;
}
inline void EndPkRequest::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
}

// optional uint32 pkResult = 3;
inline bool EndPkRequest::has_pkresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EndPkRequest::set_has_pkresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EndPkRequest::clear_has_pkresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EndPkRequest::clear_pkresult() {
  pkresult_ = 0u;
  clear_has_pkresult();
}
inline ::google::protobuf::uint32 EndPkRequest::pkresult() const {
  return pkresult_;
}
inline void EndPkRequest::set_pkresult(::google::protobuf::uint32 value) {
  set_has_pkresult();
  pkresult_ = value;
}

// -------------------------------------------------------------------

// EndPkResponse

// required .sanguo.MsgID msgID = 1;
inline bool EndPkResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EndPkResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EndPkResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EndPkResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID EndPkResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void EndPkResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool EndPkResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EndPkResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EndPkResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EndPkResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode EndPkResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void EndPkResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 copperReward = 3;
inline bool EndPkResponse::has_copperreward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EndPkResponse::set_has_copperreward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EndPkResponse::clear_has_copperreward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EndPkResponse::clear_copperreward() {
  copperreward_ = 0u;
  clear_has_copperreward();
}
inline ::google::protobuf::uint32 EndPkResponse::copperreward() const {
  return copperreward_;
}
inline void EndPkResponse::set_copperreward(::google::protobuf::uint32 value) {
  set_has_copperreward();
  copperreward_ = value;
}

// optional uint32 honourReward = 4;
inline bool EndPkResponse::has_honourreward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EndPkResponse::set_has_honourreward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EndPkResponse::clear_has_honourreward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EndPkResponse::clear_honourreward() {
  honourreward_ = 0u;
  clear_has_honourreward();
}
inline ::google::protobuf::uint32 EndPkResponse::honourreward() const {
  return honourreward_;
}
inline void EndPkResponse::set_honourreward(::google::protobuf::uint32 value) {
  set_has_honourreward();
  honourreward_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_end_5fpk_2eproto__INCLUDED
