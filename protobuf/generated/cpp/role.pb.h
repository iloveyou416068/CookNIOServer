// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role.proto

#ifndef PROTOBUF_role_2eproto__INCLUDED
#define PROTOBUF_role_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "constants.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_role_2eproto();
void protobuf_AssignDesc_role_2eproto();
void protobuf_ShutdownFile_role_2eproto();

class MsgRoleData;

// ===================================================================

class MsgRoleData : public ::google::protobuf::MessageLite {
 public:
  MsgRoleData();
  virtual ~MsgRoleData();

  MsgRoleData(const MsgRoleData& from);

  inline MsgRoleData& operator=(const MsgRoleData& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgRoleData& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgRoleData* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgRoleData* other);

  // implements Message ----------------------------------------------

  MsgRoleData* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgRoleData& from);
  void MergeFrom(const MsgRoleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 roleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required string roleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required uint32 roleLevel = 3;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRoleLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::uint32 value);

  // required .sanguo.RoleProfession roleProfession = 4;
  inline bool has_roleprofession() const;
  inline void clear_roleprofession();
  static const int kRoleProfessionFieldNumber = 4;
  inline ::sanguo::RoleProfession roleprofession() const;
  inline void set_roleprofession(::sanguo::RoleProfession value);

  // required uint32 mapID = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required uint64 copper = 6;
  inline bool has_copper() const;
  inline void clear_copper();
  static const int kCopperFieldNumber = 6;
  inline ::google::protobuf::uint64 copper() const;
  inline void set_copper(::google::protobuf::uint64 value);

  // required uint32 gold = 7;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 7;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 jade = 8;
  inline bool has_jade() const;
  inline void clear_jade();
  static const int kJadeFieldNumber = 8;
  inline ::google::protobuf::uint32 jade() const;
  inline void set_jade(::google::protobuf::uint32 value);

  // required uint32 power = 9;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 9;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);

  // required uint32 vipLevel = 10;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 10;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required uint64 credit = 11;
  inline bool has_credit() const;
  inline void clear_credit();
  static const int kCreditFieldNumber = 11;
  inline ::google::protobuf::uint64 credit() const;
  inline void set_credit(::google::protobuf::uint64 value);

  // optional uint64 honour = 12;
  inline bool has_honour() const;
  inline void clear_honour();
  static const int kHonourFieldNumber = 12;
  inline ::google::protobuf::uint64 honour() const;
  inline void set_honour(::google::protobuf::uint64 value);

  // repeated uint32 vipRewarded = 13;
  inline int viprewarded_size() const;
  inline void clear_viprewarded();
  static const int kVipRewardedFieldNumber = 13;
  inline ::google::protobuf::uint32 viprewarded(int index) const;
  inline void set_viprewarded(int index, ::google::protobuf::uint32 value);
  inline void add_viprewarded(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      viprewarded() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_viprewarded();

  // optional uint32 recharge = 14;
  inline bool has_recharge() const;
  inline void clear_recharge();
  static const int kRechargeFieldNumber = 14;
  inline ::google::protobuf::uint32 recharge() const;
  inline void set_recharge(::google::protobuf::uint32 value);

  // optional uint64 yijunID = 15;
  inline bool has_yijunid() const;
  inline void clear_yijunid();
  static const int kYijunIDFieldNumber = 15;
  inline ::google::protobuf::uint64 yijunid() const;
  inline void set_yijunid(::google::protobuf::uint64 value);

  // optional uint64 exp = 16;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 16;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint64 jungong = 17;
  inline bool has_jungong() const;
  inline void clear_jungong();
  static const int kJungongFieldNumber = 17;
  inline ::google::protobuf::uint64 jungong() const;
  inline void set_jungong(::google::protobuf::uint64 value);

  // optional uint32 buyPowerCountToday = 18;
  inline bool has_buypowercounttoday() const;
  inline void clear_buypowercounttoday();
  static const int kBuyPowerCountTodayFieldNumber = 18;
  inline ::google::protobuf::uint32 buypowercounttoday() const;
  inline void set_buypowercounttoday(::google::protobuf::uint32 value);

  // optional uint64 arenaRoleRank = 19;
  inline bool has_arenarolerank() const;
  inline void clear_arenarolerank();
  static const int kArenaRoleRankFieldNumber = 19;
  inline ::google::protobuf::uint64 arenarolerank() const;
  inline void set_arenarolerank(::google::protobuf::uint64 value);

  // optional uint32 fight = 20;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 20;
  inline ::google::protobuf::uint32 fight() const;
  inline void set_fight(::google::protobuf::uint32 value);

  // optional uint32 goldTicket = 21;
  inline bool has_goldticket() const;
  inline void clear_goldticket();
  static const int kGoldTicketFieldNumber = 21;
  inline ::google::protobuf::uint32 goldticket() const;
  inline void set_goldticket(::google::protobuf::uint32 value);

  // optional uint32 silverTicket = 22;
  inline bool has_silverticket() const;
  inline void clear_silverticket();
  static const int kSilverTicketFieldNumber = 22;
  inline ::google::protobuf::uint32 silverticket() const;
  inline void set_silverticket(::google::protobuf::uint32 value);

  // optional uint32 copperTicket = 23;
  inline bool has_copperticket() const;
  inline void clear_copperticket();
  static const int kCopperTicketFieldNumber = 23;
  inline ::google::protobuf::uint32 copperticket() const;
  inline void set_copperticket(::google::protobuf::uint32 value);

  // optional uint32 friendShip = 24;
  inline bool has_friendship() const;
  inline void clear_friendship();
  static const int kFriendShipFieldNumber = 24;
  inline ::google::protobuf::uint32 friendship() const;
  inline void set_friendship(::google::protobuf::uint32 value);

  // required uint32 curtitle = 25;
  inline bool has_curtitle() const;
  inline void clear_curtitle();
  static const int kCurtitleFieldNumber = 25;
  inline ::google::protobuf::uint32 curtitle() const;
  inline void set_curtitle(::google::protobuf::uint32 value);

  // optional uint32 vipExperienceCardLevel = 26;
  inline bool has_vipexperiencecardlevel() const;
  inline void clear_vipexperiencecardlevel();
  static const int kVipExperienceCardLevelFieldNumber = 26;
  inline ::google::protobuf::uint32 vipexperiencecardlevel() const;
  inline void set_vipexperiencecardlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.MsgRoleData)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_roleprofession();
  inline void clear_has_roleprofession();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_copper();
  inline void clear_has_copper();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_jade();
  inline void clear_has_jade();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_credit();
  inline void clear_has_credit();
  inline void set_has_honour();
  inline void clear_has_honour();
  inline void set_has_recharge();
  inline void clear_has_recharge();
  inline void set_has_yijunid();
  inline void clear_has_yijunid();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_jungong();
  inline void clear_has_jungong();
  inline void set_has_buypowercounttoday();
  inline void clear_has_buypowercounttoday();
  inline void set_has_arenarolerank();
  inline void clear_has_arenarolerank();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_goldticket();
  inline void clear_has_goldticket();
  inline void set_has_silverticket();
  inline void clear_has_silverticket();
  inline void set_has_copperticket();
  inline void clear_has_copperticket();
  inline void set_has_friendship();
  inline void clear_has_friendship();
  inline void set_has_curtitle();
  inline void clear_has_curtitle();
  inline void set_has_vipexperiencecardlevel();
  inline void clear_has_vipexperiencecardlevel();

  ::google::protobuf::uint64 roleid_;
  ::std::string* rolename_;
  ::google::protobuf::uint32 rolelevel_;
  int roleprofession_;
  ::google::protobuf::uint64 copper_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 jade_;
  ::google::protobuf::uint32 power_;
  ::google::protobuf::uint64 credit_;
  ::google::protobuf::uint64 honour_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 recharge_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > viprewarded_;
  ::google::protobuf::uint64 yijunid_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint64 jungong_;
  ::google::protobuf::uint64 arenarolerank_;
  ::google::protobuf::uint32 buypowercounttoday_;
  ::google::protobuf::uint32 fight_;
  ::google::protobuf::uint32 goldticket_;
  ::google::protobuf::uint32 silverticket_;
  ::google::protobuf::uint32 copperticket_;
  ::google::protobuf::uint32 friendship_;
  ::google::protobuf::uint32 curtitle_;
  ::google::protobuf::uint32 vipexperiencecardlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(26 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_role_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_role_2eproto();
  #endif
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static MsgRoleData* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgRoleData

// required uint64 roleID = 1;
inline bool MsgRoleData::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRoleData::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRoleData::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRoleData::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 MsgRoleData::roleid() const {
  return roleid_;
}
inline void MsgRoleData::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string roleName = 2;
inline bool MsgRoleData::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgRoleData::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgRoleData::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgRoleData::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MsgRoleData::rolename() const {
  return *rolename_;
}
inline void MsgRoleData::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MsgRoleData::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MsgRoleData::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgRoleData::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MsgRoleData::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgRoleData::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 roleLevel = 3;
inline bool MsgRoleData::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgRoleData::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgRoleData::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgRoleData::clear_rolelevel() {
  rolelevel_ = 0u;
  clear_has_rolelevel();
}
inline ::google::protobuf::uint32 MsgRoleData::rolelevel() const {
  return rolelevel_;
}
inline void MsgRoleData::set_rolelevel(::google::protobuf::uint32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// required .sanguo.RoleProfession roleProfession = 4;
inline bool MsgRoleData::has_roleprofession() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgRoleData::set_has_roleprofession() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgRoleData::clear_has_roleprofession() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgRoleData::clear_roleprofession() {
  roleprofession_ = 1;
  clear_has_roleprofession();
}
inline ::sanguo::RoleProfession MsgRoleData::roleprofession() const {
  return static_cast< ::sanguo::RoleProfession >(roleprofession_);
}
inline void MsgRoleData::set_roleprofession(::sanguo::RoleProfession value) {
  assert(::sanguo::RoleProfession_IsValid(value));
  set_has_roleprofession();
  roleprofession_ = value;
}

// required uint32 mapID = 5;
inline bool MsgRoleData::has_mapid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgRoleData::set_has_mapid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgRoleData::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgRoleData::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 MsgRoleData::mapid() const {
  return mapid_;
}
inline void MsgRoleData::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required uint64 copper = 6;
inline bool MsgRoleData::has_copper() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgRoleData::set_has_copper() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgRoleData::clear_has_copper() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgRoleData::clear_copper() {
  copper_ = GOOGLE_ULONGLONG(0);
  clear_has_copper();
}
inline ::google::protobuf::uint64 MsgRoleData::copper() const {
  return copper_;
}
inline void MsgRoleData::set_copper(::google::protobuf::uint64 value) {
  set_has_copper();
  copper_ = value;
}

// required uint32 gold = 7;
inline bool MsgRoleData::has_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgRoleData::set_has_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgRoleData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgRoleData::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 MsgRoleData::gold() const {
  return gold_;
}
inline void MsgRoleData::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// required uint32 jade = 8;
inline bool MsgRoleData::has_jade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgRoleData::set_has_jade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgRoleData::clear_has_jade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgRoleData::clear_jade() {
  jade_ = 0u;
  clear_has_jade();
}
inline ::google::protobuf::uint32 MsgRoleData::jade() const {
  return jade_;
}
inline void MsgRoleData::set_jade(::google::protobuf::uint32 value) {
  set_has_jade();
  jade_ = value;
}

// required uint32 power = 9;
inline bool MsgRoleData::has_power() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgRoleData::set_has_power() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgRoleData::clear_has_power() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgRoleData::clear_power() {
  power_ = 0u;
  clear_has_power();
}
inline ::google::protobuf::uint32 MsgRoleData::power() const {
  return power_;
}
inline void MsgRoleData::set_power(::google::protobuf::uint32 value) {
  set_has_power();
  power_ = value;
}

// required uint32 vipLevel = 10;
inline bool MsgRoleData::has_viplevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgRoleData::set_has_viplevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgRoleData::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgRoleData::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 MsgRoleData::viplevel() const {
  return viplevel_;
}
inline void MsgRoleData::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// required uint64 credit = 11;
inline bool MsgRoleData::has_credit() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgRoleData::set_has_credit() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgRoleData::clear_has_credit() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgRoleData::clear_credit() {
  credit_ = GOOGLE_ULONGLONG(0);
  clear_has_credit();
}
inline ::google::protobuf::uint64 MsgRoleData::credit() const {
  return credit_;
}
inline void MsgRoleData::set_credit(::google::protobuf::uint64 value) {
  set_has_credit();
  credit_ = value;
}

// optional uint64 honour = 12;
inline bool MsgRoleData::has_honour() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MsgRoleData::set_has_honour() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MsgRoleData::clear_has_honour() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MsgRoleData::clear_honour() {
  honour_ = GOOGLE_ULONGLONG(0);
  clear_has_honour();
}
inline ::google::protobuf::uint64 MsgRoleData::honour() const {
  return honour_;
}
inline void MsgRoleData::set_honour(::google::protobuf::uint64 value) {
  set_has_honour();
  honour_ = value;
}

// repeated uint32 vipRewarded = 13;
inline int MsgRoleData::viprewarded_size() const {
  return viprewarded_.size();
}
inline void MsgRoleData::clear_viprewarded() {
  viprewarded_.Clear();
}
inline ::google::protobuf::uint32 MsgRoleData::viprewarded(int index) const {
  return viprewarded_.Get(index);
}
inline void MsgRoleData::set_viprewarded(int index, ::google::protobuf::uint32 value) {
  viprewarded_.Set(index, value);
}
inline void MsgRoleData::add_viprewarded(::google::protobuf::uint32 value) {
  viprewarded_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgRoleData::viprewarded() const {
  return viprewarded_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgRoleData::mutable_viprewarded() {
  return &viprewarded_;
}

// optional uint32 recharge = 14;
inline bool MsgRoleData::has_recharge() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MsgRoleData::set_has_recharge() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MsgRoleData::clear_has_recharge() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MsgRoleData::clear_recharge() {
  recharge_ = 0u;
  clear_has_recharge();
}
inline ::google::protobuf::uint32 MsgRoleData::recharge() const {
  return recharge_;
}
inline void MsgRoleData::set_recharge(::google::protobuf::uint32 value) {
  set_has_recharge();
  recharge_ = value;
}

// optional uint64 yijunID = 15;
inline bool MsgRoleData::has_yijunid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MsgRoleData::set_has_yijunid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MsgRoleData::clear_has_yijunid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MsgRoleData::clear_yijunid() {
  yijunid_ = GOOGLE_ULONGLONG(0);
  clear_has_yijunid();
}
inline ::google::protobuf::uint64 MsgRoleData::yijunid() const {
  return yijunid_;
}
inline void MsgRoleData::set_yijunid(::google::protobuf::uint64 value) {
  set_has_yijunid();
  yijunid_ = value;
}

// optional uint64 exp = 16;
inline bool MsgRoleData::has_exp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MsgRoleData::set_has_exp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MsgRoleData::clear_has_exp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MsgRoleData::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 MsgRoleData::exp() const {
  return exp_;
}
inline void MsgRoleData::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint64 jungong = 17;
inline bool MsgRoleData::has_jungong() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MsgRoleData::set_has_jungong() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MsgRoleData::clear_has_jungong() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MsgRoleData::clear_jungong() {
  jungong_ = GOOGLE_ULONGLONG(0);
  clear_has_jungong();
}
inline ::google::protobuf::uint64 MsgRoleData::jungong() const {
  return jungong_;
}
inline void MsgRoleData::set_jungong(::google::protobuf::uint64 value) {
  set_has_jungong();
  jungong_ = value;
}

// optional uint32 buyPowerCountToday = 18;
inline bool MsgRoleData::has_buypowercounttoday() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void MsgRoleData::set_has_buypowercounttoday() {
  _has_bits_[0] |= 0x00020000u;
}
inline void MsgRoleData::clear_has_buypowercounttoday() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void MsgRoleData::clear_buypowercounttoday() {
  buypowercounttoday_ = 0u;
  clear_has_buypowercounttoday();
}
inline ::google::protobuf::uint32 MsgRoleData::buypowercounttoday() const {
  return buypowercounttoday_;
}
inline void MsgRoleData::set_buypowercounttoday(::google::protobuf::uint32 value) {
  set_has_buypowercounttoday();
  buypowercounttoday_ = value;
}

// optional uint64 arenaRoleRank = 19;
inline bool MsgRoleData::has_arenarolerank() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void MsgRoleData::set_has_arenarolerank() {
  _has_bits_[0] |= 0x00040000u;
}
inline void MsgRoleData::clear_has_arenarolerank() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void MsgRoleData::clear_arenarolerank() {
  arenarolerank_ = GOOGLE_ULONGLONG(0);
  clear_has_arenarolerank();
}
inline ::google::protobuf::uint64 MsgRoleData::arenarolerank() const {
  return arenarolerank_;
}
inline void MsgRoleData::set_arenarolerank(::google::protobuf::uint64 value) {
  set_has_arenarolerank();
  arenarolerank_ = value;
}

// optional uint32 fight = 20;
inline bool MsgRoleData::has_fight() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void MsgRoleData::set_has_fight() {
  _has_bits_[0] |= 0x00080000u;
}
inline void MsgRoleData::clear_has_fight() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void MsgRoleData::clear_fight() {
  fight_ = 0u;
  clear_has_fight();
}
inline ::google::protobuf::uint32 MsgRoleData::fight() const {
  return fight_;
}
inline void MsgRoleData::set_fight(::google::protobuf::uint32 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint32 goldTicket = 21;
inline bool MsgRoleData::has_goldticket() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void MsgRoleData::set_has_goldticket() {
  _has_bits_[0] |= 0x00100000u;
}
inline void MsgRoleData::clear_has_goldticket() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void MsgRoleData::clear_goldticket() {
  goldticket_ = 0u;
  clear_has_goldticket();
}
inline ::google::protobuf::uint32 MsgRoleData::goldticket() const {
  return goldticket_;
}
inline void MsgRoleData::set_goldticket(::google::protobuf::uint32 value) {
  set_has_goldticket();
  goldticket_ = value;
}

// optional uint32 silverTicket = 22;
inline bool MsgRoleData::has_silverticket() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void MsgRoleData::set_has_silverticket() {
  _has_bits_[0] |= 0x00200000u;
}
inline void MsgRoleData::clear_has_silverticket() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void MsgRoleData::clear_silverticket() {
  silverticket_ = 0u;
  clear_has_silverticket();
}
inline ::google::protobuf::uint32 MsgRoleData::silverticket() const {
  return silverticket_;
}
inline void MsgRoleData::set_silverticket(::google::protobuf::uint32 value) {
  set_has_silverticket();
  silverticket_ = value;
}

// optional uint32 copperTicket = 23;
inline bool MsgRoleData::has_copperticket() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void MsgRoleData::set_has_copperticket() {
  _has_bits_[0] |= 0x00400000u;
}
inline void MsgRoleData::clear_has_copperticket() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void MsgRoleData::clear_copperticket() {
  copperticket_ = 0u;
  clear_has_copperticket();
}
inline ::google::protobuf::uint32 MsgRoleData::copperticket() const {
  return copperticket_;
}
inline void MsgRoleData::set_copperticket(::google::protobuf::uint32 value) {
  set_has_copperticket();
  copperticket_ = value;
}

// optional uint32 friendShip = 24;
inline bool MsgRoleData::has_friendship() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void MsgRoleData::set_has_friendship() {
  _has_bits_[0] |= 0x00800000u;
}
inline void MsgRoleData::clear_has_friendship() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void MsgRoleData::clear_friendship() {
  friendship_ = 0u;
  clear_has_friendship();
}
inline ::google::protobuf::uint32 MsgRoleData::friendship() const {
  return friendship_;
}
inline void MsgRoleData::set_friendship(::google::protobuf::uint32 value) {
  set_has_friendship();
  friendship_ = value;
}

// required uint32 curtitle = 25;
inline bool MsgRoleData::has_curtitle() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void MsgRoleData::set_has_curtitle() {
  _has_bits_[0] |= 0x01000000u;
}
inline void MsgRoleData::clear_has_curtitle() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void MsgRoleData::clear_curtitle() {
  curtitle_ = 0u;
  clear_has_curtitle();
}
inline ::google::protobuf::uint32 MsgRoleData::curtitle() const {
  return curtitle_;
}
inline void MsgRoleData::set_curtitle(::google::protobuf::uint32 value) {
  set_has_curtitle();
  curtitle_ = value;
}

// optional uint32 vipExperienceCardLevel = 26;
inline bool MsgRoleData::has_vipexperiencecardlevel() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void MsgRoleData::set_has_vipexperiencecardlevel() {
  _has_bits_[0] |= 0x02000000u;
}
inline void MsgRoleData::clear_has_vipexperiencecardlevel() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void MsgRoleData::clear_vipexperiencecardlevel() {
  vipexperiencecardlevel_ = 0u;
  clear_has_vipexperiencecardlevel();
}
inline ::google::protobuf::uint32 MsgRoleData::vipexperiencecardlevel() const {
  return vipexperiencecardlevel_;
}
inline void MsgRoleData::set_vipexperiencecardlevel(::google::protobuf::uint32 value) {
  set_has_vipexperiencecardlevel();
  vipexperiencecardlevel_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_role_2eproto__INCLUDED
