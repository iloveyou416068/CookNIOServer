// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: level_up_pet.proto

#ifndef PROTOBUF_level_5fup_5fpet_2eproto__INCLUDED
#define PROTOBUF_level_5fup_5fpet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "pet.pb.h"
#include "role_bag_goods.pb.h"
#include "role_cooldown.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_level_5fup_5fpet_2eproto();
void protobuf_AssignDesc_level_5fup_5fpet_2eproto();
void protobuf_ShutdownFile_level_5fup_5fpet_2eproto();

class LevelUpPetRequest;
class LevelUpPetResponse;

// ===================================================================

class LevelUpPetRequest : public ::google::protobuf::MessageLite {
 public:
  LevelUpPetRequest();
  virtual ~LevelUpPetRequest();

  LevelUpPetRequest(const LevelUpPetRequest& from);

  inline LevelUpPetRequest& operator=(const LevelUpPetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const LevelUpPetRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LevelUpPetRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LevelUpPetRequest* other);

  // implements Message ----------------------------------------------

  LevelUpPetRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LevelUpPetRequest& from);
  void MergeFrom(const LevelUpPetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint64 petID = 2;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetIDFieldNumber = 2;
  inline ::google::protobuf::uint64 petid() const;
  inline void set_petid(::google::protobuf::uint64 value);

  // required uint64 feedID = 3;
  inline bool has_feedid() const;
  inline void clear_feedid();
  static const int kFeedIDFieldNumber = 3;
  inline ::google::protobuf::uint64 feedid() const;
  inline void set_feedid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:sanguo.LevelUpPetRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_feedid();
  inline void clear_has_feedid();

  ::google::protobuf::uint64 petid_;
  ::google::protobuf::uint64 feedid_;
  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_level_5fup_5fpet_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_level_5fup_5fpet_2eproto();
  #endif
  friend void protobuf_AssignDesc_level_5fup_5fpet_2eproto();
  friend void protobuf_ShutdownFile_level_5fup_5fpet_2eproto();

  void InitAsDefaultInstance();
  static LevelUpPetRequest* default_instance_;
};
// -------------------------------------------------------------------

class LevelUpPetResponse : public ::google::protobuf::MessageLite {
 public:
  LevelUpPetResponse();
  virtual ~LevelUpPetResponse();

  LevelUpPetResponse(const LevelUpPetResponse& from);

  inline LevelUpPetResponse& operator=(const LevelUpPetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const LevelUpPetResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LevelUpPetResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LevelUpPetResponse* other);

  // implements Message ----------------------------------------------

  LevelUpPetResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LevelUpPetResponse& from);
  void MergeFrom(const LevelUpPetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional .sanguo.MsgRoleBagGoods roleBagGoods = 3;
  inline bool has_rolebaggoods() const;
  inline void clear_rolebaggoods();
  static const int kRoleBagGoodsFieldNumber = 3;
  inline const ::sanguo::MsgRoleBagGoods& rolebaggoods() const;
  inline ::sanguo::MsgRoleBagGoods* mutable_rolebaggoods();
  inline ::sanguo::MsgRoleBagGoods* release_rolebaggoods();
  inline void set_allocated_rolebaggoods(::sanguo::MsgRoleBagGoods* rolebaggoods);

  // optional .sanguo.MsgPet pet = 4;
  inline bool has_pet() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 4;
  inline const ::sanguo::MsgPet& pet() const;
  inline ::sanguo::MsgPet* mutable_pet();
  inline ::sanguo::MsgPet* release_pet();
  inline void set_allocated_pet(::sanguo::MsgPet* pet);

  // @@protoc_insertion_point(class_scope:sanguo.LevelUpPetResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_rolebaggoods();
  inline void clear_has_rolebaggoods();
  inline void set_has_pet();
  inline void clear_has_pet();

  int msgid_;
  int status_;
  ::sanguo::MsgRoleBagGoods* rolebaggoods_;
  ::sanguo::MsgPet* pet_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_level_5fup_5fpet_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_level_5fup_5fpet_2eproto();
  #endif
  friend void protobuf_AssignDesc_level_5fup_5fpet_2eproto();
  friend void protobuf_ShutdownFile_level_5fup_5fpet_2eproto();

  void InitAsDefaultInstance();
  static LevelUpPetResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// LevelUpPetRequest

// required .sanguo.MsgID msgID = 1;
inline bool LevelUpPetRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelUpPetRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelUpPetRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelUpPetRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID LevelUpPetRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void LevelUpPetRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint64 petID = 2;
inline bool LevelUpPetRequest::has_petid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelUpPetRequest::set_has_petid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelUpPetRequest::clear_has_petid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelUpPetRequest::clear_petid() {
  petid_ = GOOGLE_ULONGLONG(0);
  clear_has_petid();
}
inline ::google::protobuf::uint64 LevelUpPetRequest::petid() const {
  return petid_;
}
inline void LevelUpPetRequest::set_petid(::google::protobuf::uint64 value) {
  set_has_petid();
  petid_ = value;
}

// required uint64 feedID = 3;
inline bool LevelUpPetRequest::has_feedid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevelUpPetRequest::set_has_feedid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevelUpPetRequest::clear_has_feedid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevelUpPetRequest::clear_feedid() {
  feedid_ = GOOGLE_ULONGLONG(0);
  clear_has_feedid();
}
inline ::google::protobuf::uint64 LevelUpPetRequest::feedid() const {
  return feedid_;
}
inline void LevelUpPetRequest::set_feedid(::google::protobuf::uint64 value) {
  set_has_feedid();
  feedid_ = value;
}

// -------------------------------------------------------------------

// LevelUpPetResponse

// required .sanguo.MsgID msgID = 1;
inline bool LevelUpPetResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelUpPetResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelUpPetResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelUpPetResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID LevelUpPetResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void LevelUpPetResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool LevelUpPetResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelUpPetResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelUpPetResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelUpPetResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode LevelUpPetResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void LevelUpPetResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional .sanguo.MsgRoleBagGoods roleBagGoods = 3;
inline bool LevelUpPetResponse::has_rolebaggoods() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevelUpPetResponse::set_has_rolebaggoods() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevelUpPetResponse::clear_has_rolebaggoods() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevelUpPetResponse::clear_rolebaggoods() {
  if (rolebaggoods_ != NULL) rolebaggoods_->::sanguo::MsgRoleBagGoods::Clear();
  clear_has_rolebaggoods();
}
inline const ::sanguo::MsgRoleBagGoods& LevelUpPetResponse::rolebaggoods() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return rolebaggoods_ != NULL ? *rolebaggoods_ : *default_instance().rolebaggoods_;
#else
  return rolebaggoods_ != NULL ? *rolebaggoods_ : *default_instance_->rolebaggoods_;
#endif
}
inline ::sanguo::MsgRoleBagGoods* LevelUpPetResponse::mutable_rolebaggoods() {
  set_has_rolebaggoods();
  if (rolebaggoods_ == NULL) rolebaggoods_ = new ::sanguo::MsgRoleBagGoods;
  return rolebaggoods_;
}
inline ::sanguo::MsgRoleBagGoods* LevelUpPetResponse::release_rolebaggoods() {
  clear_has_rolebaggoods();
  ::sanguo::MsgRoleBagGoods* temp = rolebaggoods_;
  rolebaggoods_ = NULL;
  return temp;
}
inline void LevelUpPetResponse::set_allocated_rolebaggoods(::sanguo::MsgRoleBagGoods* rolebaggoods) {
  delete rolebaggoods_;
  rolebaggoods_ = rolebaggoods;
  if (rolebaggoods) {
    set_has_rolebaggoods();
  } else {
    clear_has_rolebaggoods();
  }
}

// optional .sanguo.MsgPet pet = 4;
inline bool LevelUpPetResponse::has_pet() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LevelUpPetResponse::set_has_pet() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LevelUpPetResponse::clear_has_pet() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LevelUpPetResponse::clear_pet() {
  if (pet_ != NULL) pet_->::sanguo::MsgPet::Clear();
  clear_has_pet();
}
inline const ::sanguo::MsgPet& LevelUpPetResponse::pet() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return pet_ != NULL ? *pet_ : *default_instance().pet_;
#else
  return pet_ != NULL ? *pet_ : *default_instance_->pet_;
#endif
}
inline ::sanguo::MsgPet* LevelUpPetResponse::mutable_pet() {
  set_has_pet();
  if (pet_ == NULL) pet_ = new ::sanguo::MsgPet;
  return pet_;
}
inline ::sanguo::MsgPet* LevelUpPetResponse::release_pet() {
  clear_has_pet();
  ::sanguo::MsgPet* temp = pet_;
  pet_ = NULL;
  return temp;
}
inline void LevelUpPetResponse::set_allocated_pet(::sanguo::MsgPet* pet) {
  delete pet_;
  pet_ = pet;
  if (pet) {
    set_has_pet();
  } else {
    clear_has_pet();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_level_5fup_5fpet_2eproto__INCLUDED
