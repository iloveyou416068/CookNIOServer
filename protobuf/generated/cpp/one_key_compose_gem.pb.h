// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: one_key_compose_gem.proto

#ifndef PROTOBUF_one_5fkey_5fcompose_5fgem_2eproto__INCLUDED
#define PROTOBUF_one_5fkey_5fcompose_5fgem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "role_gem_bag_goods.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_one_5fkey_5fcompose_5fgem_2eproto();
void protobuf_AssignDesc_one_5fkey_5fcompose_5fgem_2eproto();
void protobuf_ShutdownFile_one_5fkey_5fcompose_5fgem_2eproto();

class OneKeyComposeGemRequest;
class OneKeyComposeGemResponse;

// ===================================================================

class OneKeyComposeGemRequest : public ::google::protobuf::MessageLite {
 public:
  OneKeyComposeGemRequest();
  virtual ~OneKeyComposeGemRequest();

  OneKeyComposeGemRequest(const OneKeyComposeGemRequest& from);

  inline OneKeyComposeGemRequest& operator=(const OneKeyComposeGemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const OneKeyComposeGemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OneKeyComposeGemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OneKeyComposeGemRequest* other);

  // implements Message ----------------------------------------------

  OneKeyComposeGemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OneKeyComposeGemRequest& from);
  void MergeFrom(const OneKeyComposeGemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint64 autoIncrID = 2;
  inline bool has_autoincrid() const;
  inline void clear_autoincrid();
  static const int kAutoIncrIDFieldNumber = 2;
  inline ::google::protobuf::uint64 autoincrid() const;
  inline void set_autoincrid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:sanguo.OneKeyComposeGemRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_autoincrid();
  inline void clear_has_autoincrid();

  ::google::protobuf::uint64 autoincrid_;
  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_one_5fkey_5fcompose_5fgem_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_one_5fkey_5fcompose_5fgem_2eproto();
  #endif
  friend void protobuf_AssignDesc_one_5fkey_5fcompose_5fgem_2eproto();
  friend void protobuf_ShutdownFile_one_5fkey_5fcompose_5fgem_2eproto();

  void InitAsDefaultInstance();
  static OneKeyComposeGemRequest* default_instance_;
};
// -------------------------------------------------------------------

class OneKeyComposeGemResponse : public ::google::protobuf::MessageLite {
 public:
  OneKeyComposeGemResponse();
  virtual ~OneKeyComposeGemResponse();

  OneKeyComposeGemResponse(const OneKeyComposeGemResponse& from);

  inline OneKeyComposeGemResponse& operator=(const OneKeyComposeGemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const OneKeyComposeGemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OneKeyComposeGemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OneKeyComposeGemResponse* other);

  // implements Message ----------------------------------------------

  OneKeyComposeGemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OneKeyComposeGemResponse& from);
  void MergeFrom(const OneKeyComposeGemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional .sanguo.MsgRoleGemBagGoods roleGemBagGoods = 3;
  inline bool has_rolegembaggoods() const;
  inline void clear_rolegembaggoods();
  static const int kRoleGemBagGoodsFieldNumber = 3;
  inline const ::sanguo::MsgRoleGemBagGoods& rolegembaggoods() const;
  inline ::sanguo::MsgRoleGemBagGoods* mutable_rolegembaggoods();
  inline ::sanguo::MsgRoleGemBagGoods* release_rolegembaggoods();
  inline void set_allocated_rolegembaggoods(::sanguo::MsgRoleGemBagGoods* rolegembaggoods);

  // optional uint32 currentCount = 4;
  inline bool has_currentcount() const;
  inline void clear_currentcount();
  static const int kCurrentCountFieldNumber = 4;
  inline ::google::protobuf::uint32 currentcount() const;
  inline void set_currentcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.OneKeyComposeGemResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_rolegembaggoods();
  inline void clear_has_rolegembaggoods();
  inline void set_has_currentcount();
  inline void clear_has_currentcount();

  int msgid_;
  int status_;
  ::sanguo::MsgRoleGemBagGoods* rolegembaggoods_;
  ::google::protobuf::uint32 currentcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_one_5fkey_5fcompose_5fgem_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_one_5fkey_5fcompose_5fgem_2eproto();
  #endif
  friend void protobuf_AssignDesc_one_5fkey_5fcompose_5fgem_2eproto();
  friend void protobuf_ShutdownFile_one_5fkey_5fcompose_5fgem_2eproto();

  void InitAsDefaultInstance();
  static OneKeyComposeGemResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// OneKeyComposeGemRequest

// required .sanguo.MsgID msgID = 1;
inline bool OneKeyComposeGemRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneKeyComposeGemRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneKeyComposeGemRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneKeyComposeGemRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID OneKeyComposeGemRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void OneKeyComposeGemRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint64 autoIncrID = 2;
inline bool OneKeyComposeGemRequest::has_autoincrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneKeyComposeGemRequest::set_has_autoincrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneKeyComposeGemRequest::clear_has_autoincrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneKeyComposeGemRequest::clear_autoincrid() {
  autoincrid_ = GOOGLE_ULONGLONG(0);
  clear_has_autoincrid();
}
inline ::google::protobuf::uint64 OneKeyComposeGemRequest::autoincrid() const {
  return autoincrid_;
}
inline void OneKeyComposeGemRequest::set_autoincrid(::google::protobuf::uint64 value) {
  set_has_autoincrid();
  autoincrid_ = value;
}

// -------------------------------------------------------------------

// OneKeyComposeGemResponse

// required .sanguo.MsgID msgID = 1;
inline bool OneKeyComposeGemResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneKeyComposeGemResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneKeyComposeGemResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneKeyComposeGemResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID OneKeyComposeGemResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void OneKeyComposeGemResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool OneKeyComposeGemResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneKeyComposeGemResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneKeyComposeGemResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneKeyComposeGemResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode OneKeyComposeGemResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void OneKeyComposeGemResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional .sanguo.MsgRoleGemBagGoods roleGemBagGoods = 3;
inline bool OneKeyComposeGemResponse::has_rolegembaggoods() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneKeyComposeGemResponse::set_has_rolegembaggoods() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneKeyComposeGemResponse::clear_has_rolegembaggoods() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneKeyComposeGemResponse::clear_rolegembaggoods() {
  if (rolegembaggoods_ != NULL) rolegembaggoods_->::sanguo::MsgRoleGemBagGoods::Clear();
  clear_has_rolegembaggoods();
}
inline const ::sanguo::MsgRoleGemBagGoods& OneKeyComposeGemResponse::rolegembaggoods() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return rolegembaggoods_ != NULL ? *rolegembaggoods_ : *default_instance().rolegembaggoods_;
#else
  return rolegembaggoods_ != NULL ? *rolegembaggoods_ : *default_instance_->rolegembaggoods_;
#endif
}
inline ::sanguo::MsgRoleGemBagGoods* OneKeyComposeGemResponse::mutable_rolegembaggoods() {
  set_has_rolegembaggoods();
  if (rolegembaggoods_ == NULL) rolegembaggoods_ = new ::sanguo::MsgRoleGemBagGoods;
  return rolegembaggoods_;
}
inline ::sanguo::MsgRoleGemBagGoods* OneKeyComposeGemResponse::release_rolegembaggoods() {
  clear_has_rolegembaggoods();
  ::sanguo::MsgRoleGemBagGoods* temp = rolegembaggoods_;
  rolegembaggoods_ = NULL;
  return temp;
}
inline void OneKeyComposeGemResponse::set_allocated_rolegembaggoods(::sanguo::MsgRoleGemBagGoods* rolegembaggoods) {
  delete rolegembaggoods_;
  rolegembaggoods_ = rolegembaggoods;
  if (rolegembaggoods) {
    set_has_rolegembaggoods();
  } else {
    clear_has_rolegembaggoods();
  }
}

// optional uint32 currentCount = 4;
inline bool OneKeyComposeGemResponse::has_currentcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneKeyComposeGemResponse::set_has_currentcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneKeyComposeGemResponse::clear_has_currentcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneKeyComposeGemResponse::clear_currentcount() {
  currentcount_ = 0u;
  clear_has_currentcount();
}
inline ::google::protobuf::uint32 OneKeyComposeGemResponse::currentcount() const {
  return currentcount_;
}
inline void OneKeyComposeGemResponse::set_currentcount(::google::protobuf::uint32 value) {
  set_has_currentcount();
  currentcount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_one_5fkey_5fcompose_5fgem_2eproto__INCLUDED
