// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_gamble_equip_info.proto

#ifndef PROTOBUF_get_5fgamble_5fequip_5finfo_2eproto__INCLUDED
#define PROTOBUF_get_5fgamble_5fequip_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_get_5fgamble_5fequip_5finfo_2eproto();
void protobuf_AssignDesc_get_5fgamble_5fequip_5finfo_2eproto();
void protobuf_ShutdownFile_get_5fgamble_5fequip_5finfo_2eproto();

class GetGambleEquipInfoRequest;
class GetGambleEquipInfoResponse;

// ===================================================================

class GetGambleEquipInfoRequest : public ::google::protobuf::MessageLite {
 public:
  GetGambleEquipInfoRequest();
  virtual ~GetGambleEquipInfoRequest();

  GetGambleEquipInfoRequest(const GetGambleEquipInfoRequest& from);

  inline GetGambleEquipInfoRequest& operator=(const GetGambleEquipInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetGambleEquipInfoRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetGambleEquipInfoRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetGambleEquipInfoRequest* other);

  // implements Message ----------------------------------------------

  GetGambleEquipInfoRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetGambleEquipInfoRequest& from);
  void MergeFrom(const GetGambleEquipInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.GetGambleEquipInfoRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5fgamble_5fequip_5finfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5fgamble_5fequip_5finfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5fgamble_5fequip_5finfo_2eproto();
  friend void protobuf_ShutdownFile_get_5fgamble_5fequip_5finfo_2eproto();

  void InitAsDefaultInstance();
  static GetGambleEquipInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGambleEquipInfoResponse : public ::google::protobuf::MessageLite {
 public:
  GetGambleEquipInfoResponse();
  virtual ~GetGambleEquipInfoResponse();

  GetGambleEquipInfoResponse(const GetGambleEquipInfoResponse& from);

  inline GetGambleEquipInfoResponse& operator=(const GetGambleEquipInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetGambleEquipInfoResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetGambleEquipInfoResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetGambleEquipInfoResponse* other);

  // implements Message ----------------------------------------------

  GetGambleEquipInfoResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetGambleEquipInfoResponse& from);
  void MergeFrom(const GetGambleEquipInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 remainTimes = 3;
  inline bool has_remaintimes() const;
  inline void clear_remaintimes();
  static const int kRemainTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 remaintimes() const;
  inline void set_remaintimes(::google::protobuf::uint32 value);

  // optional bool isFirstUsedJadeInGold = 4;
  inline bool has_isfirstusedjadeingold() const;
  inline void clear_isfirstusedjadeingold();
  static const int kIsFirstUsedJadeInGoldFieldNumber = 4;
  inline bool isfirstusedjadeingold() const;
  inline void set_isfirstusedjadeingold(bool value);

  // optional uint32 mutilUsedJadeInGoldCount = 5;
  inline bool has_mutilusedjadeingoldcount() const;
  inline void clear_mutilusedjadeingoldcount();
  static const int kMutilUsedJadeInGoldCountFieldNumber = 5;
  inline ::google::protobuf::uint32 mutilusedjadeingoldcount() const;
  inline void set_mutilusedjadeingoldcount(::google::protobuf::uint32 value);

  // optional uint32 mutilUsedJadeInGoldNeed = 6;
  inline bool has_mutilusedjadeingoldneed() const;
  inline void clear_mutilusedjadeingoldneed();
  static const int kMutilUsedJadeInGoldNeedFieldNumber = 6;
  inline ::google::protobuf::uint32 mutilusedjadeingoldneed() const;
  inline void set_mutilusedjadeingoldneed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.GetGambleEquipInfoResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_remaintimes();
  inline void clear_has_remaintimes();
  inline void set_has_isfirstusedjadeingold();
  inline void clear_has_isfirstusedjadeingold();
  inline void set_has_mutilusedjadeingoldcount();
  inline void clear_has_mutilusedjadeingoldcount();
  inline void set_has_mutilusedjadeingoldneed();
  inline void clear_has_mutilusedjadeingoldneed();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 remaintimes_;
  bool isfirstusedjadeingold_;
  ::google::protobuf::uint32 mutilusedjadeingoldcount_;
  ::google::protobuf::uint32 mutilusedjadeingoldneed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5fgamble_5fequip_5finfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5fgamble_5fequip_5finfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5fgamble_5fequip_5finfo_2eproto();
  friend void protobuf_ShutdownFile_get_5fgamble_5fequip_5finfo_2eproto();

  void InitAsDefaultInstance();
  static GetGambleEquipInfoResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// GetGambleEquipInfoRequest

// required .sanguo.MsgID msgID = 1;
inline bool GetGambleEquipInfoRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGambleEquipInfoRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGambleEquipInfoRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGambleEquipInfoRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetGambleEquipInfoRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetGambleEquipInfoRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// GetGambleEquipInfoResponse

// required .sanguo.MsgID msgID = 1;
inline bool GetGambleEquipInfoResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGambleEquipInfoResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGambleEquipInfoResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGambleEquipInfoResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetGambleEquipInfoResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetGambleEquipInfoResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool GetGambleEquipInfoResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGambleEquipInfoResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGambleEquipInfoResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGambleEquipInfoResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode GetGambleEquipInfoResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void GetGambleEquipInfoResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 remainTimes = 3;
inline bool GetGambleEquipInfoResponse::has_remaintimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGambleEquipInfoResponse::set_has_remaintimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGambleEquipInfoResponse::clear_has_remaintimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGambleEquipInfoResponse::clear_remaintimes() {
  remaintimes_ = 0u;
  clear_has_remaintimes();
}
inline ::google::protobuf::uint32 GetGambleEquipInfoResponse::remaintimes() const {
  return remaintimes_;
}
inline void GetGambleEquipInfoResponse::set_remaintimes(::google::protobuf::uint32 value) {
  set_has_remaintimes();
  remaintimes_ = value;
}

// optional bool isFirstUsedJadeInGold = 4;
inline bool GetGambleEquipInfoResponse::has_isfirstusedjadeingold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGambleEquipInfoResponse::set_has_isfirstusedjadeingold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGambleEquipInfoResponse::clear_has_isfirstusedjadeingold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGambleEquipInfoResponse::clear_isfirstusedjadeingold() {
  isfirstusedjadeingold_ = false;
  clear_has_isfirstusedjadeingold();
}
inline bool GetGambleEquipInfoResponse::isfirstusedjadeingold() const {
  return isfirstusedjadeingold_;
}
inline void GetGambleEquipInfoResponse::set_isfirstusedjadeingold(bool value) {
  set_has_isfirstusedjadeingold();
  isfirstusedjadeingold_ = value;
}

// optional uint32 mutilUsedJadeInGoldCount = 5;
inline bool GetGambleEquipInfoResponse::has_mutilusedjadeingoldcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetGambleEquipInfoResponse::set_has_mutilusedjadeingoldcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetGambleEquipInfoResponse::clear_has_mutilusedjadeingoldcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetGambleEquipInfoResponse::clear_mutilusedjadeingoldcount() {
  mutilusedjadeingoldcount_ = 0u;
  clear_has_mutilusedjadeingoldcount();
}
inline ::google::protobuf::uint32 GetGambleEquipInfoResponse::mutilusedjadeingoldcount() const {
  return mutilusedjadeingoldcount_;
}
inline void GetGambleEquipInfoResponse::set_mutilusedjadeingoldcount(::google::protobuf::uint32 value) {
  set_has_mutilusedjadeingoldcount();
  mutilusedjadeingoldcount_ = value;
}

// optional uint32 mutilUsedJadeInGoldNeed = 6;
inline bool GetGambleEquipInfoResponse::has_mutilusedjadeingoldneed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetGambleEquipInfoResponse::set_has_mutilusedjadeingoldneed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetGambleEquipInfoResponse::clear_has_mutilusedjadeingoldneed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetGambleEquipInfoResponse::clear_mutilusedjadeingoldneed() {
  mutilusedjadeingoldneed_ = 0u;
  clear_has_mutilusedjadeingoldneed();
}
inline ::google::protobuf::uint32 GetGambleEquipInfoResponse::mutilusedjadeingoldneed() const {
  return mutilusedjadeingoldneed_;
}
inline void GetGambleEquipInfoResponse::set_mutilusedjadeingoldneed(::google::protobuf::uint32 value) {
  set_has_mutilusedjadeingoldneed();
  mutilusedjadeingoldneed_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_get_5fgamble_5fequip_5finfo_2eproto__INCLUDED
