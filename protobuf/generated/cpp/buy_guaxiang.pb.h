// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buy_guaxiang.proto

#ifndef PROTOBUF_buy_5fguaxiang_2eproto__INCLUDED
#define PROTOBUF_buy_5fguaxiang_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_guaxiang_goods.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_buy_5fguaxiang_2eproto();
void protobuf_AssignDesc_buy_5fguaxiang_2eproto();
void protobuf_ShutdownFile_buy_5fguaxiang_2eproto();

class BuyGuaxiangRequest;
class BuyGuaxiangResponse;

// ===================================================================

class BuyGuaxiangRequest : public ::google::protobuf::MessageLite {
 public:
  BuyGuaxiangRequest();
  virtual ~BuyGuaxiangRequest();

  BuyGuaxiangRequest(const BuyGuaxiangRequest& from);

  inline BuyGuaxiangRequest& operator=(const BuyGuaxiangRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const BuyGuaxiangRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BuyGuaxiangRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BuyGuaxiangRequest* other);

  // implements Message ----------------------------------------------

  BuyGuaxiangRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BuyGuaxiangRequest& from);
  void MergeFrom(const BuyGuaxiangRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint32 attrID = 2;
  inline bool has_attrid() const;
  inline void clear_attrid();
  static const int kAttrIDFieldNumber = 2;
  inline ::google::protobuf::uint32 attrid() const;
  inline void set_attrid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.BuyGuaxiangRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_attrid();
  inline void clear_has_attrid();

  int msgid_;
  ::google::protobuf::uint32 attrid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_buy_5fguaxiang_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_buy_5fguaxiang_2eproto();
  #endif
  friend void protobuf_AssignDesc_buy_5fguaxiang_2eproto();
  friend void protobuf_ShutdownFile_buy_5fguaxiang_2eproto();

  void InitAsDefaultInstance();
  static BuyGuaxiangRequest* default_instance_;
};
// -------------------------------------------------------------------

class BuyGuaxiangResponse : public ::google::protobuf::MessageLite {
 public:
  BuyGuaxiangResponse();
  virtual ~BuyGuaxiangResponse();

  BuyGuaxiangResponse(const BuyGuaxiangResponse& from);

  inline BuyGuaxiangResponse& operator=(const BuyGuaxiangResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const BuyGuaxiangResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BuyGuaxiangResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BuyGuaxiangResponse* other);

  // implements Message ----------------------------------------------

  BuyGuaxiangResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BuyGuaxiangResponse& from);
  void MergeFrom(const BuyGuaxiangResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint64 credit = 3;
  inline bool has_credit() const;
  inline void clear_credit();
  static const int kCreditFieldNumber = 3;
  inline ::google::protobuf::uint64 credit() const;
  inline void set_credit(::google::protobuf::uint64 value);

  // optional .sanguo.MsgGuaxiangGoods guaxiangGoods = 4;
  inline bool has_guaxianggoods() const;
  inline void clear_guaxianggoods();
  static const int kGuaxiangGoodsFieldNumber = 4;
  inline const ::sanguo::MsgGuaxiangGoods& guaxianggoods() const;
  inline ::sanguo::MsgGuaxiangGoods* mutable_guaxianggoods();
  inline ::sanguo::MsgGuaxiangGoods* release_guaxianggoods();
  inline void set_allocated_guaxianggoods(::sanguo::MsgGuaxiangGoods* guaxianggoods);

  // @@protoc_insertion_point(class_scope:sanguo.BuyGuaxiangResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_credit();
  inline void clear_has_credit();
  inline void set_has_guaxianggoods();
  inline void clear_has_guaxianggoods();

  int msgid_;
  int status_;
  ::google::protobuf::uint64 credit_;
  ::sanguo::MsgGuaxiangGoods* guaxianggoods_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_buy_5fguaxiang_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_buy_5fguaxiang_2eproto();
  #endif
  friend void protobuf_AssignDesc_buy_5fguaxiang_2eproto();
  friend void protobuf_ShutdownFile_buy_5fguaxiang_2eproto();

  void InitAsDefaultInstance();
  static BuyGuaxiangResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BuyGuaxiangRequest

// required .sanguo.MsgID msgID = 1;
inline bool BuyGuaxiangRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyGuaxiangRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyGuaxiangRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyGuaxiangRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID BuyGuaxiangRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void BuyGuaxiangRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint32 attrID = 2;
inline bool BuyGuaxiangRequest::has_attrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyGuaxiangRequest::set_has_attrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyGuaxiangRequest::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyGuaxiangRequest::clear_attrid() {
  attrid_ = 0u;
  clear_has_attrid();
}
inline ::google::protobuf::uint32 BuyGuaxiangRequest::attrid() const {
  return attrid_;
}
inline void BuyGuaxiangRequest::set_attrid(::google::protobuf::uint32 value) {
  set_has_attrid();
  attrid_ = value;
}

// -------------------------------------------------------------------

// BuyGuaxiangResponse

// required .sanguo.MsgID msgID = 1;
inline bool BuyGuaxiangResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyGuaxiangResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyGuaxiangResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyGuaxiangResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID BuyGuaxiangResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void BuyGuaxiangResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool BuyGuaxiangResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyGuaxiangResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyGuaxiangResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyGuaxiangResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode BuyGuaxiangResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void BuyGuaxiangResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint64 credit = 3;
inline bool BuyGuaxiangResponse::has_credit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyGuaxiangResponse::set_has_credit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyGuaxiangResponse::clear_has_credit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyGuaxiangResponse::clear_credit() {
  credit_ = GOOGLE_ULONGLONG(0);
  clear_has_credit();
}
inline ::google::protobuf::uint64 BuyGuaxiangResponse::credit() const {
  return credit_;
}
inline void BuyGuaxiangResponse::set_credit(::google::protobuf::uint64 value) {
  set_has_credit();
  credit_ = value;
}

// optional .sanguo.MsgGuaxiangGoods guaxiangGoods = 4;
inline bool BuyGuaxiangResponse::has_guaxianggoods() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuyGuaxiangResponse::set_has_guaxianggoods() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuyGuaxiangResponse::clear_has_guaxianggoods() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuyGuaxiangResponse::clear_guaxianggoods() {
  if (guaxianggoods_ != NULL) guaxianggoods_->::sanguo::MsgGuaxiangGoods::Clear();
  clear_has_guaxianggoods();
}
inline const ::sanguo::MsgGuaxiangGoods& BuyGuaxiangResponse::guaxianggoods() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guaxianggoods_ != NULL ? *guaxianggoods_ : *default_instance().guaxianggoods_;
#else
  return guaxianggoods_ != NULL ? *guaxianggoods_ : *default_instance_->guaxianggoods_;
#endif
}
inline ::sanguo::MsgGuaxiangGoods* BuyGuaxiangResponse::mutable_guaxianggoods() {
  set_has_guaxianggoods();
  if (guaxianggoods_ == NULL) guaxianggoods_ = new ::sanguo::MsgGuaxiangGoods;
  return guaxianggoods_;
}
inline ::sanguo::MsgGuaxiangGoods* BuyGuaxiangResponse::release_guaxianggoods() {
  clear_has_guaxianggoods();
  ::sanguo::MsgGuaxiangGoods* temp = guaxianggoods_;
  guaxianggoods_ = NULL;
  return temp;
}
inline void BuyGuaxiangResponse::set_allocated_guaxianggoods(::sanguo::MsgGuaxiangGoods* guaxianggoods) {
  delete guaxianggoods_;
  guaxianggoods_ = guaxianggoods;
  if (guaxianggoods) {
    set_has_guaxianggoods();
  } else {
    clear_has_guaxianggoods();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_buy_5fguaxiang_2eproto__INCLUDED
