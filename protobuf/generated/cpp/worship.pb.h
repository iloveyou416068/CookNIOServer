// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worship.proto

#ifndef PROTOBUF_worship_2eproto__INCLUDED
#define PROTOBUF_worship_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_buff_infos.pb.h"
#include "gift_info.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_worship_2eproto();
void protobuf_AssignDesc_worship_2eproto();
void protobuf_ShutdownFile_worship_2eproto();

class WorshipRequest;
class WorshipResponse;

// ===================================================================

class WorshipRequest : public ::google::protobuf::MessageLite {
 public:
  WorshipRequest();
  virtual ~WorshipRequest();

  WorshipRequest(const WorshipRequest& from);

  inline WorshipRequest& operator=(const WorshipRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const WorshipRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WorshipRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WorshipRequest* other);

  // implements Message ----------------------------------------------

  WorshipRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WorshipRequest& from);
  void MergeFrom(const WorshipRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint32 statuesType = 2;
  inline bool has_statuestype() const;
  inline void clear_statuestype();
  static const int kStatuesTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 statuestype() const;
  inline void set_statuestype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.WorshipRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_statuestype();
  inline void clear_has_statuestype();

  int msgid_;
  ::google::protobuf::uint32 statuestype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_worship_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_worship_2eproto();
  #endif
  friend void protobuf_AssignDesc_worship_2eproto();
  friend void protobuf_ShutdownFile_worship_2eproto();

  void InitAsDefaultInstance();
  static WorshipRequest* default_instance_;
};
// -------------------------------------------------------------------

class WorshipResponse : public ::google::protobuf::MessageLite {
 public:
  WorshipResponse();
  virtual ~WorshipResponse();

  WorshipResponse(const WorshipResponse& from);

  inline WorshipResponse& operator=(const WorshipResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const WorshipResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WorshipResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WorshipResponse* other);

  // implements Message ----------------------------------------------

  WorshipResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WorshipResponse& from);
  void MergeFrom(const WorshipResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional .sanguo.MsgGiftInfo giftInfos = 3;
  inline bool has_giftinfos() const;
  inline void clear_giftinfos();
  static const int kGiftInfosFieldNumber = 3;
  inline const ::sanguo::MsgGiftInfo& giftinfos() const;
  inline ::sanguo::MsgGiftInfo* mutable_giftinfos();
  inline ::sanguo::MsgGiftInfo* release_giftinfos();
  inline void set_allocated_giftinfos(::sanguo::MsgGiftInfo* giftinfos);

  // repeated .sanguo.MsgRoleBuffInfos roleBuffInfos = 4;
  inline int rolebuffinfos_size() const;
  inline void clear_rolebuffinfos();
  static const int kRoleBuffInfosFieldNumber = 4;
  inline const ::sanguo::MsgRoleBuffInfos& rolebuffinfos(int index) const;
  inline ::sanguo::MsgRoleBuffInfos* mutable_rolebuffinfos(int index);
  inline ::sanguo::MsgRoleBuffInfos* add_rolebuffinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBuffInfos >&
      rolebuffinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBuffInfos >*
      mutable_rolebuffinfos();

  // @@protoc_insertion_point(class_scope:sanguo.WorshipResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_giftinfos();
  inline void clear_has_giftinfos();

  int msgid_;
  int status_;
  ::sanguo::MsgGiftInfo* giftinfos_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBuffInfos > rolebuffinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_worship_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_worship_2eproto();
  #endif
  friend void protobuf_AssignDesc_worship_2eproto();
  friend void protobuf_ShutdownFile_worship_2eproto();

  void InitAsDefaultInstance();
  static WorshipResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// WorshipRequest

// required .sanguo.MsgID msgID = 1;
inline bool WorshipRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorshipRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorshipRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorshipRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID WorshipRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void WorshipRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint32 statuesType = 2;
inline bool WorshipRequest::has_statuestype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorshipRequest::set_has_statuestype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorshipRequest::clear_has_statuestype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorshipRequest::clear_statuestype() {
  statuestype_ = 0u;
  clear_has_statuestype();
}
inline ::google::protobuf::uint32 WorshipRequest::statuestype() const {
  return statuestype_;
}
inline void WorshipRequest::set_statuestype(::google::protobuf::uint32 value) {
  set_has_statuestype();
  statuestype_ = value;
}

// -------------------------------------------------------------------

// WorshipResponse

// required .sanguo.MsgID msgID = 1;
inline bool WorshipResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorshipResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorshipResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorshipResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID WorshipResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void WorshipResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool WorshipResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorshipResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorshipResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorshipResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode WorshipResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void WorshipResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional .sanguo.MsgGiftInfo giftInfos = 3;
inline bool WorshipResponse::has_giftinfos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorshipResponse::set_has_giftinfos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorshipResponse::clear_has_giftinfos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorshipResponse::clear_giftinfos() {
  if (giftinfos_ != NULL) giftinfos_->::sanguo::MsgGiftInfo::Clear();
  clear_has_giftinfos();
}
inline const ::sanguo::MsgGiftInfo& WorshipResponse::giftinfos() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return giftinfos_ != NULL ? *giftinfos_ : *default_instance().giftinfos_;
#else
  return giftinfos_ != NULL ? *giftinfos_ : *default_instance_->giftinfos_;
#endif
}
inline ::sanguo::MsgGiftInfo* WorshipResponse::mutable_giftinfos() {
  set_has_giftinfos();
  if (giftinfos_ == NULL) giftinfos_ = new ::sanguo::MsgGiftInfo;
  return giftinfos_;
}
inline ::sanguo::MsgGiftInfo* WorshipResponse::release_giftinfos() {
  clear_has_giftinfos();
  ::sanguo::MsgGiftInfo* temp = giftinfos_;
  giftinfos_ = NULL;
  return temp;
}
inline void WorshipResponse::set_allocated_giftinfos(::sanguo::MsgGiftInfo* giftinfos) {
  delete giftinfos_;
  giftinfos_ = giftinfos;
  if (giftinfos) {
    set_has_giftinfos();
  } else {
    clear_has_giftinfos();
  }
}

// repeated .sanguo.MsgRoleBuffInfos roleBuffInfos = 4;
inline int WorshipResponse::rolebuffinfos_size() const {
  return rolebuffinfos_.size();
}
inline void WorshipResponse::clear_rolebuffinfos() {
  rolebuffinfos_.Clear();
}
inline const ::sanguo::MsgRoleBuffInfos& WorshipResponse::rolebuffinfos(int index) const {
  return rolebuffinfos_.Get(index);
}
inline ::sanguo::MsgRoleBuffInfos* WorshipResponse::mutable_rolebuffinfos(int index) {
  return rolebuffinfos_.Mutable(index);
}
inline ::sanguo::MsgRoleBuffInfos* WorshipResponse::add_rolebuffinfos() {
  return rolebuffinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBuffInfos >&
WorshipResponse::rolebuffinfos() const {
  return rolebuffinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleBuffInfos >*
WorshipResponse::mutable_rolebuffinfos() {
  return &rolebuffinfos_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_worship_2eproto__INCLUDED
