// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sweep_info_of_login.proto

#ifndef PROTOBUF_sweep_5finfo_5fof_5flogin_2eproto__INCLUDED
#define PROTOBUF_sweep_5finfo_5fof_5flogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_cooldown.pb.h"
#include "sweep_dungeon_award.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sweep_5finfo_5fof_5flogin_2eproto();
void protobuf_AssignDesc_sweep_5finfo_5fof_5flogin_2eproto();
void protobuf_ShutdownFile_sweep_5finfo_5fof_5flogin_2eproto();

class SweepInfoOfLoginRequest;
class SweepInfoOfLoginResponse;

// ===================================================================

class SweepInfoOfLoginRequest : public ::google::protobuf::MessageLite {
 public:
  SweepInfoOfLoginRequest();
  virtual ~SweepInfoOfLoginRequest();

  SweepInfoOfLoginRequest(const SweepInfoOfLoginRequest& from);

  inline SweepInfoOfLoginRequest& operator=(const SweepInfoOfLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const SweepInfoOfLoginRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SweepInfoOfLoginRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SweepInfoOfLoginRequest* other);

  // implements Message ----------------------------------------------

  SweepInfoOfLoginRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SweepInfoOfLoginRequest& from);
  void MergeFrom(const SweepInfoOfLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.SweepInfoOfLoginRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_sweep_5finfo_5fof_5flogin_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_sweep_5finfo_5fof_5flogin_2eproto();
  #endif
  friend void protobuf_AssignDesc_sweep_5finfo_5fof_5flogin_2eproto();
  friend void protobuf_ShutdownFile_sweep_5finfo_5fof_5flogin_2eproto();

  void InitAsDefaultInstance();
  static SweepInfoOfLoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class SweepInfoOfLoginResponse : public ::google::protobuf::MessageLite {
 public:
  SweepInfoOfLoginResponse();
  virtual ~SweepInfoOfLoginResponse();

  SweepInfoOfLoginResponse(const SweepInfoOfLoginResponse& from);

  inline SweepInfoOfLoginResponse& operator=(const SweepInfoOfLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const SweepInfoOfLoginResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SweepInfoOfLoginResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SweepInfoOfLoginResponse* other);

  // implements Message ----------------------------------------------

  SweepInfoOfLoginResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SweepInfoOfLoginResponse& from);
  void MergeFrom(const SweepInfoOfLoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 dungeonId = 3;
  inline bool has_dungeonid() const;
  inline void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 3;
  inline ::google::protobuf::uint32 dungeonid() const;
  inline void set_dungeonid(::google::protobuf::uint32 value);

  // optional uint32 dungeonType = 4;
  inline bool has_dungeontype() const;
  inline void clear_dungeontype();
  static const int kDungeonTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 dungeontype() const;
  inline void set_dungeontype(::google::protobuf::uint32 value);

  // optional uint32 sweepDungeonType = 5;
  inline bool has_sweepdungeontype() const;
  inline void clear_sweepdungeontype();
  static const int kSweepDungeonTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 sweepdungeontype() const;
  inline void set_sweepdungeontype(::google::protobuf::uint32 value);

  // optional uint64 copper = 6;
  inline bool has_copper() const;
  inline void clear_copper();
  static const int kCopperFieldNumber = 6;
  inline ::google::protobuf::uint64 copper() const;
  inline void set_copper(::google::protobuf::uint64 value);

  // optional uint64 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint64 jungong = 8;
  inline bool has_jungong() const;
  inline void clear_jungong();
  static const int kJungongFieldNumber = 8;
  inline ::google::protobuf::uint64 jungong() const;
  inline void set_jungong(::google::protobuf::uint64 value);

  // optional uint32 power = 9;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 9;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);

  // optional .sanguo.MsgRoleCooldown cd = 10;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 10;
  inline const ::sanguo::MsgRoleCooldown& cd() const;
  inline ::sanguo::MsgRoleCooldown* mutable_cd();
  inline ::sanguo::MsgRoleCooldown* release_cd();
  inline void set_allocated_cd(::sanguo::MsgRoleCooldown* cd);

  // optional string onlineGetGoodsId = 11;
  inline bool has_onlinegetgoodsid() const;
  inline void clear_onlinegetgoodsid();
  static const int kOnlineGetGoodsIdFieldNumber = 11;
  inline const ::std::string& onlinegetgoodsid() const;
  inline void set_onlinegetgoodsid(const ::std::string& value);
  inline void set_onlinegetgoodsid(const char* value);
  inline void set_onlinegetgoodsid(const char* value, size_t size);
  inline ::std::string* mutable_onlinegetgoodsid();
  inline ::std::string* release_onlinegetgoodsid();
  inline void set_allocated_onlinegetgoodsid(::std::string* onlinegetgoodsid);

  // optional uint32 startFloor = 12;
  inline bool has_startfloor() const;
  inline void clear_startfloor();
  static const int kStartFloorFieldNumber = 12;
  inline ::google::protobuf::uint32 startfloor() const;
  inline void set_startfloor(::google::protobuf::uint32 value);

  // optional uint32 currentFloor = 13;
  inline bool has_currentfloor() const;
  inline void clear_currentfloor();
  static const int kCurrentFloorFieldNumber = 13;
  inline ::google::protobuf::uint32 currentfloor() const;
  inline void set_currentfloor(::google::protobuf::uint32 value);

  // optional uint32 destFloor = 14;
  inline bool has_destfloor() const;
  inline void clear_destfloor();
  static const int kDestFloorFieldNumber = 14;
  inline ::google::protobuf::uint32 destfloor() const;
  inline void set_destfloor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.SweepInfoOfLoginResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_dungeonid();
  inline void clear_has_dungeonid();
  inline void set_has_dungeontype();
  inline void clear_has_dungeontype();
  inline void set_has_sweepdungeontype();
  inline void clear_has_sweepdungeontype();
  inline void set_has_copper();
  inline void clear_has_copper();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_jungong();
  inline void clear_has_jungong();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_onlinegetgoodsid();
  inline void clear_has_onlinegetgoodsid();
  inline void set_has_startfloor();
  inline void clear_has_startfloor();
  inline void set_has_currentfloor();
  inline void clear_has_currentfloor();
  inline void set_has_destfloor();
  inline void clear_has_destfloor();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 dungeonid_;
  ::google::protobuf::uint32 dungeontype_;
  ::google::protobuf::uint64 copper_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 sweepdungeontype_;
  ::google::protobuf::uint32 power_;
  ::google::protobuf::uint64 jungong_;
  ::sanguo::MsgRoleCooldown* cd_;
  ::std::string* onlinegetgoodsid_;
  ::google::protobuf::uint32 startfloor_;
  ::google::protobuf::uint32 currentfloor_;
  ::google::protobuf::uint32 destfloor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_sweep_5finfo_5fof_5flogin_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_sweep_5finfo_5fof_5flogin_2eproto();
  #endif
  friend void protobuf_AssignDesc_sweep_5finfo_5fof_5flogin_2eproto();
  friend void protobuf_ShutdownFile_sweep_5finfo_5fof_5flogin_2eproto();

  void InitAsDefaultInstance();
  static SweepInfoOfLoginResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// SweepInfoOfLoginRequest

// required .sanguo.MsgID msgID = 1;
inline bool SweepInfoOfLoginRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SweepInfoOfLoginRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SweepInfoOfLoginRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SweepInfoOfLoginRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID SweepInfoOfLoginRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void SweepInfoOfLoginRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// SweepInfoOfLoginResponse

// required .sanguo.MsgID msgID = 1;
inline bool SweepInfoOfLoginResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SweepInfoOfLoginResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SweepInfoOfLoginResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID SweepInfoOfLoginResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void SweepInfoOfLoginResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool SweepInfoOfLoginResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SweepInfoOfLoginResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SweepInfoOfLoginResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode SweepInfoOfLoginResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void SweepInfoOfLoginResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 dungeonId = 3;
inline bool SweepInfoOfLoginResponse::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SweepInfoOfLoginResponse::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SweepInfoOfLoginResponse::clear_dungeonid() {
  dungeonid_ = 0u;
  clear_has_dungeonid();
}
inline ::google::protobuf::uint32 SweepInfoOfLoginResponse::dungeonid() const {
  return dungeonid_;
}
inline void SweepInfoOfLoginResponse::set_dungeonid(::google::protobuf::uint32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
}

// optional uint32 dungeonType = 4;
inline bool SweepInfoOfLoginResponse::has_dungeontype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_dungeontype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SweepInfoOfLoginResponse::clear_has_dungeontype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SweepInfoOfLoginResponse::clear_dungeontype() {
  dungeontype_ = 0u;
  clear_has_dungeontype();
}
inline ::google::protobuf::uint32 SweepInfoOfLoginResponse::dungeontype() const {
  return dungeontype_;
}
inline void SweepInfoOfLoginResponse::set_dungeontype(::google::protobuf::uint32 value) {
  set_has_dungeontype();
  dungeontype_ = value;
}

// optional uint32 sweepDungeonType = 5;
inline bool SweepInfoOfLoginResponse::has_sweepdungeontype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_sweepdungeontype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SweepInfoOfLoginResponse::clear_has_sweepdungeontype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SweepInfoOfLoginResponse::clear_sweepdungeontype() {
  sweepdungeontype_ = 0u;
  clear_has_sweepdungeontype();
}
inline ::google::protobuf::uint32 SweepInfoOfLoginResponse::sweepdungeontype() const {
  return sweepdungeontype_;
}
inline void SweepInfoOfLoginResponse::set_sweepdungeontype(::google::protobuf::uint32 value) {
  set_has_sweepdungeontype();
  sweepdungeontype_ = value;
}

// optional uint64 copper = 6;
inline bool SweepInfoOfLoginResponse::has_copper() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_copper() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SweepInfoOfLoginResponse::clear_has_copper() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SweepInfoOfLoginResponse::clear_copper() {
  copper_ = GOOGLE_ULONGLONG(0);
  clear_has_copper();
}
inline ::google::protobuf::uint64 SweepInfoOfLoginResponse::copper() const {
  return copper_;
}
inline void SweepInfoOfLoginResponse::set_copper(::google::protobuf::uint64 value) {
  set_has_copper();
  copper_ = value;
}

// optional uint64 exp = 7;
inline bool SweepInfoOfLoginResponse::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SweepInfoOfLoginResponse::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SweepInfoOfLoginResponse::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 SweepInfoOfLoginResponse::exp() const {
  return exp_;
}
inline void SweepInfoOfLoginResponse::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint64 jungong = 8;
inline bool SweepInfoOfLoginResponse::has_jungong() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_jungong() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SweepInfoOfLoginResponse::clear_has_jungong() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SweepInfoOfLoginResponse::clear_jungong() {
  jungong_ = GOOGLE_ULONGLONG(0);
  clear_has_jungong();
}
inline ::google::protobuf::uint64 SweepInfoOfLoginResponse::jungong() const {
  return jungong_;
}
inline void SweepInfoOfLoginResponse::set_jungong(::google::protobuf::uint64 value) {
  set_has_jungong();
  jungong_ = value;
}

// optional uint32 power = 9;
inline bool SweepInfoOfLoginResponse::has_power() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_power() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SweepInfoOfLoginResponse::clear_has_power() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SweepInfoOfLoginResponse::clear_power() {
  power_ = 0u;
  clear_has_power();
}
inline ::google::protobuf::uint32 SweepInfoOfLoginResponse::power() const {
  return power_;
}
inline void SweepInfoOfLoginResponse::set_power(::google::protobuf::uint32 value) {
  set_has_power();
  power_ = value;
}

// optional .sanguo.MsgRoleCooldown cd = 10;
inline bool SweepInfoOfLoginResponse::has_cd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_cd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SweepInfoOfLoginResponse::clear_has_cd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SweepInfoOfLoginResponse::clear_cd() {
  if (cd_ != NULL) cd_->::sanguo::MsgRoleCooldown::Clear();
  clear_has_cd();
}
inline const ::sanguo::MsgRoleCooldown& SweepInfoOfLoginResponse::cd() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cd_ != NULL ? *cd_ : *default_instance().cd_;
#else
  return cd_ != NULL ? *cd_ : *default_instance_->cd_;
#endif
}
inline ::sanguo::MsgRoleCooldown* SweepInfoOfLoginResponse::mutable_cd() {
  set_has_cd();
  if (cd_ == NULL) cd_ = new ::sanguo::MsgRoleCooldown;
  return cd_;
}
inline ::sanguo::MsgRoleCooldown* SweepInfoOfLoginResponse::release_cd() {
  clear_has_cd();
  ::sanguo::MsgRoleCooldown* temp = cd_;
  cd_ = NULL;
  return temp;
}
inline void SweepInfoOfLoginResponse::set_allocated_cd(::sanguo::MsgRoleCooldown* cd) {
  delete cd_;
  cd_ = cd;
  if (cd) {
    set_has_cd();
  } else {
    clear_has_cd();
  }
}

// optional string onlineGetGoodsId = 11;
inline bool SweepInfoOfLoginResponse::has_onlinegetgoodsid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_onlinegetgoodsid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SweepInfoOfLoginResponse::clear_has_onlinegetgoodsid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SweepInfoOfLoginResponse::clear_onlinegetgoodsid() {
  if (onlinegetgoodsid_ != &::google::protobuf::internal::kEmptyString) {
    onlinegetgoodsid_->clear();
  }
  clear_has_onlinegetgoodsid();
}
inline const ::std::string& SweepInfoOfLoginResponse::onlinegetgoodsid() const {
  return *onlinegetgoodsid_;
}
inline void SweepInfoOfLoginResponse::set_onlinegetgoodsid(const ::std::string& value) {
  set_has_onlinegetgoodsid();
  if (onlinegetgoodsid_ == &::google::protobuf::internal::kEmptyString) {
    onlinegetgoodsid_ = new ::std::string;
  }
  onlinegetgoodsid_->assign(value);
}
inline void SweepInfoOfLoginResponse::set_onlinegetgoodsid(const char* value) {
  set_has_onlinegetgoodsid();
  if (onlinegetgoodsid_ == &::google::protobuf::internal::kEmptyString) {
    onlinegetgoodsid_ = new ::std::string;
  }
  onlinegetgoodsid_->assign(value);
}
inline void SweepInfoOfLoginResponse::set_onlinegetgoodsid(const char* value, size_t size) {
  set_has_onlinegetgoodsid();
  if (onlinegetgoodsid_ == &::google::protobuf::internal::kEmptyString) {
    onlinegetgoodsid_ = new ::std::string;
  }
  onlinegetgoodsid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SweepInfoOfLoginResponse::mutable_onlinegetgoodsid() {
  set_has_onlinegetgoodsid();
  if (onlinegetgoodsid_ == &::google::protobuf::internal::kEmptyString) {
    onlinegetgoodsid_ = new ::std::string;
  }
  return onlinegetgoodsid_;
}
inline ::std::string* SweepInfoOfLoginResponse::release_onlinegetgoodsid() {
  clear_has_onlinegetgoodsid();
  if (onlinegetgoodsid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = onlinegetgoodsid_;
    onlinegetgoodsid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SweepInfoOfLoginResponse::set_allocated_onlinegetgoodsid(::std::string* onlinegetgoodsid) {
  if (onlinegetgoodsid_ != &::google::protobuf::internal::kEmptyString) {
    delete onlinegetgoodsid_;
  }
  if (onlinegetgoodsid) {
    set_has_onlinegetgoodsid();
    onlinegetgoodsid_ = onlinegetgoodsid;
  } else {
    clear_has_onlinegetgoodsid();
    onlinegetgoodsid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 startFloor = 12;
inline bool SweepInfoOfLoginResponse::has_startfloor() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_startfloor() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SweepInfoOfLoginResponse::clear_has_startfloor() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SweepInfoOfLoginResponse::clear_startfloor() {
  startfloor_ = 0u;
  clear_has_startfloor();
}
inline ::google::protobuf::uint32 SweepInfoOfLoginResponse::startfloor() const {
  return startfloor_;
}
inline void SweepInfoOfLoginResponse::set_startfloor(::google::protobuf::uint32 value) {
  set_has_startfloor();
  startfloor_ = value;
}

// optional uint32 currentFloor = 13;
inline bool SweepInfoOfLoginResponse::has_currentfloor() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_currentfloor() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SweepInfoOfLoginResponse::clear_has_currentfloor() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SweepInfoOfLoginResponse::clear_currentfloor() {
  currentfloor_ = 0u;
  clear_has_currentfloor();
}
inline ::google::protobuf::uint32 SweepInfoOfLoginResponse::currentfloor() const {
  return currentfloor_;
}
inline void SweepInfoOfLoginResponse::set_currentfloor(::google::protobuf::uint32 value) {
  set_has_currentfloor();
  currentfloor_ = value;
}

// optional uint32 destFloor = 14;
inline bool SweepInfoOfLoginResponse::has_destfloor() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SweepInfoOfLoginResponse::set_has_destfloor() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SweepInfoOfLoginResponse::clear_has_destfloor() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SweepInfoOfLoginResponse::clear_destfloor() {
  destfloor_ = 0u;
  clear_has_destfloor();
}
inline ::google::protobuf::uint32 SweepInfoOfLoginResponse::destfloor() const {
  return destfloor_;
}
inline void SweepInfoOfLoginResponse::set_destfloor(::google::protobuf::uint32 value) {
  set_has_destfloor();
  destfloor_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sweep_5finfo_5fof_5flogin_2eproto__INCLUDED
