// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: one_key_get_guaxiang.proto

#ifndef PROTOBUF_one_5fkey_5fget_5fguaxiang_2eproto__INCLUDED
#define PROTOBUF_one_5fkey_5fget_5fguaxiang_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_guaxiang_goods.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_one_5fkey_5fget_5fguaxiang_2eproto();
void protobuf_AssignDesc_one_5fkey_5fget_5fguaxiang_2eproto();
void protobuf_ShutdownFile_one_5fkey_5fget_5fguaxiang_2eproto();

class OneKeyGetGuaxiangRequest;
class OneKeyGetGuaxiangResponse;

// ===================================================================

class OneKeyGetGuaxiangRequest : public ::google::protobuf::MessageLite {
 public:
  OneKeyGetGuaxiangRequest();
  virtual ~OneKeyGetGuaxiangRequest();

  OneKeyGetGuaxiangRequest(const OneKeyGetGuaxiangRequest& from);

  inline OneKeyGetGuaxiangRequest& operator=(const OneKeyGetGuaxiangRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const OneKeyGetGuaxiangRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OneKeyGetGuaxiangRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OneKeyGetGuaxiangRequest* other);

  // implements Message ----------------------------------------------

  OneKeyGetGuaxiangRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OneKeyGetGuaxiangRequest& from);
  void MergeFrom(const OneKeyGetGuaxiangRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // repeated uint32 guaxiangAttrID = 2;
  inline int guaxiangattrid_size() const;
  inline void clear_guaxiangattrid();
  static const int kGuaxiangAttrIDFieldNumber = 2;
  inline ::google::protobuf::uint32 guaxiangattrid(int index) const;
  inline void set_guaxiangattrid(int index, ::google::protobuf::uint32 value);
  inline void add_guaxiangattrid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      guaxiangattrid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_guaxiangattrid();

  // required sint32 delIndex = 3;
  inline bool has_delindex() const;
  inline void clear_delindex();
  static const int kDelIndexFieldNumber = 3;
  inline ::google::protobuf::int32 delindex() const;
  inline void set_delindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sanguo.OneKeyGetGuaxiangRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_delindex();
  inline void clear_has_delindex();

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > guaxiangattrid_;
  int msgid_;
  ::google::protobuf::int32 delindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_one_5fkey_5fget_5fguaxiang_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_one_5fkey_5fget_5fguaxiang_2eproto();
  #endif
  friend void protobuf_AssignDesc_one_5fkey_5fget_5fguaxiang_2eproto();
  friend void protobuf_ShutdownFile_one_5fkey_5fget_5fguaxiang_2eproto();

  void InitAsDefaultInstance();
  static OneKeyGetGuaxiangRequest* default_instance_;
};
// -------------------------------------------------------------------

class OneKeyGetGuaxiangResponse : public ::google::protobuf::MessageLite {
 public:
  OneKeyGetGuaxiangResponse();
  virtual ~OneKeyGetGuaxiangResponse();

  OneKeyGetGuaxiangResponse(const OneKeyGetGuaxiangResponse& from);

  inline OneKeyGetGuaxiangResponse& operator=(const OneKeyGetGuaxiangResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const OneKeyGetGuaxiangResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OneKeyGetGuaxiangResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OneKeyGetGuaxiangResponse* other);

  // implements Message ----------------------------------------------

  OneKeyGetGuaxiangResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OneKeyGetGuaxiangResponse& from);
  void MergeFrom(const OneKeyGetGuaxiangResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // repeated .sanguo.MsgGuaxiangGoods guaxiangBag = 3;
  inline int guaxiangbag_size() const;
  inline void clear_guaxiangbag();
  static const int kGuaxiangBagFieldNumber = 3;
  inline const ::sanguo::MsgGuaxiangGoods& guaxiangbag(int index) const;
  inline ::sanguo::MsgGuaxiangGoods* mutable_guaxiangbag(int index);
  inline ::sanguo::MsgGuaxiangGoods* add_guaxiangbag();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgGuaxiangGoods >&
      guaxiangbag() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgGuaxiangGoods >*
      mutable_guaxiangbag();

  // repeated uint32 guaxiangAttrID = 4;
  inline int guaxiangattrid_size() const;
  inline void clear_guaxiangattrid();
  static const int kGuaxiangAttrIDFieldNumber = 4;
  inline ::google::protobuf::uint32 guaxiangattrid(int index) const;
  inline void set_guaxiangattrid(int index, ::google::protobuf::uint32 value);
  inline void add_guaxiangattrid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      guaxiangattrid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_guaxiangattrid();

  // @@protoc_insertion_point(class_scope:sanguo.OneKeyGetGuaxiangResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();

  int msgid_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgGuaxiangGoods > guaxiangbag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > guaxiangattrid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_one_5fkey_5fget_5fguaxiang_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_one_5fkey_5fget_5fguaxiang_2eproto();
  #endif
  friend void protobuf_AssignDesc_one_5fkey_5fget_5fguaxiang_2eproto();
  friend void protobuf_ShutdownFile_one_5fkey_5fget_5fguaxiang_2eproto();

  void InitAsDefaultInstance();
  static OneKeyGetGuaxiangResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// OneKeyGetGuaxiangRequest

// required .sanguo.MsgID msgID = 1;
inline bool OneKeyGetGuaxiangRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneKeyGetGuaxiangRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneKeyGetGuaxiangRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneKeyGetGuaxiangRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID OneKeyGetGuaxiangRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void OneKeyGetGuaxiangRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated uint32 guaxiangAttrID = 2;
inline int OneKeyGetGuaxiangRequest::guaxiangattrid_size() const {
  return guaxiangattrid_.size();
}
inline void OneKeyGetGuaxiangRequest::clear_guaxiangattrid() {
  guaxiangattrid_.Clear();
}
inline ::google::protobuf::uint32 OneKeyGetGuaxiangRequest::guaxiangattrid(int index) const {
  return guaxiangattrid_.Get(index);
}
inline void OneKeyGetGuaxiangRequest::set_guaxiangattrid(int index, ::google::protobuf::uint32 value) {
  guaxiangattrid_.Set(index, value);
}
inline void OneKeyGetGuaxiangRequest::add_guaxiangattrid(::google::protobuf::uint32 value) {
  guaxiangattrid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OneKeyGetGuaxiangRequest::guaxiangattrid() const {
  return guaxiangattrid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OneKeyGetGuaxiangRequest::mutable_guaxiangattrid() {
  return &guaxiangattrid_;
}

// required sint32 delIndex = 3;
inline bool OneKeyGetGuaxiangRequest::has_delindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneKeyGetGuaxiangRequest::set_has_delindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneKeyGetGuaxiangRequest::clear_has_delindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneKeyGetGuaxiangRequest::clear_delindex() {
  delindex_ = 0;
  clear_has_delindex();
}
inline ::google::protobuf::int32 OneKeyGetGuaxiangRequest::delindex() const {
  return delindex_;
}
inline void OneKeyGetGuaxiangRequest::set_delindex(::google::protobuf::int32 value) {
  set_has_delindex();
  delindex_ = value;
}

// -------------------------------------------------------------------

// OneKeyGetGuaxiangResponse

// required .sanguo.MsgID msgID = 1;
inline bool OneKeyGetGuaxiangResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneKeyGetGuaxiangResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneKeyGetGuaxiangResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneKeyGetGuaxiangResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID OneKeyGetGuaxiangResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void OneKeyGetGuaxiangResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool OneKeyGetGuaxiangResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneKeyGetGuaxiangResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneKeyGetGuaxiangResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneKeyGetGuaxiangResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode OneKeyGetGuaxiangResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void OneKeyGetGuaxiangResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// repeated .sanguo.MsgGuaxiangGoods guaxiangBag = 3;
inline int OneKeyGetGuaxiangResponse::guaxiangbag_size() const {
  return guaxiangbag_.size();
}
inline void OneKeyGetGuaxiangResponse::clear_guaxiangbag() {
  guaxiangbag_.Clear();
}
inline const ::sanguo::MsgGuaxiangGoods& OneKeyGetGuaxiangResponse::guaxiangbag(int index) const {
  return guaxiangbag_.Get(index);
}
inline ::sanguo::MsgGuaxiangGoods* OneKeyGetGuaxiangResponse::mutable_guaxiangbag(int index) {
  return guaxiangbag_.Mutable(index);
}
inline ::sanguo::MsgGuaxiangGoods* OneKeyGetGuaxiangResponse::add_guaxiangbag() {
  return guaxiangbag_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgGuaxiangGoods >&
OneKeyGetGuaxiangResponse::guaxiangbag() const {
  return guaxiangbag_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgGuaxiangGoods >*
OneKeyGetGuaxiangResponse::mutable_guaxiangbag() {
  return &guaxiangbag_;
}

// repeated uint32 guaxiangAttrID = 4;
inline int OneKeyGetGuaxiangResponse::guaxiangattrid_size() const {
  return guaxiangattrid_.size();
}
inline void OneKeyGetGuaxiangResponse::clear_guaxiangattrid() {
  guaxiangattrid_.Clear();
}
inline ::google::protobuf::uint32 OneKeyGetGuaxiangResponse::guaxiangattrid(int index) const {
  return guaxiangattrid_.Get(index);
}
inline void OneKeyGetGuaxiangResponse::set_guaxiangattrid(int index, ::google::protobuf::uint32 value) {
  guaxiangattrid_.Set(index, value);
}
inline void OneKeyGetGuaxiangResponse::add_guaxiangattrid(::google::protobuf::uint32 value) {
  guaxiangattrid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OneKeyGetGuaxiangResponse::guaxiangattrid() const {
  return guaxiangattrid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OneKeyGetGuaxiangResponse::mutable_guaxiangattrid() {
  return &guaxiangattrid_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_one_5fkey_5fget_5fguaxiang_2eproto__INCLUDED
