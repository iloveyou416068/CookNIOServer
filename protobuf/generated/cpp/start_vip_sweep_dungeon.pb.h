// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: start_vip_sweep_dungeon.proto

#ifndef PROTOBUF_start_5fvip_5fsweep_5fdungeon_2eproto__INCLUDED
#define PROTOBUF_start_5fvip_5fsweep_5fdungeon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "sweep_dungeon_award.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_start_5fvip_5fsweep_5fdungeon_2eproto();
void protobuf_AssignDesc_start_5fvip_5fsweep_5fdungeon_2eproto();
void protobuf_ShutdownFile_start_5fvip_5fsweep_5fdungeon_2eproto();

class StartVipSweepDungeonRequest;
class StartVipSweepDungeonResponse;

// ===================================================================

class StartVipSweepDungeonRequest : public ::google::protobuf::MessageLite {
 public:
  StartVipSweepDungeonRequest();
  virtual ~StartVipSweepDungeonRequest();

  StartVipSweepDungeonRequest(const StartVipSweepDungeonRequest& from);

  inline StartVipSweepDungeonRequest& operator=(const StartVipSweepDungeonRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const StartVipSweepDungeonRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const StartVipSweepDungeonRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(StartVipSweepDungeonRequest* other);

  // implements Message ----------------------------------------------

  StartVipSweepDungeonRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StartVipSweepDungeonRequest& from);
  void MergeFrom(const StartVipSweepDungeonRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint32 dungeonId = 2;
  inline bool has_dungeonid() const;
  inline void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 2;
  inline ::google::protobuf::uint32 dungeonid() const;
  inline void set_dungeonid(::google::protobuf::uint32 value);

  // required int32 sweepType = 3;
  inline bool has_sweeptype() const;
  inline void clear_sweeptype();
  static const int kSweepTypeFieldNumber = 3;
  inline ::google::protobuf::int32 sweeptype() const;
  inline void set_sweeptype(::google::protobuf::int32 value);

  // required sint32 dungeonType = 4;
  inline bool has_dungeontype() const;
  inline void clear_dungeontype();
  static const int kDungeonTypeFieldNumber = 4;
  inline ::google::protobuf::int32 dungeontype() const;
  inline void set_dungeontype(::google::protobuf::int32 value);

  // required uint32 destFloor = 5;
  inline bool has_destfloor() const;
  inline void clear_destfloor();
  static const int kDestFloorFieldNumber = 5;
  inline ::google::protobuf::uint32 destfloor() const;
  inline void set_destfloor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.StartVipSweepDungeonRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_dungeonid();
  inline void clear_has_dungeonid();
  inline void set_has_sweeptype();
  inline void clear_has_sweeptype();
  inline void set_has_dungeontype();
  inline void clear_has_dungeontype();
  inline void set_has_destfloor();
  inline void clear_has_destfloor();

  int msgid_;
  ::google::protobuf::uint32 dungeonid_;
  ::google::protobuf::int32 sweeptype_;
  ::google::protobuf::int32 dungeontype_;
  ::google::protobuf::uint32 destfloor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_start_5fvip_5fsweep_5fdungeon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_start_5fvip_5fsweep_5fdungeon_2eproto();
  #endif
  friend void protobuf_AssignDesc_start_5fvip_5fsweep_5fdungeon_2eproto();
  friend void protobuf_ShutdownFile_start_5fvip_5fsweep_5fdungeon_2eproto();

  void InitAsDefaultInstance();
  static StartVipSweepDungeonRequest* default_instance_;
};
// -------------------------------------------------------------------

class StartVipSweepDungeonResponse : public ::google::protobuf::MessageLite {
 public:
  StartVipSweepDungeonResponse();
  virtual ~StartVipSweepDungeonResponse();

  StartVipSweepDungeonResponse(const StartVipSweepDungeonResponse& from);

  inline StartVipSweepDungeonResponse& operator=(const StartVipSweepDungeonResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const StartVipSweepDungeonResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const StartVipSweepDungeonResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(StartVipSweepDungeonResponse* other);

  // implements Message ----------------------------------------------

  StartVipSweepDungeonResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StartVipSweepDungeonResponse& from);
  void MergeFrom(const StartVipSweepDungeonResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 roleRemainPower = 3;
  inline bool has_roleremainpower() const;
  inline void clear_roleremainpower();
  static const int kRoleRemainPowerFieldNumber = 3;
  inline ::google::protobuf::uint32 roleremainpower() const;
  inline void set_roleremainpower(::google::protobuf::uint32 value);

  // repeated .sanguo.MsgSweepDungeonAward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::sanguo::MsgSweepDungeonAward& rewards(int index) const;
  inline ::sanguo::MsgSweepDungeonAward* mutable_rewards(int index);
  inline ::sanguo::MsgSweepDungeonAward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward >*
      mutable_rewards();

  // required uint32 destFloor = 5;
  inline bool has_destfloor() const;
  inline void clear_destfloor();
  static const int kDestFloorFieldNumber = 5;
  inline ::google::protobuf::uint32 destfloor() const;
  inline void set_destfloor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.StartVipSweepDungeonResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_roleremainpower();
  inline void clear_has_roleremainpower();
  inline void set_has_destfloor();
  inline void clear_has_destfloor();

  int msgid_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward > rewards_;
  ::google::protobuf::uint32 roleremainpower_;
  ::google::protobuf::uint32 destfloor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_start_5fvip_5fsweep_5fdungeon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_start_5fvip_5fsweep_5fdungeon_2eproto();
  #endif
  friend void protobuf_AssignDesc_start_5fvip_5fsweep_5fdungeon_2eproto();
  friend void protobuf_ShutdownFile_start_5fvip_5fsweep_5fdungeon_2eproto();

  void InitAsDefaultInstance();
  static StartVipSweepDungeonResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// StartVipSweepDungeonRequest

// required .sanguo.MsgID msgID = 1;
inline bool StartVipSweepDungeonRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartVipSweepDungeonRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartVipSweepDungeonRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartVipSweepDungeonRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID StartVipSweepDungeonRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void StartVipSweepDungeonRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint32 dungeonId = 2;
inline bool StartVipSweepDungeonRequest::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartVipSweepDungeonRequest::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartVipSweepDungeonRequest::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartVipSweepDungeonRequest::clear_dungeonid() {
  dungeonid_ = 0u;
  clear_has_dungeonid();
}
inline ::google::protobuf::uint32 StartVipSweepDungeonRequest::dungeonid() const {
  return dungeonid_;
}
inline void StartVipSweepDungeonRequest::set_dungeonid(::google::protobuf::uint32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
}

// required int32 sweepType = 3;
inline bool StartVipSweepDungeonRequest::has_sweeptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartVipSweepDungeonRequest::set_has_sweeptype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartVipSweepDungeonRequest::clear_has_sweeptype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartVipSweepDungeonRequest::clear_sweeptype() {
  sweeptype_ = 0;
  clear_has_sweeptype();
}
inline ::google::protobuf::int32 StartVipSweepDungeonRequest::sweeptype() const {
  return sweeptype_;
}
inline void StartVipSweepDungeonRequest::set_sweeptype(::google::protobuf::int32 value) {
  set_has_sweeptype();
  sweeptype_ = value;
}

// required sint32 dungeonType = 4;
inline bool StartVipSweepDungeonRequest::has_dungeontype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartVipSweepDungeonRequest::set_has_dungeontype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartVipSweepDungeonRequest::clear_has_dungeontype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartVipSweepDungeonRequest::clear_dungeontype() {
  dungeontype_ = 0;
  clear_has_dungeontype();
}
inline ::google::protobuf::int32 StartVipSweepDungeonRequest::dungeontype() const {
  return dungeontype_;
}
inline void StartVipSweepDungeonRequest::set_dungeontype(::google::protobuf::int32 value) {
  set_has_dungeontype();
  dungeontype_ = value;
}

// required uint32 destFloor = 5;
inline bool StartVipSweepDungeonRequest::has_destfloor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartVipSweepDungeonRequest::set_has_destfloor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartVipSweepDungeonRequest::clear_has_destfloor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartVipSweepDungeonRequest::clear_destfloor() {
  destfloor_ = 0u;
  clear_has_destfloor();
}
inline ::google::protobuf::uint32 StartVipSweepDungeonRequest::destfloor() const {
  return destfloor_;
}
inline void StartVipSweepDungeonRequest::set_destfloor(::google::protobuf::uint32 value) {
  set_has_destfloor();
  destfloor_ = value;
}

// -------------------------------------------------------------------

// StartVipSweepDungeonResponse

// required .sanguo.MsgID msgID = 1;
inline bool StartVipSweepDungeonResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartVipSweepDungeonResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartVipSweepDungeonResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartVipSweepDungeonResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID StartVipSweepDungeonResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void StartVipSweepDungeonResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool StartVipSweepDungeonResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartVipSweepDungeonResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartVipSweepDungeonResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartVipSweepDungeonResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode StartVipSweepDungeonResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void StartVipSweepDungeonResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 roleRemainPower = 3;
inline bool StartVipSweepDungeonResponse::has_roleremainpower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartVipSweepDungeonResponse::set_has_roleremainpower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartVipSweepDungeonResponse::clear_has_roleremainpower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartVipSweepDungeonResponse::clear_roleremainpower() {
  roleremainpower_ = 0u;
  clear_has_roleremainpower();
}
inline ::google::protobuf::uint32 StartVipSweepDungeonResponse::roleremainpower() const {
  return roleremainpower_;
}
inline void StartVipSweepDungeonResponse::set_roleremainpower(::google::protobuf::uint32 value) {
  set_has_roleremainpower();
  roleremainpower_ = value;
}

// repeated .sanguo.MsgSweepDungeonAward rewards = 4;
inline int StartVipSweepDungeonResponse::rewards_size() const {
  return rewards_.size();
}
inline void StartVipSweepDungeonResponse::clear_rewards() {
  rewards_.Clear();
}
inline const ::sanguo::MsgSweepDungeonAward& StartVipSweepDungeonResponse::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::sanguo::MsgSweepDungeonAward* StartVipSweepDungeonResponse::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::sanguo::MsgSweepDungeonAward* StartVipSweepDungeonResponse::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward >&
StartVipSweepDungeonResponse::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgSweepDungeonAward >*
StartVipSweepDungeonResponse::mutable_rewards() {
  return &rewards_;
}

// required uint32 destFloor = 5;
inline bool StartVipSweepDungeonResponse::has_destfloor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartVipSweepDungeonResponse::set_has_destfloor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartVipSweepDungeonResponse::clear_has_destfloor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartVipSweepDungeonResponse::clear_destfloor() {
  destfloor_ = 0u;
  clear_has_destfloor();
}
inline ::google::protobuf::uint32 StartVipSweepDungeonResponse::destfloor() const {
  return destfloor_;
}
inline void StartVipSweepDungeonResponse::set_destfloor(::google::protobuf::uint32 value) {
  set_has_destfloor();
  destfloor_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_start_5fvip_5fsweep_5fdungeon_2eproto__INCLUDED
