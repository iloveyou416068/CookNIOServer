// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init_aprrove_friend.proto

#ifndef PROTOBUF_init_5faprrove_5ffriend_2eproto__INCLUDED
#define PROTOBUF_init_5faprrove_5ffriend_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_friend_aprrove.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_init_5faprrove_5ffriend_2eproto();
void protobuf_AssignDesc_init_5faprrove_5ffriend_2eproto();
void protobuf_ShutdownFile_init_5faprrove_5ffriend_2eproto();

class InitAprroveFriendRequest;
class InitAprroveFriendResponse;

// ===================================================================

class InitAprroveFriendRequest : public ::google::protobuf::MessageLite {
 public:
  InitAprroveFriendRequest();
  virtual ~InitAprroveFriendRequest();

  InitAprroveFriendRequest(const InitAprroveFriendRequest& from);

  inline InitAprroveFriendRequest& operator=(const InitAprroveFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const InitAprroveFriendRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InitAprroveFriendRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InitAprroveFriendRequest* other);

  // implements Message ----------------------------------------------

  InitAprroveFriendRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InitAprroveFriendRequest& from);
  void MergeFrom(const InitAprroveFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.InitAprroveFriendRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_init_5faprrove_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_init_5faprrove_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_init_5faprrove_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_init_5faprrove_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static InitAprroveFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class InitAprroveFriendResponse : public ::google::protobuf::MessageLite {
 public:
  InitAprroveFriendResponse();
  virtual ~InitAprroveFriendResponse();

  InitAprroveFriendResponse(const InitAprroveFriendResponse& from);

  inline InitAprroveFriendResponse& operator=(const InitAprroveFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const InitAprroveFriendResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InitAprroveFriendResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InitAprroveFriendResponse* other);

  // implements Message ----------------------------------------------

  InitAprroveFriendResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InitAprroveFriendResponse& from);
  void MergeFrom(const InitAprroveFriendResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // repeated .sanguo.MsgRoleFriendAprrove approveRole = 3;
  inline int approverole_size() const;
  inline void clear_approverole();
  static const int kApproveRoleFieldNumber = 3;
  inline const ::sanguo::MsgRoleFriendAprrove& approverole(int index) const;
  inline ::sanguo::MsgRoleFriendAprrove* mutable_approverole(int index);
  inline ::sanguo::MsgRoleFriendAprrove* add_approverole();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleFriendAprrove >&
      approverole() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleFriendAprrove >*
      mutable_approverole();

  // @@protoc_insertion_point(class_scope:sanguo.InitAprroveFriendResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();

  int msgid_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleFriendAprrove > approverole_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_init_5faprrove_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_init_5faprrove_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_init_5faprrove_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_init_5faprrove_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static InitAprroveFriendResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// InitAprroveFriendRequest

// required .sanguo.MsgID msgID = 1;
inline bool InitAprroveFriendRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitAprroveFriendRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitAprroveFriendRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitAprroveFriendRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID InitAprroveFriendRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void InitAprroveFriendRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// InitAprroveFriendResponse

// required .sanguo.MsgID msgID = 1;
inline bool InitAprroveFriendResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitAprroveFriendResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitAprroveFriendResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitAprroveFriendResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID InitAprroveFriendResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void InitAprroveFriendResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool InitAprroveFriendResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitAprroveFriendResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitAprroveFriendResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitAprroveFriendResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode InitAprroveFriendResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void InitAprroveFriendResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// repeated .sanguo.MsgRoleFriendAprrove approveRole = 3;
inline int InitAprroveFriendResponse::approverole_size() const {
  return approverole_.size();
}
inline void InitAprroveFriendResponse::clear_approverole() {
  approverole_.Clear();
}
inline const ::sanguo::MsgRoleFriendAprrove& InitAprroveFriendResponse::approverole(int index) const {
  return approverole_.Get(index);
}
inline ::sanguo::MsgRoleFriendAprrove* InitAprroveFriendResponse::mutable_approverole(int index) {
  return approverole_.Mutable(index);
}
inline ::sanguo::MsgRoleFriendAprrove* InitAprroveFriendResponse::add_approverole() {
  return approverole_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleFriendAprrove >&
InitAprroveFriendResponse::approverole() const {
  return approverole_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgRoleFriendAprrove >*
InitAprroveFriendResponse::mutable_approverole() {
  return &approverole_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_init_5faprrove_5ffriend_2eproto__INCLUDED
