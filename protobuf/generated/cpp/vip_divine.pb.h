// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vip_divine.proto

#ifndef PROTOBUF_vip_5fdivine_2eproto__INCLUDED
#define PROTOBUF_vip_5fdivine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_vip_5fdivine_2eproto();
void protobuf_AssignDesc_vip_5fdivine_2eproto();
void protobuf_ShutdownFile_vip_5fdivine_2eproto();

class VipDivineRequest;
class VipDivineResponse;

// ===================================================================

class VipDivineRequest : public ::google::protobuf::MessageLite {
 public:
  VipDivineRequest();
  virtual ~VipDivineRequest();

  VipDivineRequest(const VipDivineRequest& from);

  inline VipDivineRequest& operator=(const VipDivineRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const VipDivineRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const VipDivineRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(VipDivineRequest* other);

  // implements Message ----------------------------------------------

  VipDivineRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const VipDivineRequest& from);
  void MergeFrom(const VipDivineRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint32 personID = 2;
  inline bool has_personid() const;
  inline void clear_personid();
  static const int kPersonIDFieldNumber = 2;
  inline ::google::protobuf::uint32 personid() const;
  inline void set_personid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.VipDivineRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_personid();
  inline void clear_has_personid();

  int msgid_;
  ::google::protobuf::uint32 personid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_vip_5fdivine_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_vip_5fdivine_2eproto();
  #endif
  friend void protobuf_AssignDesc_vip_5fdivine_2eproto();
  friend void protobuf_ShutdownFile_vip_5fdivine_2eproto();

  void InitAsDefaultInstance();
  static VipDivineRequest* default_instance_;
};
// -------------------------------------------------------------------

class VipDivineResponse : public ::google::protobuf::MessageLite {
 public:
  VipDivineResponse();
  virtual ~VipDivineResponse();

  VipDivineResponse(const VipDivineResponse& from);

  inline VipDivineResponse& operator=(const VipDivineResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const VipDivineResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const VipDivineResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(VipDivineResponse* other);

  // implements Message ----------------------------------------------

  VipDivineResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const VipDivineResponse& from);
  void MergeFrom(const VipDivineResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 guaxiangAttrID = 3;
  inline bool has_guaxiangattrid() const;
  inline void clear_guaxiangattrid();
  static const int kGuaxiangAttrIDFieldNumber = 3;
  inline ::google::protobuf::uint32 guaxiangattrid() const;
  inline void set_guaxiangattrid(::google::protobuf::uint32 value);

  // optional sint32 personID = 4;
  inline bool has_personid() const;
  inline void clear_personid();
  static const int kPersonIDFieldNumber = 4;
  inline ::google::protobuf::int32 personid() const;
  inline void set_personid(::google::protobuf::int32 value);

  // optional uint64 credit = 5;
  inline bool has_credit() const;
  inline void clear_credit();
  static const int kCreditFieldNumber = 5;
  inline ::google::protobuf::uint64 credit() const;
  inline void set_credit(::google::protobuf::uint64 value);

  // optional uint64 copper = 6;
  inline bool has_copper() const;
  inline void clear_copper();
  static const int kCopperFieldNumber = 6;
  inline ::google::protobuf::uint64 copper() const;
  inline void set_copper(::google::protobuf::uint64 value);

  // optional uint32 gold = 7;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 7;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 jade = 8;
  inline bool has_jade() const;
  inline void clear_jade();
  static const int kJadeFieldNumber = 8;
  inline ::google::protobuf::uint32 jade() const;
  inline void set_jade(::google::protobuf::uint32 value);

  // optional uint32 vipSummonNum = 9;
  inline bool has_vipsummonnum() const;
  inline void clear_vipsummonnum();
  static const int kVipSummonNumFieldNumber = 9;
  inline ::google::protobuf::uint32 vipsummonnum() const;
  inline void set_vipsummonnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.VipDivineResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_guaxiangattrid();
  inline void clear_has_guaxiangattrid();
  inline void set_has_personid();
  inline void clear_has_personid();
  inline void set_has_credit();
  inline void clear_has_credit();
  inline void set_has_copper();
  inline void clear_has_copper();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_jade();
  inline void clear_has_jade();
  inline void set_has_vipsummonnum();
  inline void clear_has_vipsummonnum();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 guaxiangattrid_;
  ::google::protobuf::int32 personid_;
  ::google::protobuf::uint64 credit_;
  ::google::protobuf::uint64 copper_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 jade_;
  ::google::protobuf::uint32 vipsummonnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_vip_5fdivine_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_vip_5fdivine_2eproto();
  #endif
  friend void protobuf_AssignDesc_vip_5fdivine_2eproto();
  friend void protobuf_ShutdownFile_vip_5fdivine_2eproto();

  void InitAsDefaultInstance();
  static VipDivineResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// VipDivineRequest

// required .sanguo.MsgID msgID = 1;
inline bool VipDivineRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipDivineRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipDivineRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipDivineRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID VipDivineRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void VipDivineRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint32 personID = 2;
inline bool VipDivineRequest::has_personid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipDivineRequest::set_has_personid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipDivineRequest::clear_has_personid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipDivineRequest::clear_personid() {
  personid_ = 0u;
  clear_has_personid();
}
inline ::google::protobuf::uint32 VipDivineRequest::personid() const {
  return personid_;
}
inline void VipDivineRequest::set_personid(::google::protobuf::uint32 value) {
  set_has_personid();
  personid_ = value;
}

// -------------------------------------------------------------------

// VipDivineResponse

// required .sanguo.MsgID msgID = 1;
inline bool VipDivineResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipDivineResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipDivineResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipDivineResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID VipDivineResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void VipDivineResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool VipDivineResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipDivineResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipDivineResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipDivineResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode VipDivineResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void VipDivineResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 guaxiangAttrID = 3;
inline bool VipDivineResponse::has_guaxiangattrid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipDivineResponse::set_has_guaxiangattrid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipDivineResponse::clear_has_guaxiangattrid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipDivineResponse::clear_guaxiangattrid() {
  guaxiangattrid_ = 0u;
  clear_has_guaxiangattrid();
}
inline ::google::protobuf::uint32 VipDivineResponse::guaxiangattrid() const {
  return guaxiangattrid_;
}
inline void VipDivineResponse::set_guaxiangattrid(::google::protobuf::uint32 value) {
  set_has_guaxiangattrid();
  guaxiangattrid_ = value;
}

// optional sint32 personID = 4;
inline bool VipDivineResponse::has_personid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VipDivineResponse::set_has_personid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VipDivineResponse::clear_has_personid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VipDivineResponse::clear_personid() {
  personid_ = 0;
  clear_has_personid();
}
inline ::google::protobuf::int32 VipDivineResponse::personid() const {
  return personid_;
}
inline void VipDivineResponse::set_personid(::google::protobuf::int32 value) {
  set_has_personid();
  personid_ = value;
}

// optional uint64 credit = 5;
inline bool VipDivineResponse::has_credit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VipDivineResponse::set_has_credit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VipDivineResponse::clear_has_credit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VipDivineResponse::clear_credit() {
  credit_ = GOOGLE_ULONGLONG(0);
  clear_has_credit();
}
inline ::google::protobuf::uint64 VipDivineResponse::credit() const {
  return credit_;
}
inline void VipDivineResponse::set_credit(::google::protobuf::uint64 value) {
  set_has_credit();
  credit_ = value;
}

// optional uint64 copper = 6;
inline bool VipDivineResponse::has_copper() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VipDivineResponse::set_has_copper() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VipDivineResponse::clear_has_copper() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VipDivineResponse::clear_copper() {
  copper_ = GOOGLE_ULONGLONG(0);
  clear_has_copper();
}
inline ::google::protobuf::uint64 VipDivineResponse::copper() const {
  return copper_;
}
inline void VipDivineResponse::set_copper(::google::protobuf::uint64 value) {
  set_has_copper();
  copper_ = value;
}

// optional uint32 gold = 7;
inline bool VipDivineResponse::has_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VipDivineResponse::set_has_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VipDivineResponse::clear_has_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VipDivineResponse::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 VipDivineResponse::gold() const {
  return gold_;
}
inline void VipDivineResponse::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint32 jade = 8;
inline bool VipDivineResponse::has_jade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VipDivineResponse::set_has_jade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VipDivineResponse::clear_has_jade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VipDivineResponse::clear_jade() {
  jade_ = 0u;
  clear_has_jade();
}
inline ::google::protobuf::uint32 VipDivineResponse::jade() const {
  return jade_;
}
inline void VipDivineResponse::set_jade(::google::protobuf::uint32 value) {
  set_has_jade();
  jade_ = value;
}

// optional uint32 vipSummonNum = 9;
inline bool VipDivineResponse::has_vipsummonnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VipDivineResponse::set_has_vipsummonnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VipDivineResponse::clear_has_vipsummonnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VipDivineResponse::clear_vipsummonnum() {
  vipsummonnum_ = 0u;
  clear_has_vipsummonnum();
}
inline ::google::protobuf::uint32 VipDivineResponse::vipsummonnum() const {
  return vipsummonnum_;
}
inline void VipDivineResponse::set_vipsummonnum(::google::protobuf::uint32 value) {
  set_has_vipsummonnum();
  vipsummonnum_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vip_5fdivine_2eproto__INCLUDED
