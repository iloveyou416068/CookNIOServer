// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: level_up_passive_skill.proto

#ifndef PROTOBUF_level_5fup_5fpassive_5fskill_2eproto__INCLUDED
#define PROTOBUF_level_5fup_5fpassive_5fskill_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_cooldown.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_level_5fup_5fpassive_5fskill_2eproto();
void protobuf_AssignDesc_level_5fup_5fpassive_5fskill_2eproto();
void protobuf_ShutdownFile_level_5fup_5fpassive_5fskill_2eproto();

class LevelUpPassiveSkillRequest;
class LevelUpPassiveSkillResponse;

// ===================================================================

class LevelUpPassiveSkillRequest : public ::google::protobuf::MessageLite {
 public:
  LevelUpPassiveSkillRequest();
  virtual ~LevelUpPassiveSkillRequest();

  LevelUpPassiveSkillRequest(const LevelUpPassiveSkillRequest& from);

  inline LevelUpPassiveSkillRequest& operator=(const LevelUpPassiveSkillRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const LevelUpPassiveSkillRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LevelUpPassiveSkillRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LevelUpPassiveSkillRequest* other);

  // implements Message ----------------------------------------------

  LevelUpPassiveSkillRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LevelUpPassiveSkillRequest& from);
  void MergeFrom(const LevelUpPassiveSkillRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint32 skillID = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 2;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.LevelUpPassiveSkillRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  int msgid_;
  ::google::protobuf::uint32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_level_5fup_5fpassive_5fskill_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_level_5fup_5fpassive_5fskill_2eproto();
  #endif
  friend void protobuf_AssignDesc_level_5fup_5fpassive_5fskill_2eproto();
  friend void protobuf_ShutdownFile_level_5fup_5fpassive_5fskill_2eproto();

  void InitAsDefaultInstance();
  static LevelUpPassiveSkillRequest* default_instance_;
};
// -------------------------------------------------------------------

class LevelUpPassiveSkillResponse : public ::google::protobuf::MessageLite {
 public:
  LevelUpPassiveSkillResponse();
  virtual ~LevelUpPassiveSkillResponse();

  LevelUpPassiveSkillResponse(const LevelUpPassiveSkillResponse& from);

  inline LevelUpPassiveSkillResponse& operator=(const LevelUpPassiveSkillResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const LevelUpPassiveSkillResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LevelUpPassiveSkillResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LevelUpPassiveSkillResponse* other);

  // implements Message ----------------------------------------------

  LevelUpPassiveSkillResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LevelUpPassiveSkillResponse& from);
  void MergeFrom(const LevelUpPassiveSkillResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional .sanguo.MsgRoleCooldown cd = 3;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 3;
  inline const ::sanguo::MsgRoleCooldown& cd() const;
  inline ::sanguo::MsgRoleCooldown* mutable_cd();
  inline ::sanguo::MsgRoleCooldown* release_cd();
  inline void set_allocated_cd(::sanguo::MsgRoleCooldown* cd);

  // @@protoc_insertion_point(class_scope:sanguo.LevelUpPassiveSkillResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_cd();
  inline void clear_has_cd();

  int msgid_;
  int status_;
  ::sanguo::MsgRoleCooldown* cd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_level_5fup_5fpassive_5fskill_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_level_5fup_5fpassive_5fskill_2eproto();
  #endif
  friend void protobuf_AssignDesc_level_5fup_5fpassive_5fskill_2eproto();
  friend void protobuf_ShutdownFile_level_5fup_5fpassive_5fskill_2eproto();

  void InitAsDefaultInstance();
  static LevelUpPassiveSkillResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// LevelUpPassiveSkillRequest

// required .sanguo.MsgID msgID = 1;
inline bool LevelUpPassiveSkillRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelUpPassiveSkillRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelUpPassiveSkillRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelUpPassiveSkillRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID LevelUpPassiveSkillRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void LevelUpPassiveSkillRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint32 skillID = 2;
inline bool LevelUpPassiveSkillRequest::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelUpPassiveSkillRequest::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelUpPassiveSkillRequest::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelUpPassiveSkillRequest::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 LevelUpPassiveSkillRequest::skillid() const {
  return skillid_;
}
inline void LevelUpPassiveSkillRequest::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// LevelUpPassiveSkillResponse

// required .sanguo.MsgID msgID = 1;
inline bool LevelUpPassiveSkillResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelUpPassiveSkillResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelUpPassiveSkillResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelUpPassiveSkillResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID LevelUpPassiveSkillResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void LevelUpPassiveSkillResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool LevelUpPassiveSkillResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelUpPassiveSkillResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelUpPassiveSkillResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelUpPassiveSkillResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode LevelUpPassiveSkillResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void LevelUpPassiveSkillResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional .sanguo.MsgRoleCooldown cd = 3;
inline bool LevelUpPassiveSkillResponse::has_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevelUpPassiveSkillResponse::set_has_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevelUpPassiveSkillResponse::clear_has_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevelUpPassiveSkillResponse::clear_cd() {
  if (cd_ != NULL) cd_->::sanguo::MsgRoleCooldown::Clear();
  clear_has_cd();
}
inline const ::sanguo::MsgRoleCooldown& LevelUpPassiveSkillResponse::cd() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cd_ != NULL ? *cd_ : *default_instance().cd_;
#else
  return cd_ != NULL ? *cd_ : *default_instance_->cd_;
#endif
}
inline ::sanguo::MsgRoleCooldown* LevelUpPassiveSkillResponse::mutable_cd() {
  set_has_cd();
  if (cd_ == NULL) cd_ = new ::sanguo::MsgRoleCooldown;
  return cd_;
}
inline ::sanguo::MsgRoleCooldown* LevelUpPassiveSkillResponse::release_cd() {
  clear_has_cd();
  ::sanguo::MsgRoleCooldown* temp = cd_;
  cd_ = NULL;
  return temp;
}
inline void LevelUpPassiveSkillResponse::set_allocated_cd(::sanguo::MsgRoleCooldown* cd) {
  delete cd_;
  cd_ = cd;
  if (cd) {
    set_has_cd();
  } else {
    clear_has_cd();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_level_5fup_5fpassive_5fskill_2eproto__INCLUDED
