// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buy_into_count.proto

#ifndef PROTOBUF_buy_5finto_5fcount_2eproto__INCLUDED
#define PROTOBUF_buy_5finto_5fcount_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_buy_5finto_5fcount_2eproto();
void protobuf_AssignDesc_buy_5finto_5fcount_2eproto();
void protobuf_ShutdownFile_buy_5finto_5fcount_2eproto();

class BuyIntoCountRequest;
class BuyIntoCountResponse;

// ===================================================================

class BuyIntoCountRequest : public ::google::protobuf::MessageLite {
 public:
  BuyIntoCountRequest();
  virtual ~BuyIntoCountRequest();

  BuyIntoCountRequest(const BuyIntoCountRequest& from);

  inline BuyIntoCountRequest& operator=(const BuyIntoCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const BuyIntoCountRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BuyIntoCountRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BuyIntoCountRequest* other);

  // implements Message ----------------------------------------------

  BuyIntoCountRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BuyIntoCountRequest& from);
  void MergeFrom(const BuyIntoCountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.BuyIntoCountRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_buy_5finto_5fcount_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_buy_5finto_5fcount_2eproto();
  #endif
  friend void protobuf_AssignDesc_buy_5finto_5fcount_2eproto();
  friend void protobuf_ShutdownFile_buy_5finto_5fcount_2eproto();

  void InitAsDefaultInstance();
  static BuyIntoCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class BuyIntoCountResponse : public ::google::protobuf::MessageLite {
 public:
  BuyIntoCountResponse();
  virtual ~BuyIntoCountResponse();

  BuyIntoCountResponse(const BuyIntoCountResponse& from);

  inline BuyIntoCountResponse& operator=(const BuyIntoCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const BuyIntoCountResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BuyIntoCountResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BuyIntoCountResponse* other);

  // implements Message ----------------------------------------------

  BuyIntoCountResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BuyIntoCountResponse& from);
  void MergeFrom(const BuyIntoCountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // required uint32 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 jade = 4;
  inline bool has_jade() const;
  inline void clear_jade();
  static const int kJadeFieldNumber = 4;
  inline ::google::protobuf::uint32 jade() const;
  inline void set_jade(::google::protobuf::uint32 value);

  // required uint32 freecount = 5;
  inline bool has_freecount() const;
  inline void clear_freecount();
  static const int kFreecountFieldNumber = 5;
  inline ::google::protobuf::uint32 freecount() const;
  inline void set_freecount(::google::protobuf::uint32 value);

  // required uint32 buycount = 6;
  inline bool has_buycount() const;
  inline void clear_buycount();
  static const int kBuycountFieldNumber = 6;
  inline ::google::protobuf::uint32 buycount() const;
  inline void set_buycount(::google::protobuf::uint32 value);

  // required uint32 buyusecount = 7;
  inline bool has_buyusecount() const;
  inline void clear_buyusecount();
  static const int kBuyusecountFieldNumber = 7;
  inline ::google::protobuf::uint32 buyusecount() const;
  inline void set_buyusecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.BuyIntoCountResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_jade();
  inline void clear_has_jade();
  inline void set_has_freecount();
  inline void clear_has_freecount();
  inline void set_has_buycount();
  inline void clear_has_buycount();
  inline void set_has_buyusecount();
  inline void clear_has_buyusecount();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 jade_;
  ::google::protobuf::uint32 freecount_;
  ::google::protobuf::uint32 buycount_;
  ::google::protobuf::uint32 buyusecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_buy_5finto_5fcount_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_buy_5finto_5fcount_2eproto();
  #endif
  friend void protobuf_AssignDesc_buy_5finto_5fcount_2eproto();
  friend void protobuf_ShutdownFile_buy_5finto_5fcount_2eproto();

  void InitAsDefaultInstance();
  static BuyIntoCountResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BuyIntoCountRequest

// required .sanguo.MsgID msgID = 1;
inline bool BuyIntoCountRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyIntoCountRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyIntoCountRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyIntoCountRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID BuyIntoCountRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void BuyIntoCountRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// BuyIntoCountResponse

// required .sanguo.MsgID msgID = 1;
inline bool BuyIntoCountResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyIntoCountResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyIntoCountResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyIntoCountResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID BuyIntoCountResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void BuyIntoCountResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool BuyIntoCountResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyIntoCountResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyIntoCountResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyIntoCountResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode BuyIntoCountResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void BuyIntoCountResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// required uint32 gold = 3;
inline bool BuyIntoCountResponse::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyIntoCountResponse::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyIntoCountResponse::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyIntoCountResponse::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 BuyIntoCountResponse::gold() const {
  return gold_;
}
inline void BuyIntoCountResponse::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// required uint32 jade = 4;
inline bool BuyIntoCountResponse::has_jade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuyIntoCountResponse::set_has_jade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuyIntoCountResponse::clear_has_jade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuyIntoCountResponse::clear_jade() {
  jade_ = 0u;
  clear_has_jade();
}
inline ::google::protobuf::uint32 BuyIntoCountResponse::jade() const {
  return jade_;
}
inline void BuyIntoCountResponse::set_jade(::google::protobuf::uint32 value) {
  set_has_jade();
  jade_ = value;
}

// required uint32 freecount = 5;
inline bool BuyIntoCountResponse::has_freecount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuyIntoCountResponse::set_has_freecount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuyIntoCountResponse::clear_has_freecount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuyIntoCountResponse::clear_freecount() {
  freecount_ = 0u;
  clear_has_freecount();
}
inline ::google::protobuf::uint32 BuyIntoCountResponse::freecount() const {
  return freecount_;
}
inline void BuyIntoCountResponse::set_freecount(::google::protobuf::uint32 value) {
  set_has_freecount();
  freecount_ = value;
}

// required uint32 buycount = 6;
inline bool BuyIntoCountResponse::has_buycount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuyIntoCountResponse::set_has_buycount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuyIntoCountResponse::clear_has_buycount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuyIntoCountResponse::clear_buycount() {
  buycount_ = 0u;
  clear_has_buycount();
}
inline ::google::protobuf::uint32 BuyIntoCountResponse::buycount() const {
  return buycount_;
}
inline void BuyIntoCountResponse::set_buycount(::google::protobuf::uint32 value) {
  set_has_buycount();
  buycount_ = value;
}

// required uint32 buyusecount = 7;
inline bool BuyIntoCountResponse::has_buyusecount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuyIntoCountResponse::set_has_buyusecount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuyIntoCountResponse::clear_has_buyusecount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuyIntoCountResponse::clear_buyusecount() {
  buyusecount_ = 0u;
  clear_has_buyusecount();
}
inline ::google::protobuf::uint32 BuyIntoCountResponse::buyusecount() const {
  return buyusecount_;
}
inline void BuyIntoCountResponse::set_buyusecount(::google::protobuf::uint32 value) {
  set_has_buyusecount();
  buyusecount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_buy_5finto_5fcount_2eproto__INCLUDED
