// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init_mission_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "init_mission_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sanguo {

void protobuf_ShutdownFile_init_5fmission_5fdata_2eproto() {
  delete InitMissionDataRequest::default_instance_;
  delete InitMissionDataResponse::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_init_5fmission_5fdata_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_init_5fmission_5fdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::sanguo::protobuf_AddDesc_msg_5fid_2eproto();
  ::sanguo::protobuf_AddDesc_msg_5fstatus_5fcode_2eproto();
  ::sanguo::protobuf_AddDesc_role_5fmission_2eproto();
  InitMissionDataRequest::default_instance_ = new InitMissionDataRequest();
  InitMissionDataResponse::default_instance_ = new InitMissionDataResponse();
  InitMissionDataRequest::default_instance_->InitAsDefaultInstance();
  InitMissionDataResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_init_5fmission_5fdata_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_init_5fmission_5fdata_2eproto_once_);
void protobuf_AddDesc_init_5fmission_5fdata_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_init_5fmission_5fdata_2eproto_once_,
                 &protobuf_AddDesc_init_5fmission_5fdata_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_init_5fmission_5fdata_2eproto {
  StaticDescriptorInitializer_init_5fmission_5fdata_2eproto() {
    protobuf_AddDesc_init_5fmission_5fdata_2eproto();
  }
} static_descriptor_initializer_init_5fmission_5fdata_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int InitMissionDataRequest::kMsgIDFieldNumber;
#endif  // !_MSC_VER

InitMissionDataRequest::InitMissionDataRequest()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void InitMissionDataRequest::InitAsDefaultInstance() {
}

InitMissionDataRequest::InitMissionDataRequest(const InitMissionDataRequest& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void InitMissionDataRequest::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InitMissionDataRequest::~InitMissionDataRequest() {
  SharedDtor();
}

void InitMissionDataRequest::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void InitMissionDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InitMissionDataRequest& InitMissionDataRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_init_5fmission_5fdata_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_init_5fmission_5fdata_2eproto();
#endif
  return *default_instance_;
}

InitMissionDataRequest* InitMissionDataRequest::default_instance_ = NULL;

InitMissionDataRequest* InitMissionDataRequest::New() const {
  return new InitMissionDataRequest;
}

void InitMissionDataRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msgid_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool InitMissionDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sanguo.MsgID msgID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sanguo::MsgID_IsValid(value)) {
            set_msgid(static_cast< ::sanguo::MsgID >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InitMissionDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .sanguo.MsgID msgID = 1;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

}

int InitMissionDataRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .sanguo.MsgID msgID = 1;
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitMissionDataRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InitMissionDataRequest*>(&from));
}

void InitMissionDataRequest::MergeFrom(const InitMissionDataRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
}

void InitMissionDataRequest::CopyFrom(const InitMissionDataRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitMissionDataRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void InitMissionDataRequest::Swap(InitMissionDataRequest* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string InitMissionDataRequest::GetTypeName() const {
  return "sanguo.InitMissionDataRequest";
}


// ===================================================================

#ifndef _MSC_VER
const int InitMissionDataResponse::kMsgIDFieldNumber;
const int InitMissionDataResponse::kStatusFieldNumber;
const int InitMissionDataResponse::kNormalMissionFieldNumber;
const int InitMissionDataResponse::kDailyMissionFieldNumber;
const int InitMissionDataResponse::kYijunMissionFieldNumber;
const int InitMissionDataResponse::kCompletedMissionFieldNumber;
const int InitMissionDataResponse::kDailyMissionRefreshFieldNumber;
const int InitMissionDataResponse::kYijunMissionRefreshFieldNumber;
#endif  // !_MSC_VER

InitMissionDataResponse::InitMissionDataResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void InitMissionDataResponse::InitAsDefaultInstance() {
}

InitMissionDataResponse::InitMissionDataResponse(const InitMissionDataResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void InitMissionDataResponse::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 1;
  status_ = 0;
  dailymissionrefresh_ = GOOGLE_ULONGLONG(0);
  yijunmissionrefresh_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InitMissionDataResponse::~InitMissionDataResponse() {
  SharedDtor();
}

void InitMissionDataResponse::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void InitMissionDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InitMissionDataResponse& InitMissionDataResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_init_5fmission_5fdata_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_init_5fmission_5fdata_2eproto();
#endif
  return *default_instance_;
}

InitMissionDataResponse* InitMissionDataResponse::default_instance_ = NULL;

InitMissionDataResponse* InitMissionDataResponse::New() const {
  return new InitMissionDataResponse;
}

void InitMissionDataResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msgid_ = 1;
    status_ = 0;
    dailymissionrefresh_ = GOOGLE_ULONGLONG(0);
    yijunmissionrefresh_ = GOOGLE_ULONGLONG(0);
  }
  normalmission_.Clear();
  dailymission_.Clear();
  yijunmission_.Clear();
  completedmission_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool InitMissionDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sanguo.MsgID msgID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sanguo::MsgID_IsValid(value)) {
            set_msgid(static_cast< ::sanguo::MsgID >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required .sanguo.StatusCode status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sanguo::StatusCode_IsValid(value)) {
            set_status(static_cast< ::sanguo::StatusCode >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_normalMission;
        break;
      }

      // repeated .sanguo.MsgRoleMission normalMission = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_normalMission:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_normalmission()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_normalMission;
        if (input->ExpectTag(34)) goto parse_dailyMission;
        break;
      }

      // repeated .sanguo.MsgRoleMission dailyMission = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailyMission:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dailymission()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_dailyMission;
        if (input->ExpectTag(42)) goto parse_yijunMission;
        break;
      }

      // repeated .sanguo.MsgRoleMission yijunMission = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_yijunMission:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_yijunmission()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_yijunMission;
        if (input->ExpectTag(48)) goto parse_completedMission;
        break;
      }

      // repeated uint32 completedMission = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_completedMission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_completedmission())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_completedmission())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_completedMission;
        if (input->ExpectTag(56)) goto parse_dailyMissionRefresh;
        break;
      }

      // required uint64 dailyMissionRefresh = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dailyMissionRefresh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dailymissionrefresh_)));
          set_has_dailymissionrefresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_yijunMissionRefresh;
        break;
      }

      // required uint64 yijunMissionRefresh = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yijunMissionRefresh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &yijunmissionrefresh_)));
          set_has_yijunmissionrefresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InitMissionDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .sanguo.MsgID msgID = 1;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // required .sanguo.StatusCode status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // repeated .sanguo.MsgRoleMission normalMission = 3;
  for (int i = 0; i < this->normalmission_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->normalmission(i), output);
  }

  // repeated .sanguo.MsgRoleMission dailyMission = 4;
  for (int i = 0; i < this->dailymission_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->dailymission(i), output);
  }

  // repeated .sanguo.MsgRoleMission yijunMission = 5;
  for (int i = 0; i < this->yijunmission_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->yijunmission(i), output);
  }

  // repeated uint32 completedMission = 6;
  for (int i = 0; i < this->completedmission_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->completedmission(i), output);
  }

  // required uint64 dailyMissionRefresh = 7;
  if (has_dailymissionrefresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->dailymissionrefresh(), output);
  }

  // required uint64 yijunMissionRefresh = 8;
  if (has_yijunmissionrefresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->yijunmissionrefresh(), output);
  }

}

int InitMissionDataResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .sanguo.MsgID msgID = 1;
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // required .sanguo.StatusCode status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // required uint64 dailyMissionRefresh = 7;
    if (has_dailymissionrefresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->dailymissionrefresh());
    }

    // required uint64 yijunMissionRefresh = 8;
    if (has_yijunmissionrefresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->yijunmissionrefresh());
    }

  }
  // repeated .sanguo.MsgRoleMission normalMission = 3;
  total_size += 1 * this->normalmission_size();
  for (int i = 0; i < this->normalmission_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->normalmission(i));
  }

  // repeated .sanguo.MsgRoleMission dailyMission = 4;
  total_size += 1 * this->dailymission_size();
  for (int i = 0; i < this->dailymission_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dailymission(i));
  }

  // repeated .sanguo.MsgRoleMission yijunMission = 5;
  total_size += 1 * this->yijunmission_size();
  for (int i = 0; i < this->yijunmission_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->yijunmission(i));
  }

  // repeated uint32 completedMission = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->completedmission_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->completedmission(i));
    }
    total_size += 1 * this->completedmission_size() + data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitMissionDataResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InitMissionDataResponse*>(&from));
}

void InitMissionDataResponse::MergeFrom(const InitMissionDataResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  normalmission_.MergeFrom(from.normalmission_);
  dailymission_.MergeFrom(from.dailymission_);
  yijunmission_.MergeFrom(from.yijunmission_);
  completedmission_.MergeFrom(from.completedmission_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_dailymissionrefresh()) {
      set_dailymissionrefresh(from.dailymissionrefresh());
    }
    if (from.has_yijunmissionrefresh()) {
      set_yijunmissionrefresh(from.yijunmissionrefresh());
    }
  }
}

void InitMissionDataResponse::CopyFrom(const InitMissionDataResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitMissionDataResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000c3) != 0x000000c3) return false;

  for (int i = 0; i < normalmission_size(); i++) {
    if (!this->normalmission(i).IsInitialized()) return false;
  }
  for (int i = 0; i < dailymission_size(); i++) {
    if (!this->dailymission(i).IsInitialized()) return false;
  }
  for (int i = 0; i < yijunmission_size(); i++) {
    if (!this->yijunmission(i).IsInitialized()) return false;
  }
  return true;
}

void InitMissionDataResponse::Swap(InitMissionDataResponse* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(status_, other->status_);
    normalmission_.Swap(&other->normalmission_);
    dailymission_.Swap(&other->dailymission_);
    yijunmission_.Swap(&other->yijunmission_);
    completedmission_.Swap(&other->completedmission_);
    std::swap(dailymissionrefresh_, other->dailymissionrefresh_);
    std::swap(yijunmissionrefresh_, other->yijunmissionrefresh_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string InitMissionDataResponse::GetTypeName() const {
  return "sanguo.InitMissionDataResponse";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)
