// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buy_gem.proto

#ifndef PROTOBUF_buy_5fgem_2eproto__INCLUDED
#define PROTOBUF_buy_5fgem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_gem_bag_goods.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_buy_5fgem_2eproto();
void protobuf_AssignDesc_buy_5fgem_2eproto();
void protobuf_ShutdownFile_buy_5fgem_2eproto();

class BuyGemRequest;
class BuyGemResponse;

// ===================================================================

class BuyGemRequest : public ::google::protobuf::MessageLite {
 public:
  BuyGemRequest();
  virtual ~BuyGemRequest();

  BuyGemRequest(const BuyGemRequest& from);

  inline BuyGemRequest& operator=(const BuyGemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const BuyGemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BuyGemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BuyGemRequest* other);

  // implements Message ----------------------------------------------

  BuyGemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BuyGemRequest& from);
  void MergeFrom(const BuyGemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint32 attrID = 2;
  inline bool has_attrid() const;
  inline void clear_attrid();
  static const int kAttrIDFieldNumber = 2;
  inline ::google::protobuf::uint32 attrid() const;
  inline void set_attrid(::google::protobuf::uint32 value);

  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.BuyGemRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_attrid();
  inline void clear_has_attrid();
  inline void set_has_count();
  inline void clear_has_count();

  int msgid_;
  ::google::protobuf::uint32 attrid_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_buy_5fgem_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_buy_5fgem_2eproto();
  #endif
  friend void protobuf_AssignDesc_buy_5fgem_2eproto();
  friend void protobuf_ShutdownFile_buy_5fgem_2eproto();

  void InitAsDefaultInstance();
  static BuyGemRequest* default_instance_;
};
// -------------------------------------------------------------------

class BuyGemResponse : public ::google::protobuf::MessageLite {
 public:
  BuyGemResponse();
  virtual ~BuyGemResponse();

  BuyGemResponse(const BuyGemResponse& from);

  inline BuyGemResponse& operator=(const BuyGemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const BuyGemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BuyGemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BuyGemResponse* other);

  // implements Message ----------------------------------------------

  BuyGemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BuyGemResponse& from);
  void MergeFrom(const BuyGemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional .sanguo.MsgRoleGemBagGoods roleGemBagGoods = 3;
  inline bool has_rolegembaggoods() const;
  inline void clear_rolegembaggoods();
  static const int kRoleGemBagGoodsFieldNumber = 3;
  inline const ::sanguo::MsgRoleGemBagGoods& rolegembaggoods() const;
  inline ::sanguo::MsgRoleGemBagGoods* mutable_rolegembaggoods();
  inline ::sanguo::MsgRoleGemBagGoods* release_rolegembaggoods();
  inline void set_allocated_rolegembaggoods(::sanguo::MsgRoleGemBagGoods* rolegembaggoods);

  // required uint64 copper = 4;
  inline bool has_copper() const;
  inline void clear_copper();
  static const int kCopperFieldNumber = 4;
  inline ::google::protobuf::uint64 copper() const;
  inline void set_copper(::google::protobuf::uint64 value);

  // required uint32 gold = 5;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 5;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 jade = 6;
  inline bool has_jade() const;
  inline void clear_jade();
  static const int kJadeFieldNumber = 6;
  inline ::google::protobuf::uint32 jade() const;
  inline void set_jade(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.BuyGemResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_rolegembaggoods();
  inline void clear_has_rolegembaggoods();
  inline void set_has_copper();
  inline void clear_has_copper();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_jade();
  inline void clear_has_jade();

  int msgid_;
  int status_;
  ::sanguo::MsgRoleGemBagGoods* rolegembaggoods_;
  ::google::protobuf::uint64 copper_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 jade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_buy_5fgem_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_buy_5fgem_2eproto();
  #endif
  friend void protobuf_AssignDesc_buy_5fgem_2eproto();
  friend void protobuf_ShutdownFile_buy_5fgem_2eproto();

  void InitAsDefaultInstance();
  static BuyGemResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BuyGemRequest

// required .sanguo.MsgID msgID = 1;
inline bool BuyGemRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyGemRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyGemRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyGemRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID BuyGemRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void BuyGemRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint32 attrID = 2;
inline bool BuyGemRequest::has_attrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyGemRequest::set_has_attrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyGemRequest::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyGemRequest::clear_attrid() {
  attrid_ = 0u;
  clear_has_attrid();
}
inline ::google::protobuf::uint32 BuyGemRequest::attrid() const {
  return attrid_;
}
inline void BuyGemRequest::set_attrid(::google::protobuf::uint32 value) {
  set_has_attrid();
  attrid_ = value;
}

// required uint32 count = 3;
inline bool BuyGemRequest::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyGemRequest::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyGemRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyGemRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BuyGemRequest::count() const {
  return count_;
}
inline void BuyGemRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// BuyGemResponse

// required .sanguo.MsgID msgID = 1;
inline bool BuyGemResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyGemResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyGemResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyGemResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID BuyGemResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void BuyGemResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool BuyGemResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyGemResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyGemResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyGemResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode BuyGemResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void BuyGemResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional .sanguo.MsgRoleGemBagGoods roleGemBagGoods = 3;
inline bool BuyGemResponse::has_rolegembaggoods() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyGemResponse::set_has_rolegembaggoods() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyGemResponse::clear_has_rolegembaggoods() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyGemResponse::clear_rolegembaggoods() {
  if (rolegembaggoods_ != NULL) rolegembaggoods_->::sanguo::MsgRoleGemBagGoods::Clear();
  clear_has_rolegembaggoods();
}
inline const ::sanguo::MsgRoleGemBagGoods& BuyGemResponse::rolegembaggoods() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return rolegembaggoods_ != NULL ? *rolegembaggoods_ : *default_instance().rolegembaggoods_;
#else
  return rolegembaggoods_ != NULL ? *rolegembaggoods_ : *default_instance_->rolegembaggoods_;
#endif
}
inline ::sanguo::MsgRoleGemBagGoods* BuyGemResponse::mutable_rolegembaggoods() {
  set_has_rolegembaggoods();
  if (rolegembaggoods_ == NULL) rolegembaggoods_ = new ::sanguo::MsgRoleGemBagGoods;
  return rolegembaggoods_;
}
inline ::sanguo::MsgRoleGemBagGoods* BuyGemResponse::release_rolegembaggoods() {
  clear_has_rolegembaggoods();
  ::sanguo::MsgRoleGemBagGoods* temp = rolegembaggoods_;
  rolegembaggoods_ = NULL;
  return temp;
}
inline void BuyGemResponse::set_allocated_rolegembaggoods(::sanguo::MsgRoleGemBagGoods* rolegembaggoods) {
  delete rolegembaggoods_;
  rolegembaggoods_ = rolegembaggoods;
  if (rolegembaggoods) {
    set_has_rolegembaggoods();
  } else {
    clear_has_rolegembaggoods();
  }
}

// required uint64 copper = 4;
inline bool BuyGemResponse::has_copper() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuyGemResponse::set_has_copper() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuyGemResponse::clear_has_copper() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuyGemResponse::clear_copper() {
  copper_ = GOOGLE_ULONGLONG(0);
  clear_has_copper();
}
inline ::google::protobuf::uint64 BuyGemResponse::copper() const {
  return copper_;
}
inline void BuyGemResponse::set_copper(::google::protobuf::uint64 value) {
  set_has_copper();
  copper_ = value;
}

// required uint32 gold = 5;
inline bool BuyGemResponse::has_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuyGemResponse::set_has_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuyGemResponse::clear_has_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuyGemResponse::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 BuyGemResponse::gold() const {
  return gold_;
}
inline void BuyGemResponse::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// required uint32 jade = 6;
inline bool BuyGemResponse::has_jade() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuyGemResponse::set_has_jade() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuyGemResponse::clear_has_jade() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuyGemResponse::clear_jade() {
  jade_ = 0u;
  clear_has_jade();
}
inline ::google::protobuf::uint32 BuyGemResponse::jade() const {
  return jade_;
}
inline void BuyGemResponse::set_jade(::google::protobuf::uint32 value) {
  set_has_jade();
  jade_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_buy_5fgem_2eproto__INCLUDED
