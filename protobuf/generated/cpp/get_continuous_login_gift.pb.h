// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_continuous_login_gift.proto

#ifndef PROTOBUF_get_5fcontinuous_5flogin_5fgift_2eproto__INCLUDED
#define PROTOBUF_get_5fcontinuous_5flogin_5fgift_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_get_5fcontinuous_5flogin_5fgift_2eproto();
void protobuf_AssignDesc_get_5fcontinuous_5flogin_5fgift_2eproto();
void protobuf_ShutdownFile_get_5fcontinuous_5flogin_5fgift_2eproto();

class GetContinuousLoginGiftRequest;
class GetContinuousLoginGiftResponse;

// ===================================================================

class GetContinuousLoginGiftRequest : public ::google::protobuf::MessageLite {
 public:
  GetContinuousLoginGiftRequest();
  virtual ~GetContinuousLoginGiftRequest();

  GetContinuousLoginGiftRequest(const GetContinuousLoginGiftRequest& from);

  inline GetContinuousLoginGiftRequest& operator=(const GetContinuousLoginGiftRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetContinuousLoginGiftRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetContinuousLoginGiftRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetContinuousLoginGiftRequest* other);

  // implements Message ----------------------------------------------

  GetContinuousLoginGiftRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetContinuousLoginGiftRequest& from);
  void MergeFrom(const GetContinuousLoginGiftRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // @@protoc_insertion_point(class_scope:sanguo.GetContinuousLoginGiftRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5fcontinuous_5flogin_5fgift_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5fcontinuous_5flogin_5fgift_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5fcontinuous_5flogin_5fgift_2eproto();
  friend void protobuf_ShutdownFile_get_5fcontinuous_5flogin_5fgift_2eproto();

  void InitAsDefaultInstance();
  static GetContinuousLoginGiftRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetContinuousLoginGiftResponse : public ::google::protobuf::MessageLite {
 public:
  GetContinuousLoginGiftResponse();
  virtual ~GetContinuousLoginGiftResponse();

  GetContinuousLoginGiftResponse(const GetContinuousLoginGiftResponse& from);

  inline GetContinuousLoginGiftResponse& operator=(const GetContinuousLoginGiftResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const GetContinuousLoginGiftResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetContinuousLoginGiftResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetContinuousLoginGiftResponse* other);

  // implements Message ----------------------------------------------

  GetContinuousLoginGiftResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetContinuousLoginGiftResponse& from);
  void MergeFrom(const GetContinuousLoginGiftResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // repeated string gifts = 3;
  inline int gifts_size() const;
  inline void clear_gifts();
  static const int kGiftsFieldNumber = 3;
  inline const ::std::string& gifts(int index) const;
  inline ::std::string* mutable_gifts(int index);
  inline void set_gifts(int index, const ::std::string& value);
  inline void set_gifts(int index, const char* value);
  inline void set_gifts(int index, const char* value, size_t size);
  inline ::std::string* add_gifts();
  inline void add_gifts(const ::std::string& value);
  inline void add_gifts(const char* value);
  inline void add_gifts(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& gifts() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_gifts();

  // @@protoc_insertion_point(class_scope:sanguo.GetContinuousLoginGiftResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();

  int msgid_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::std::string> gifts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_get_5fcontinuous_5flogin_5fgift_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_get_5fcontinuous_5flogin_5fgift_2eproto();
  #endif
  friend void protobuf_AssignDesc_get_5fcontinuous_5flogin_5fgift_2eproto();
  friend void protobuf_ShutdownFile_get_5fcontinuous_5flogin_5fgift_2eproto();

  void InitAsDefaultInstance();
  static GetContinuousLoginGiftResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// GetContinuousLoginGiftRequest

// required .sanguo.MsgID msgID = 1;
inline bool GetContinuousLoginGiftRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetContinuousLoginGiftRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetContinuousLoginGiftRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetContinuousLoginGiftRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetContinuousLoginGiftRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetContinuousLoginGiftRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// GetContinuousLoginGiftResponse

// required .sanguo.MsgID msgID = 1;
inline bool GetContinuousLoginGiftResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetContinuousLoginGiftResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetContinuousLoginGiftResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetContinuousLoginGiftResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID GetContinuousLoginGiftResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void GetContinuousLoginGiftResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool GetContinuousLoginGiftResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetContinuousLoginGiftResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetContinuousLoginGiftResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetContinuousLoginGiftResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode GetContinuousLoginGiftResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void GetContinuousLoginGiftResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// repeated string gifts = 3;
inline int GetContinuousLoginGiftResponse::gifts_size() const {
  return gifts_.size();
}
inline void GetContinuousLoginGiftResponse::clear_gifts() {
  gifts_.Clear();
}
inline const ::std::string& GetContinuousLoginGiftResponse::gifts(int index) const {
  return gifts_.Get(index);
}
inline ::std::string* GetContinuousLoginGiftResponse::mutable_gifts(int index) {
  return gifts_.Mutable(index);
}
inline void GetContinuousLoginGiftResponse::set_gifts(int index, const ::std::string& value) {
  gifts_.Mutable(index)->assign(value);
}
inline void GetContinuousLoginGiftResponse::set_gifts(int index, const char* value) {
  gifts_.Mutable(index)->assign(value);
}
inline void GetContinuousLoginGiftResponse::set_gifts(int index, const char* value, size_t size) {
  gifts_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetContinuousLoginGiftResponse::add_gifts() {
  return gifts_.Add();
}
inline void GetContinuousLoginGiftResponse::add_gifts(const ::std::string& value) {
  gifts_.Add()->assign(value);
}
inline void GetContinuousLoginGiftResponse::add_gifts(const char* value) {
  gifts_.Add()->assign(value);
}
inline void GetContinuousLoginGiftResponse::add_gifts(const char* value, size_t size) {
  gifts_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetContinuousLoginGiftResponse::gifts() const {
  return gifts_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetContinuousLoginGiftResponse::mutable_gifts() {
  return &gifts_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_get_5fcontinuous_5flogin_5fgift_2eproto__INCLUDED
