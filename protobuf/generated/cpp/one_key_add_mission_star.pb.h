// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: one_key_add_mission_star.proto

#ifndef PROTOBUF_one_5fkey_5fadd_5fmission_5fstar_2eproto__INCLUDED
#define PROTOBUF_one_5fkey_5fadd_5fmission_5fstar_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role_mission.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_one_5fkey_5fadd_5fmission_5fstar_2eproto();
void protobuf_AssignDesc_one_5fkey_5fadd_5fmission_5fstar_2eproto();
void protobuf_ShutdownFile_one_5fkey_5fadd_5fmission_5fstar_2eproto();

class OneKeyAddMissionStarRequest;
class OneKeyAddMissionStarResponse;

// ===================================================================

class OneKeyAddMissionStarRequest : public ::google::protobuf::MessageLite {
 public:
  OneKeyAddMissionStarRequest();
  virtual ~OneKeyAddMissionStarRequest();

  OneKeyAddMissionStarRequest(const OneKeyAddMissionStarRequest& from);

  inline OneKeyAddMissionStarRequest& operator=(const OneKeyAddMissionStarRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const OneKeyAddMissionStarRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OneKeyAddMissionStarRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OneKeyAddMissionStarRequest* other);

  // implements Message ----------------------------------------------

  OneKeyAddMissionStarRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OneKeyAddMissionStarRequest& from);
  void MergeFrom(const OneKeyAddMissionStarRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required uint64 autoIncrID = 2;
  inline bool has_autoincrid() const;
  inline void clear_autoincrid();
  static const int kAutoIncrIDFieldNumber = 2;
  inline ::google::protobuf::uint64 autoincrid() const;
  inline void set_autoincrid(::google::protobuf::uint64 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.OneKeyAddMissionStarRequest)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_autoincrid();
  inline void clear_has_autoincrid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::uint64 autoincrid_;
  int msgid_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_one_5fkey_5fadd_5fmission_5fstar_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_one_5fkey_5fadd_5fmission_5fstar_2eproto();
  #endif
  friend void protobuf_AssignDesc_one_5fkey_5fadd_5fmission_5fstar_2eproto();
  friend void protobuf_ShutdownFile_one_5fkey_5fadd_5fmission_5fstar_2eproto();

  void InitAsDefaultInstance();
  static OneKeyAddMissionStarRequest* default_instance_;
};
// -------------------------------------------------------------------

class OneKeyAddMissionStarResponse : public ::google::protobuf::MessageLite {
 public:
  OneKeyAddMissionStarResponse();
  virtual ~OneKeyAddMissionStarResponse();

  OneKeyAddMissionStarResponse(const OneKeyAddMissionStarResponse& from);

  inline OneKeyAddMissionStarResponse& operator=(const OneKeyAddMissionStarResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const OneKeyAddMissionStarResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OneKeyAddMissionStarResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OneKeyAddMissionStarResponse* other);

  // implements Message ----------------------------------------------

  OneKeyAddMissionStarResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OneKeyAddMissionStarResponse& from);
  void MergeFrom(const OneKeyAddMissionStarResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // optional uint32 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 jade = 4;
  inline bool has_jade() const;
  inline void clear_jade();
  static const int kJadeFieldNumber = 4;
  inline ::google::protobuf::uint32 jade() const;
  inline void set_jade(::google::protobuf::uint32 value);

  // optional .sanguo.MsgRoleMission roleMission = 5;
  inline bool has_rolemission() const;
  inline void clear_rolemission();
  static const int kRoleMissionFieldNumber = 5;
  inline const ::sanguo::MsgRoleMission& rolemission() const;
  inline ::sanguo::MsgRoleMission* mutable_rolemission();
  inline ::sanguo::MsgRoleMission* release_rolemission();
  inline void set_allocated_rolemission(::sanguo::MsgRoleMission* rolemission);

  // @@protoc_insertion_point(class_scope:sanguo.OneKeyAddMissionStarResponse)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_jade();
  inline void clear_has_jade();
  inline void set_has_rolemission();
  inline void clear_has_rolemission();

  int msgid_;
  int status_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 jade_;
  ::sanguo::MsgRoleMission* rolemission_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_one_5fkey_5fadd_5fmission_5fstar_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_one_5fkey_5fadd_5fmission_5fstar_2eproto();
  #endif
  friend void protobuf_AssignDesc_one_5fkey_5fadd_5fmission_5fstar_2eproto();
  friend void protobuf_ShutdownFile_one_5fkey_5fadd_5fmission_5fstar_2eproto();

  void InitAsDefaultInstance();
  static OneKeyAddMissionStarResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// OneKeyAddMissionStarRequest

// required .sanguo.MsgID msgID = 1;
inline bool OneKeyAddMissionStarRequest::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneKeyAddMissionStarRequest::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneKeyAddMissionStarRequest::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneKeyAddMissionStarRequest::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID OneKeyAddMissionStarRequest::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void OneKeyAddMissionStarRequest::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required uint64 autoIncrID = 2;
inline bool OneKeyAddMissionStarRequest::has_autoincrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneKeyAddMissionStarRequest::set_has_autoincrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneKeyAddMissionStarRequest::clear_has_autoincrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneKeyAddMissionStarRequest::clear_autoincrid() {
  autoincrid_ = GOOGLE_ULONGLONG(0);
  clear_has_autoincrid();
}
inline ::google::protobuf::uint64 OneKeyAddMissionStarRequest::autoincrid() const {
  return autoincrid_;
}
inline void OneKeyAddMissionStarRequest::set_autoincrid(::google::protobuf::uint64 value) {
  set_has_autoincrid();
  autoincrid_ = value;
}

// required uint32 type = 3;
inline bool OneKeyAddMissionStarRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneKeyAddMissionStarRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneKeyAddMissionStarRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneKeyAddMissionStarRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 OneKeyAddMissionStarRequest::type() const {
  return type_;
}
inline void OneKeyAddMissionStarRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// OneKeyAddMissionStarResponse

// required .sanguo.MsgID msgID = 1;
inline bool OneKeyAddMissionStarResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneKeyAddMissionStarResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneKeyAddMissionStarResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneKeyAddMissionStarResponse::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID OneKeyAddMissionStarResponse::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void OneKeyAddMissionStarResponse::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool OneKeyAddMissionStarResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneKeyAddMissionStarResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneKeyAddMissionStarResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneKeyAddMissionStarResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode OneKeyAddMissionStarResponse::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void OneKeyAddMissionStarResponse::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 gold = 3;
inline bool OneKeyAddMissionStarResponse::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneKeyAddMissionStarResponse::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneKeyAddMissionStarResponse::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneKeyAddMissionStarResponse::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 OneKeyAddMissionStarResponse::gold() const {
  return gold_;
}
inline void OneKeyAddMissionStarResponse::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint32 jade = 4;
inline bool OneKeyAddMissionStarResponse::has_jade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneKeyAddMissionStarResponse::set_has_jade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneKeyAddMissionStarResponse::clear_has_jade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneKeyAddMissionStarResponse::clear_jade() {
  jade_ = 0u;
  clear_has_jade();
}
inline ::google::protobuf::uint32 OneKeyAddMissionStarResponse::jade() const {
  return jade_;
}
inline void OneKeyAddMissionStarResponse::set_jade(::google::protobuf::uint32 value) {
  set_has_jade();
  jade_ = value;
}

// optional .sanguo.MsgRoleMission roleMission = 5;
inline bool OneKeyAddMissionStarResponse::has_rolemission() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneKeyAddMissionStarResponse::set_has_rolemission() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneKeyAddMissionStarResponse::clear_has_rolemission() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneKeyAddMissionStarResponse::clear_rolemission() {
  if (rolemission_ != NULL) rolemission_->::sanguo::MsgRoleMission::Clear();
  clear_has_rolemission();
}
inline const ::sanguo::MsgRoleMission& OneKeyAddMissionStarResponse::rolemission() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return rolemission_ != NULL ? *rolemission_ : *default_instance().rolemission_;
#else
  return rolemission_ != NULL ? *rolemission_ : *default_instance_->rolemission_;
#endif
}
inline ::sanguo::MsgRoleMission* OneKeyAddMissionStarResponse::mutable_rolemission() {
  set_has_rolemission();
  if (rolemission_ == NULL) rolemission_ = new ::sanguo::MsgRoleMission;
  return rolemission_;
}
inline ::sanguo::MsgRoleMission* OneKeyAddMissionStarResponse::release_rolemission() {
  clear_has_rolemission();
  ::sanguo::MsgRoleMission* temp = rolemission_;
  rolemission_ = NULL;
  return temp;
}
inline void OneKeyAddMissionStarResponse::set_allocated_rolemission(::sanguo::MsgRoleMission* rolemission) {
  delete rolemission_;
  rolemission_ = rolemission;
  if (rolemission) {
    set_has_rolemission();
  } else {
    clear_has_rolemission();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_one_5fkey_5fadd_5fmission_5fstar_2eproto__INCLUDED
