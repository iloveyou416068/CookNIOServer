// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main_city_broadcast.proto

#ifndef PROTOBUF_main_5fcity_5fbroadcast_2eproto__INCLUDED
#define PROTOBUF_main_5fcity_5fbroadcast_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "msg_id.pb.h"
#include "msg_status_code.pb.h"
#include "role.pb.h"
#include "pet.pb.h"
// @@protoc_insertion_point(includes)

namespace sanguo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_main_5fcity_5fbroadcast_2eproto();
void protobuf_AssignDesc_main_5fcity_5fbroadcast_2eproto();
void protobuf_ShutdownFile_main_5fcity_5fbroadcast_2eproto();

class EnterMainCityBroadcast;
class ExitMainCityBroadcast;

// ===================================================================

class EnterMainCityBroadcast : public ::google::protobuf::MessageLite {
 public:
  EnterMainCityBroadcast();
  virtual ~EnterMainCityBroadcast();

  EnterMainCityBroadcast(const EnterMainCityBroadcast& from);

  inline EnterMainCityBroadcast& operator=(const EnterMainCityBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  static const EnterMainCityBroadcast& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnterMainCityBroadcast* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnterMainCityBroadcast* other);

  // implements Message ----------------------------------------------

  EnterMainCityBroadcast* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnterMainCityBroadcast& from);
  void MergeFrom(const EnterMainCityBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // required uint32 cityID = 3;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // required .sanguo.MsgRoleData roleData = 4;
  inline bool has_roledata() const;
  inline void clear_roledata();
  static const int kRoleDataFieldNumber = 4;
  inline const ::sanguo::MsgRoleData& roledata() const;
  inline ::sanguo::MsgRoleData* mutable_roledata();
  inline ::sanguo::MsgRoleData* release_roledata();
  inline void set_allocated_roledata(::sanguo::MsgRoleData* roledata);

  // repeated .sanguo.MsgPet pet = 5;
  inline int pet_size() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 5;
  inline const ::sanguo::MsgPet& pet(int index) const;
  inline ::sanguo::MsgPet* mutable_pet(int index);
  inline ::sanguo::MsgPet* add_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgPet >&
      pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgPet >*
      mutable_pet();

  // @@protoc_insertion_point(class_scope:sanguo.EnterMainCityBroadcast)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_roledata();
  inline void clear_has_roledata();

  int msgid_;
  int status_;
  ::sanguo::MsgRoleData* roledata_;
  ::google::protobuf::RepeatedPtrField< ::sanguo::MsgPet > pet_;
  ::google::protobuf::uint32 cityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_main_5fcity_5fbroadcast_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_main_5fcity_5fbroadcast_2eproto();
  #endif
  friend void protobuf_AssignDesc_main_5fcity_5fbroadcast_2eproto();
  friend void protobuf_ShutdownFile_main_5fcity_5fbroadcast_2eproto();

  void InitAsDefaultInstance();
  static EnterMainCityBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class ExitMainCityBroadcast : public ::google::protobuf::MessageLite {
 public:
  ExitMainCityBroadcast();
  virtual ~ExitMainCityBroadcast();

  ExitMainCityBroadcast(const ExitMainCityBroadcast& from);

  inline ExitMainCityBroadcast& operator=(const ExitMainCityBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  static const ExitMainCityBroadcast& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ExitMainCityBroadcast* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ExitMainCityBroadcast* other);

  // implements Message ----------------------------------------------

  ExitMainCityBroadcast* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ExitMainCityBroadcast& from);
  void MergeFrom(const ExitMainCityBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sanguo.MsgID msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::sanguo::MsgID msgid() const;
  inline void set_msgid(::sanguo::MsgID value);

  // required .sanguo.StatusCode status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::sanguo::StatusCode status() const;
  inline void set_status(::sanguo::StatusCode value);

  // required uint64 roleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required uint32 cityID = 4;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityIDFieldNumber = 4;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:sanguo.ExitMainCityBroadcast)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_cityid();
  inline void clear_has_cityid();

  int msgid_;
  int status_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::uint32 cityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_main_5fcity_5fbroadcast_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_main_5fcity_5fbroadcast_2eproto();
  #endif
  friend void protobuf_AssignDesc_main_5fcity_5fbroadcast_2eproto();
  friend void protobuf_ShutdownFile_main_5fcity_5fbroadcast_2eproto();

  void InitAsDefaultInstance();
  static ExitMainCityBroadcast* default_instance_;
};
// ===================================================================


// ===================================================================

// EnterMainCityBroadcast

// required .sanguo.MsgID msgID = 1;
inline bool EnterMainCityBroadcast::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterMainCityBroadcast::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterMainCityBroadcast::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterMainCityBroadcast::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID EnterMainCityBroadcast::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void EnterMainCityBroadcast::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool EnterMainCityBroadcast::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterMainCityBroadcast::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterMainCityBroadcast::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterMainCityBroadcast::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode EnterMainCityBroadcast::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void EnterMainCityBroadcast::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// required uint32 cityID = 3;
inline bool EnterMainCityBroadcast::has_cityid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterMainCityBroadcast::set_has_cityid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterMainCityBroadcast::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterMainCityBroadcast::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 EnterMainCityBroadcast::cityid() const {
  return cityid_;
}
inline void EnterMainCityBroadcast::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
}

// required .sanguo.MsgRoleData roleData = 4;
inline bool EnterMainCityBroadcast::has_roledata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterMainCityBroadcast::set_has_roledata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterMainCityBroadcast::clear_has_roledata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterMainCityBroadcast::clear_roledata() {
  if (roledata_ != NULL) roledata_->::sanguo::MsgRoleData::Clear();
  clear_has_roledata();
}
inline const ::sanguo::MsgRoleData& EnterMainCityBroadcast::roledata() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return roledata_ != NULL ? *roledata_ : *default_instance().roledata_;
#else
  return roledata_ != NULL ? *roledata_ : *default_instance_->roledata_;
#endif
}
inline ::sanguo::MsgRoleData* EnterMainCityBroadcast::mutable_roledata() {
  set_has_roledata();
  if (roledata_ == NULL) roledata_ = new ::sanguo::MsgRoleData;
  return roledata_;
}
inline ::sanguo::MsgRoleData* EnterMainCityBroadcast::release_roledata() {
  clear_has_roledata();
  ::sanguo::MsgRoleData* temp = roledata_;
  roledata_ = NULL;
  return temp;
}
inline void EnterMainCityBroadcast::set_allocated_roledata(::sanguo::MsgRoleData* roledata) {
  delete roledata_;
  roledata_ = roledata;
  if (roledata) {
    set_has_roledata();
  } else {
    clear_has_roledata();
  }
}

// repeated .sanguo.MsgPet pet = 5;
inline int EnterMainCityBroadcast::pet_size() const {
  return pet_.size();
}
inline void EnterMainCityBroadcast::clear_pet() {
  pet_.Clear();
}
inline const ::sanguo::MsgPet& EnterMainCityBroadcast::pet(int index) const {
  return pet_.Get(index);
}
inline ::sanguo::MsgPet* EnterMainCityBroadcast::mutable_pet(int index) {
  return pet_.Mutable(index);
}
inline ::sanguo::MsgPet* EnterMainCityBroadcast::add_pet() {
  return pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sanguo::MsgPet >&
EnterMainCityBroadcast::pet() const {
  return pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::sanguo::MsgPet >*
EnterMainCityBroadcast::mutable_pet() {
  return &pet_;
}

// -------------------------------------------------------------------

// ExitMainCityBroadcast

// required .sanguo.MsgID msgID = 1;
inline bool ExitMainCityBroadcast::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitMainCityBroadcast::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitMainCityBroadcast::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitMainCityBroadcast::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::sanguo::MsgID ExitMainCityBroadcast::msgid() const {
  return static_cast< ::sanguo::MsgID >(msgid_);
}
inline void ExitMainCityBroadcast::set_msgid(::sanguo::MsgID value) {
  assert(::sanguo::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required .sanguo.StatusCode status = 2;
inline bool ExitMainCityBroadcast::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExitMainCityBroadcast::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExitMainCityBroadcast::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExitMainCityBroadcast::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::sanguo::StatusCode ExitMainCityBroadcast::status() const {
  return static_cast< ::sanguo::StatusCode >(status_);
}
inline void ExitMainCityBroadcast::set_status(::sanguo::StatusCode value) {
  assert(::sanguo::StatusCode_IsValid(value));
  set_has_status();
  status_ = value;
}

// required uint64 roleID = 3;
inline bool ExitMainCityBroadcast::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExitMainCityBroadcast::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExitMainCityBroadcast::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExitMainCityBroadcast::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ExitMainCityBroadcast::roleid() const {
  return roleid_;
}
inline void ExitMainCityBroadcast::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required uint32 cityID = 4;
inline bool ExitMainCityBroadcast::has_cityid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExitMainCityBroadcast::set_has_cityid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExitMainCityBroadcast::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExitMainCityBroadcast::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 ExitMainCityBroadcast::cityid() const {
  return cityid_;
}
inline void ExitMainCityBroadcast::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sanguo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_main_5fcity_5fbroadcast_2eproto__INCLUDED
