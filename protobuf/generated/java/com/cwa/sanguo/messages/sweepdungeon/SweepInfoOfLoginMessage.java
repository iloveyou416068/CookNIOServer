// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sweep_info_of_login.proto

package com.cwa.sanguo.messages.sweepdungeon;

public final class SweepInfoOfLoginMessage {
  private SweepInfoOfLoginMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SweepInfoOfLoginRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();
  }
  /**
   * Protobuf type {@code sanguo.SweepInfoOfLoginRequest}
   */
  public static final class SweepInfoOfLoginRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements SweepInfoOfLoginRequestOrBuilder {
    // Use SweepInfoOfLoginRequest.newBuilder() to construct.
    private SweepInfoOfLoginRequest(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SweepInfoOfLoginRequest(boolean noInit) {}

    private static final SweepInfoOfLoginRequest defaultInstance;
    public static SweepInfoOfLoginRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SweepInfoOfLoginRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SweepInfoOfLoginRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SweepInfoOfLoginRequest> PARSER =
        new com.google.protobuf.AbstractParser<SweepInfoOfLoginRequest>() {
      public SweepInfoOfLoginRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SweepInfoOfLoginRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SweepInfoOfLoginRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.SweepInfoOfLoginRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest, Builder>
        implements com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequestOrBuilder {
      // Construct using com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest build() {
        com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest buildPartial() {
        com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest result = new com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest other) {
        if (other == com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.SweepInfoOfLoginRequest)
    }

    static {
      defaultInstance = new SweepInfoOfLoginRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.SweepInfoOfLoginRequest)
  }

  public interface SweepInfoOfLoginResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();

    // required .sanguo.StatusCode status = 2;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus();

    // optional uint32 dungeonId = 3;
    /**
     * <code>optional uint32 dungeonId = 3;</code>
     *
     * <pre>
     * 副本id
     * </pre>
     */
    boolean hasDungeonId();
    /**
     * <code>optional uint32 dungeonId = 3;</code>
     *
     * <pre>
     * 副本id
     * </pre>
     */
    int getDungeonId();

    // optional uint32 dungeonType = 4;
    /**
     * <code>optional uint32 dungeonType = 4;</code>
     *
     * <pre>
     * 副本type
     * </pre>
     */
    boolean hasDungeonType();
    /**
     * <code>optional uint32 dungeonType = 4;</code>
     *
     * <pre>
     * 副本type
     * </pre>
     */
    int getDungeonType();

    // optional uint32 sweepDungeonType = 5;
    /**
     * <code>optional uint32 sweepDungeonType = 5;</code>
     *
     * <pre>
     * 副本扫荡类型
     * </pre>
     */
    boolean hasSweepDungeonType();
    /**
     * <code>optional uint32 sweepDungeonType = 5;</code>
     *
     * <pre>
     * 副本扫荡类型
     * </pre>
     */
    int getSweepDungeonType();

    // optional uint64 copper = 6;
    /**
     * <code>optional uint64 copper = 6;</code>
     *
     * <pre>
     * 玩家身上铜钱
     * </pre>
     */
    boolean hasCopper();
    /**
     * <code>optional uint64 copper = 6;</code>
     *
     * <pre>
     * 玩家身上铜钱
     * </pre>
     */
    long getCopper();

    // optional uint64 exp = 7;
    /**
     * <code>optional uint64 exp = 7;</code>
     *
     * <pre>
     * 玩家身上经验
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>optional uint64 exp = 7;</code>
     *
     * <pre>
     * 玩家身上经验
     * </pre>
     */
    long getExp();

    // optional uint64 jungong = 8;
    /**
     * <code>optional uint64 jungong = 8;</code>
     *
     * <pre>
     * 玩家身上军工
     * </pre>
     */
    boolean hasJungong();
    /**
     * <code>optional uint64 jungong = 8;</code>
     *
     * <pre>
     * 玩家身上军工
     * </pre>
     */
    long getJungong();

    // optional uint32 power = 9;
    /**
     * <code>optional uint32 power = 9;</code>
     *
     * <pre>
     * 体力
     * </pre>
     */
    boolean hasPower();
    /**
     * <code>optional uint32 power = 9;</code>
     *
     * <pre>
     * 体力
     * </pre>
     */
    int getPower();

    // optional .sanguo.MsgRoleCooldown cd = 10;
    /**
     * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
     *
     * <pre>
     * cd时间
     * </pre>
     */
    boolean hasCd();
    /**
     * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
     *
     * <pre>
     * cd时间
     * </pre>
     */
    com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown getCd();

    // optional string onlineGetGoodsId = 11;
    /**
     * <code>optional string onlineGetGoodsId = 11;</code>
     *
     * <pre>
     * 离线前获得的翻牌奖励Id
     * </pre>
     */
    boolean hasOnlineGetGoodsId();
    /**
     * <code>optional string onlineGetGoodsId = 11;</code>
     *
     * <pre>
     * 离线前获得的翻牌奖励Id
     * </pre>
     */
    java.lang.String getOnlineGetGoodsId();
    /**
     * <code>optional string onlineGetGoodsId = 11;</code>
     *
     * <pre>
     * 离线前获得的翻牌奖励Id
     * </pre>
     */
    com.google.protobuf.ByteString
        getOnlineGetGoodsIdBytes();

    // optional uint32 startFloor = 12;
    /**
     * <code>optional uint32 startFloor = 12;</code>
     *
     * <pre>
     *起始层(通天塔)
     * </pre>
     */
    boolean hasStartFloor();
    /**
     * <code>optional uint32 startFloor = 12;</code>
     *
     * <pre>
     *起始层(通天塔)
     * </pre>
     */
    int getStartFloor();

    // optional uint32 currentFloor = 13;
    /**
     * <code>optional uint32 currentFloor = 13;</code>
     *
     * <pre>
     *当前层(通天塔)	
     * </pre>
     */
    boolean hasCurrentFloor();
    /**
     * <code>optional uint32 currentFloor = 13;</code>
     *
     * <pre>
     *当前层(通天塔)	
     * </pre>
     */
    int getCurrentFloor();

    // optional uint32 destFloor = 14;
    /**
     * <code>optional uint32 destFloor = 14;</code>
     *
     * <pre>
     *目标层(通天塔)	
     * </pre>
     */
    boolean hasDestFloor();
    /**
     * <code>optional uint32 destFloor = 14;</code>
     *
     * <pre>
     *目标层(通天塔)	
     * </pre>
     */
    int getDestFloor();
  }
  /**
   * Protobuf type {@code sanguo.SweepInfoOfLoginResponse}
   */
  public static final class SweepInfoOfLoginResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements SweepInfoOfLoginResponseOrBuilder {
    // Use SweepInfoOfLoginResponse.newBuilder() to construct.
    private SweepInfoOfLoginResponse(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SweepInfoOfLoginResponse(boolean noInit) {}

    private static final SweepInfoOfLoginResponse defaultInstance;
    public static SweepInfoOfLoginResponse getDefaultInstance() {
      return defaultInstance;
    }

    public SweepInfoOfLoginResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SweepInfoOfLoginResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgStatusCode.StatusCode value = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dungeonId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              dungeonType_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sweepDungeonType_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              copper_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              exp_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              jungong_ = input.readUInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              power_ = input.readUInt32();
              break;
            }
            case 82: {
              com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = cd_.toBuilder();
              }
              cd_ = input.readMessage(com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cd_);
                cd_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              onlineGetGoodsId_ = input.readBytes();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              startFloor_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              currentFloor_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              destFloor_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SweepInfoOfLoginResponse> PARSER =
        new com.google.protobuf.AbstractParser<SweepInfoOfLoginResponse>() {
      public SweepInfoOfLoginResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SweepInfoOfLoginResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SweepInfoOfLoginResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    // required .sanguo.StatusCode status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
      return status_;
    }

    // optional uint32 dungeonId = 3;
    public static final int DUNGEONID_FIELD_NUMBER = 3;
    private int dungeonId_;
    /**
     * <code>optional uint32 dungeonId = 3;</code>
     *
     * <pre>
     * 副本id
     * </pre>
     */
    public boolean hasDungeonId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 dungeonId = 3;</code>
     *
     * <pre>
     * 副本id
     * </pre>
     */
    public int getDungeonId() {
      return dungeonId_;
    }

    // optional uint32 dungeonType = 4;
    public static final int DUNGEONTYPE_FIELD_NUMBER = 4;
    private int dungeonType_;
    /**
     * <code>optional uint32 dungeonType = 4;</code>
     *
     * <pre>
     * 副本type
     * </pre>
     */
    public boolean hasDungeonType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 dungeonType = 4;</code>
     *
     * <pre>
     * 副本type
     * </pre>
     */
    public int getDungeonType() {
      return dungeonType_;
    }

    // optional uint32 sweepDungeonType = 5;
    public static final int SWEEPDUNGEONTYPE_FIELD_NUMBER = 5;
    private int sweepDungeonType_;
    /**
     * <code>optional uint32 sweepDungeonType = 5;</code>
     *
     * <pre>
     * 副本扫荡类型
     * </pre>
     */
    public boolean hasSweepDungeonType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 sweepDungeonType = 5;</code>
     *
     * <pre>
     * 副本扫荡类型
     * </pre>
     */
    public int getSweepDungeonType() {
      return sweepDungeonType_;
    }

    // optional uint64 copper = 6;
    public static final int COPPER_FIELD_NUMBER = 6;
    private long copper_;
    /**
     * <code>optional uint64 copper = 6;</code>
     *
     * <pre>
     * 玩家身上铜钱
     * </pre>
     */
    public boolean hasCopper() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 copper = 6;</code>
     *
     * <pre>
     * 玩家身上铜钱
     * </pre>
     */
    public long getCopper() {
      return copper_;
    }

    // optional uint64 exp = 7;
    public static final int EXP_FIELD_NUMBER = 7;
    private long exp_;
    /**
     * <code>optional uint64 exp = 7;</code>
     *
     * <pre>
     * 玩家身上经验
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 exp = 7;</code>
     *
     * <pre>
     * 玩家身上经验
     * </pre>
     */
    public long getExp() {
      return exp_;
    }

    // optional uint64 jungong = 8;
    public static final int JUNGONG_FIELD_NUMBER = 8;
    private long jungong_;
    /**
     * <code>optional uint64 jungong = 8;</code>
     *
     * <pre>
     * 玩家身上军工
     * </pre>
     */
    public boolean hasJungong() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 jungong = 8;</code>
     *
     * <pre>
     * 玩家身上军工
     * </pre>
     */
    public long getJungong() {
      return jungong_;
    }

    // optional uint32 power = 9;
    public static final int POWER_FIELD_NUMBER = 9;
    private int power_;
    /**
     * <code>optional uint32 power = 9;</code>
     *
     * <pre>
     * 体力
     * </pre>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 power = 9;</code>
     *
     * <pre>
     * 体力
     * </pre>
     */
    public int getPower() {
      return power_;
    }

    // optional .sanguo.MsgRoleCooldown cd = 10;
    public static final int CD_FIELD_NUMBER = 10;
    private com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown cd_;
    /**
     * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
     *
     * <pre>
     * cd时间
     * </pre>
     */
    public boolean hasCd() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
     *
     * <pre>
     * cd时间
     * </pre>
     */
    public com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown getCd() {
      return cd_;
    }

    // optional string onlineGetGoodsId = 11;
    public static final int ONLINEGETGOODSID_FIELD_NUMBER = 11;
    private java.lang.Object onlineGetGoodsId_;
    /**
     * <code>optional string onlineGetGoodsId = 11;</code>
     *
     * <pre>
     * 离线前获得的翻牌奖励Id
     * </pre>
     */
    public boolean hasOnlineGetGoodsId() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string onlineGetGoodsId = 11;</code>
     *
     * <pre>
     * 离线前获得的翻牌奖励Id
     * </pre>
     */
    public java.lang.String getOnlineGetGoodsId() {
      java.lang.Object ref = onlineGetGoodsId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          onlineGetGoodsId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string onlineGetGoodsId = 11;</code>
     *
     * <pre>
     * 离线前获得的翻牌奖励Id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOnlineGetGoodsIdBytes() {
      java.lang.Object ref = onlineGetGoodsId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        onlineGetGoodsId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 startFloor = 12;
    public static final int STARTFLOOR_FIELD_NUMBER = 12;
    private int startFloor_;
    /**
     * <code>optional uint32 startFloor = 12;</code>
     *
     * <pre>
     *起始层(通天塔)
     * </pre>
     */
    public boolean hasStartFloor() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 startFloor = 12;</code>
     *
     * <pre>
     *起始层(通天塔)
     * </pre>
     */
    public int getStartFloor() {
      return startFloor_;
    }

    // optional uint32 currentFloor = 13;
    public static final int CURRENTFLOOR_FIELD_NUMBER = 13;
    private int currentFloor_;
    /**
     * <code>optional uint32 currentFloor = 13;</code>
     *
     * <pre>
     *当前层(通天塔)	
     * </pre>
     */
    public boolean hasCurrentFloor() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 currentFloor = 13;</code>
     *
     * <pre>
     *当前层(通天塔)	
     * </pre>
     */
    public int getCurrentFloor() {
      return currentFloor_;
    }

    // optional uint32 destFloor = 14;
    public static final int DESTFLOOR_FIELD_NUMBER = 14;
    private int destFloor_;
    /**
     * <code>optional uint32 destFloor = 14;</code>
     *
     * <pre>
     *目标层(通天塔)	
     * </pre>
     */
    public boolean hasDestFloor() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 destFloor = 14;</code>
     *
     * <pre>
     *目标层(通天塔)	
     * </pre>
     */
    public int getDestFloor() {
      return destFloor_;
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      dungeonId_ = 0;
      dungeonType_ = 0;
      sweepDungeonType_ = 0;
      copper_ = 0L;
      exp_ = 0L;
      jungong_ = 0L;
      power_ = 0;
      cd_ = com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance();
      onlineGetGoodsId_ = "";
      startFloor_ = 0;
      currentFloor_ = 0;
      destFloor_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCd()) {
        if (!getCd().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, dungeonId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, dungeonType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, sweepDungeonType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, copper_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, exp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, jungong_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, power_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, cd_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getOnlineGetGoodsIdBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, startFloor_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, currentFloor_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(14, destFloor_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, dungeonId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, dungeonType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, sweepDungeonType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, copper_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, exp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, jungong_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, power_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, cd_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getOnlineGetGoodsIdBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, startFloor_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, currentFloor_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, destFloor_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.SweepInfoOfLoginResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse, Builder>
        implements com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponseOrBuilder {
      // Construct using com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        bitField0_ = (bitField0_ & ~0x00000002);
        dungeonId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dungeonType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        sweepDungeonType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        copper_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        exp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        jungong_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        cd_ = com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000200);
        onlineGetGoodsId_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        startFloor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        currentFloor_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        destFloor_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse build() {
        com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse buildPartial() {
        com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse result = new com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dungeonId_ = dungeonId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dungeonType_ = dungeonType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sweepDungeonType_ = sweepDungeonType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.copper_ = copper_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.jungong_ = jungong_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.cd_ = cd_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.onlineGetGoodsId_ = onlineGetGoodsId_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.startFloor_ = startFloor_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.currentFloor_ = currentFloor_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.destFloor_ = destFloor_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse other) {
        if (other == com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasDungeonId()) {
          setDungeonId(other.getDungeonId());
        }
        if (other.hasDungeonType()) {
          setDungeonType(other.getDungeonType());
        }
        if (other.hasSweepDungeonType()) {
          setSweepDungeonType(other.getSweepDungeonType());
        }
        if (other.hasCopper()) {
          setCopper(other.getCopper());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasJungong()) {
          setJungong(other.getJungong());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasCd()) {
          mergeCd(other.getCd());
        }
        if (other.hasOnlineGetGoodsId()) {
          bitField0_ |= 0x00000400;
          onlineGetGoodsId_ = other.onlineGetGoodsId_;
          
        }
        if (other.hasStartFloor()) {
          setStartFloor(other.getStartFloor());
        }
        if (other.hasCurrentFloor()) {
          setCurrentFloor(other.getCurrentFloor());
        }
        if (other.hasDestFloor()) {
          setDestFloor(other.getDestFloor());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (hasCd()) {
          if (!getCd().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.sweepdungeon.SweepInfoOfLoginMessage.SweepInfoOfLoginResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // required .sanguo.StatusCode status = 2;
      private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
        return status_;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder setStatus(com.cwa.sanguo.messages.MsgStatusCode.StatusCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        
        return this;
      }

      // optional uint32 dungeonId = 3;
      private int dungeonId_ ;
      /**
       * <code>optional uint32 dungeonId = 3;</code>
       *
       * <pre>
       * 副本id
       * </pre>
       */
      public boolean hasDungeonId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 dungeonId = 3;</code>
       *
       * <pre>
       * 副本id
       * </pre>
       */
      public int getDungeonId() {
        return dungeonId_;
      }
      /**
       * <code>optional uint32 dungeonId = 3;</code>
       *
       * <pre>
       * 副本id
       * </pre>
       */
      public Builder setDungeonId(int value) {
        bitField0_ |= 0x00000004;
        dungeonId_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 dungeonId = 3;</code>
       *
       * <pre>
       * 副本id
       * </pre>
       */
      public Builder clearDungeonId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dungeonId_ = 0;
        
        return this;
      }

      // optional uint32 dungeonType = 4;
      private int dungeonType_ ;
      /**
       * <code>optional uint32 dungeonType = 4;</code>
       *
       * <pre>
       * 副本type
       * </pre>
       */
      public boolean hasDungeonType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 dungeonType = 4;</code>
       *
       * <pre>
       * 副本type
       * </pre>
       */
      public int getDungeonType() {
        return dungeonType_;
      }
      /**
       * <code>optional uint32 dungeonType = 4;</code>
       *
       * <pre>
       * 副本type
       * </pre>
       */
      public Builder setDungeonType(int value) {
        bitField0_ |= 0x00000008;
        dungeonType_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 dungeonType = 4;</code>
       *
       * <pre>
       * 副本type
       * </pre>
       */
      public Builder clearDungeonType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dungeonType_ = 0;
        
        return this;
      }

      // optional uint32 sweepDungeonType = 5;
      private int sweepDungeonType_ ;
      /**
       * <code>optional uint32 sweepDungeonType = 5;</code>
       *
       * <pre>
       * 副本扫荡类型
       * </pre>
       */
      public boolean hasSweepDungeonType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 sweepDungeonType = 5;</code>
       *
       * <pre>
       * 副本扫荡类型
       * </pre>
       */
      public int getSweepDungeonType() {
        return sweepDungeonType_;
      }
      /**
       * <code>optional uint32 sweepDungeonType = 5;</code>
       *
       * <pre>
       * 副本扫荡类型
       * </pre>
       */
      public Builder setSweepDungeonType(int value) {
        bitField0_ |= 0x00000010;
        sweepDungeonType_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 sweepDungeonType = 5;</code>
       *
       * <pre>
       * 副本扫荡类型
       * </pre>
       */
      public Builder clearSweepDungeonType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sweepDungeonType_ = 0;
        
        return this;
      }

      // optional uint64 copper = 6;
      private long copper_ ;
      /**
       * <code>optional uint64 copper = 6;</code>
       *
       * <pre>
       * 玩家身上铜钱
       * </pre>
       */
      public boolean hasCopper() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 copper = 6;</code>
       *
       * <pre>
       * 玩家身上铜钱
       * </pre>
       */
      public long getCopper() {
        return copper_;
      }
      /**
       * <code>optional uint64 copper = 6;</code>
       *
       * <pre>
       * 玩家身上铜钱
       * </pre>
       */
      public Builder setCopper(long value) {
        bitField0_ |= 0x00000020;
        copper_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 copper = 6;</code>
       *
       * <pre>
       * 玩家身上铜钱
       * </pre>
       */
      public Builder clearCopper() {
        bitField0_ = (bitField0_ & ~0x00000020);
        copper_ = 0L;
        
        return this;
      }

      // optional uint64 exp = 7;
      private long exp_ ;
      /**
       * <code>optional uint64 exp = 7;</code>
       *
       * <pre>
       * 玩家身上经验
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 exp = 7;</code>
       *
       * <pre>
       * 玩家身上经验
       * </pre>
       */
      public long getExp() {
        return exp_;
      }
      /**
       * <code>optional uint64 exp = 7;</code>
       *
       * <pre>
       * 玩家身上经验
       * </pre>
       */
      public Builder setExp(long value) {
        bitField0_ |= 0x00000040;
        exp_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 exp = 7;</code>
       *
       * <pre>
       * 玩家身上经验
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        exp_ = 0L;
        
        return this;
      }

      // optional uint64 jungong = 8;
      private long jungong_ ;
      /**
       * <code>optional uint64 jungong = 8;</code>
       *
       * <pre>
       * 玩家身上军工
       * </pre>
       */
      public boolean hasJungong() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 jungong = 8;</code>
       *
       * <pre>
       * 玩家身上军工
       * </pre>
       */
      public long getJungong() {
        return jungong_;
      }
      /**
       * <code>optional uint64 jungong = 8;</code>
       *
       * <pre>
       * 玩家身上军工
       * </pre>
       */
      public Builder setJungong(long value) {
        bitField0_ |= 0x00000080;
        jungong_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 jungong = 8;</code>
       *
       * <pre>
       * 玩家身上军工
       * </pre>
       */
      public Builder clearJungong() {
        bitField0_ = (bitField0_ & ~0x00000080);
        jungong_ = 0L;
        
        return this;
      }

      // optional uint32 power = 9;
      private int power_ ;
      /**
       * <code>optional uint32 power = 9;</code>
       *
       * <pre>
       * 体力
       * </pre>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 power = 9;</code>
       *
       * <pre>
       * 体力
       * </pre>
       */
      public int getPower() {
        return power_;
      }
      /**
       * <code>optional uint32 power = 9;</code>
       *
       * <pre>
       * 体力
       * </pre>
       */
      public Builder setPower(int value) {
        bitField0_ |= 0x00000100;
        power_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 power = 9;</code>
       *
       * <pre>
       * 体力
       * </pre>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000100);
        power_ = 0;
        
        return this;
      }

      // optional .sanguo.MsgRoleCooldown cd = 10;
      private com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown cd_ = com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance();
      /**
       * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
       *
       * <pre>
       * cd时间
       * </pre>
       */
      public boolean hasCd() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
       *
       * <pre>
       * cd时间
       * </pre>
       */
      public com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown getCd() {
        return cd_;
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
       *
       * <pre>
       * cd时间
       * </pre>
       */
      public Builder setCd(com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown value) {
        if (value == null) {
          throw new NullPointerException();
        }
        cd_ = value;

        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
       *
       * <pre>
       * cd时间
       * </pre>
       */
      public Builder setCd(
          com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.Builder builderForValue) {
        cd_ = builderForValue.build();

        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
       *
       * <pre>
       * cd时间
       * </pre>
       */
      public Builder mergeCd(com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown value) {
        if (((bitField0_ & 0x00000200) == 0x00000200) &&
            cd_ != com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance()) {
          cd_ =
            com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.newBuilder(cd_).mergeFrom(value).buildPartial();
        } else {
          cd_ = value;
        }

        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown cd = 10;</code>
       *
       * <pre>
       * cd时间
       * </pre>
       */
      public Builder clearCd() {
        cd_ = com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      // optional string onlineGetGoodsId = 11;
      private java.lang.Object onlineGetGoodsId_ = "";
      /**
       * <code>optional string onlineGetGoodsId = 11;</code>
       *
       * <pre>
       * 离线前获得的翻牌奖励Id
       * </pre>
       */
      public boolean hasOnlineGetGoodsId() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string onlineGetGoodsId = 11;</code>
       *
       * <pre>
       * 离线前获得的翻牌奖励Id
       * </pre>
       */
      public java.lang.String getOnlineGetGoodsId() {
        java.lang.Object ref = onlineGetGoodsId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          onlineGetGoodsId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string onlineGetGoodsId = 11;</code>
       *
       * <pre>
       * 离线前获得的翻牌奖励Id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOnlineGetGoodsIdBytes() {
        java.lang.Object ref = onlineGetGoodsId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          onlineGetGoodsId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string onlineGetGoodsId = 11;</code>
       *
       * <pre>
       * 离线前获得的翻牌奖励Id
       * </pre>
       */
      public Builder setOnlineGetGoodsId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        onlineGetGoodsId_ = value;
        
        return this;
      }
      /**
       * <code>optional string onlineGetGoodsId = 11;</code>
       *
       * <pre>
       * 离线前获得的翻牌奖励Id
       * </pre>
       */
      public Builder clearOnlineGetGoodsId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        onlineGetGoodsId_ = getDefaultInstance().getOnlineGetGoodsId();
        
        return this;
      }
      /**
       * <code>optional string onlineGetGoodsId = 11;</code>
       *
       * <pre>
       * 离线前获得的翻牌奖励Id
       * </pre>
       */
      public Builder setOnlineGetGoodsIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        onlineGetGoodsId_ = value;
        
        return this;
      }

      // optional uint32 startFloor = 12;
      private int startFloor_ ;
      /**
       * <code>optional uint32 startFloor = 12;</code>
       *
       * <pre>
       *起始层(通天塔)
       * </pre>
       */
      public boolean hasStartFloor() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 startFloor = 12;</code>
       *
       * <pre>
       *起始层(通天塔)
       * </pre>
       */
      public int getStartFloor() {
        return startFloor_;
      }
      /**
       * <code>optional uint32 startFloor = 12;</code>
       *
       * <pre>
       *起始层(通天塔)
       * </pre>
       */
      public Builder setStartFloor(int value) {
        bitField0_ |= 0x00000800;
        startFloor_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 startFloor = 12;</code>
       *
       * <pre>
       *起始层(通天塔)
       * </pre>
       */
      public Builder clearStartFloor() {
        bitField0_ = (bitField0_ & ~0x00000800);
        startFloor_ = 0;
        
        return this;
      }

      // optional uint32 currentFloor = 13;
      private int currentFloor_ ;
      /**
       * <code>optional uint32 currentFloor = 13;</code>
       *
       * <pre>
       *当前层(通天塔)	
       * </pre>
       */
      public boolean hasCurrentFloor() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 currentFloor = 13;</code>
       *
       * <pre>
       *当前层(通天塔)	
       * </pre>
       */
      public int getCurrentFloor() {
        return currentFloor_;
      }
      /**
       * <code>optional uint32 currentFloor = 13;</code>
       *
       * <pre>
       *当前层(通天塔)	
       * </pre>
       */
      public Builder setCurrentFloor(int value) {
        bitField0_ |= 0x00001000;
        currentFloor_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 currentFloor = 13;</code>
       *
       * <pre>
       *当前层(通天塔)	
       * </pre>
       */
      public Builder clearCurrentFloor() {
        bitField0_ = (bitField0_ & ~0x00001000);
        currentFloor_ = 0;
        
        return this;
      }

      // optional uint32 destFloor = 14;
      private int destFloor_ ;
      /**
       * <code>optional uint32 destFloor = 14;</code>
       *
       * <pre>
       *目标层(通天塔)	
       * </pre>
       */
      public boolean hasDestFloor() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 destFloor = 14;</code>
       *
       * <pre>
       *目标层(通天塔)	
       * </pre>
       */
      public int getDestFloor() {
        return destFloor_;
      }
      /**
       * <code>optional uint32 destFloor = 14;</code>
       *
       * <pre>
       *目标层(通天塔)	
       * </pre>
       */
      public Builder setDestFloor(int value) {
        bitField0_ |= 0x00002000;
        destFloor_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 destFloor = 14;</code>
       *
       * <pre>
       *目标层(通天塔)	
       * </pre>
       */
      public Builder clearDestFloor() {
        bitField0_ = (bitField0_ & ~0x00002000);
        destFloor_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.SweepInfoOfLoginResponse)
    }

    static {
      defaultInstance = new SweepInfoOfLoginResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.SweepInfoOfLoginResponse)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
