// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: constants.proto

package com.cwa.sanguo.messages;

public final class Constants {
  private Constants() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code sanguo.RoleProfession}
   *
   * <pre>
   * 角色职业
   * </pre>
   */
  public enum RoleProfession
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>WARRIOR = 1;</code>
     *
     * <pre>
     * 猛将
     * </pre>
     */
    WARRIOR(0, 1),
    /**
     * <code>ASSASSIN = 2;</code>
     *
     * <pre>
     * 智将
     * </pre>
     */
    ASSASSIN(1, 2),
    /**
     * <code>MAGICIAN = 4;</code>
     *
     * <pre>
     * 谋士
     * </pre>
     */
    MAGICIAN(2, 4),
    /**
     * <code>SWORDSMAN = 8;</code>
     *
     * <pre>
     *侠士
     * </pre>
     */
    SWORDSMAN(3, 8),
    ;

    /**
     * <code>WARRIOR = 1;</code>
     *
     * <pre>
     * 猛将
     * </pre>
     */
    public static final int WARRIOR_VALUE = 1;
    /**
     * <code>ASSASSIN = 2;</code>
     *
     * <pre>
     * 智将
     * </pre>
     */
    public static final int ASSASSIN_VALUE = 2;
    /**
     * <code>MAGICIAN = 4;</code>
     *
     * <pre>
     * 谋士
     * </pre>
     */
    public static final int MAGICIAN_VALUE = 4;
    /**
     * <code>SWORDSMAN = 8;</code>
     *
     * <pre>
     *侠士
     * </pre>
     */
    public static final int SWORDSMAN_VALUE = 8;


    public final int getNumber() { return value; }

    public static RoleProfession valueOf(int value) {
      switch (value) {
        case 1: return WARRIOR;
        case 2: return ASSASSIN;
        case 4: return MAGICIAN;
        case 8: return SWORDSMAN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoleProfession>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RoleProfession>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoleProfession>() {
            public RoleProfession findValueByNumber(int number) {
              return RoleProfession.valueOf(number);
            }
          };

    private final int value;

    private RoleProfession(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.RoleProfession)
  }

  /**
   * Protobuf enum {@code sanguo.RoleDataType}
   */
  public enum RoleDataType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>MINE = 1;</code>
     *
     * <pre>
     *自己
     * </pre>
     */
    MINE(0, 1),
    /**
     * <code>OTHERS = 2;</code>
     *
     * <pre>
     *主城中其他人
     * </pre>
     */
    OTHERS(1, 2),
    /**
     * <code>ARENA = 3;</code>
     *
     * <pre>
     *竞技场玩家数据
     * </pre>
     */
    ARENA(2, 3),
    /**
     * <code>STATUES = 4;</code>
     *
     * <pre>
     *雕像数据
     * </pre>
     */
    STATUES(3, 4),
    /**
     * <code>COMRADE = 5;</code>
     *
     * <pre>
     *特殊副本中战友数据
     * </pre>
     */
    COMRADE(4, 5),
    /**
     * <code>WORLDBOSS = 6;</code>
     *
     * <pre>
     *世界BOSS中其他玩家数据
     * </pre>
     */
    WORLDBOSS(5, 6),
    /**
     * <code>YIJUN_CAPTURER = 7;</code>
     *
     * <pre>
     * 义军掠夺者
     * </pre>
     */
    YIJUN_CAPTURER(6, 7),
    ;

    /**
     * <code>MINE = 1;</code>
     *
     * <pre>
     *自己
     * </pre>
     */
    public static final int MINE_VALUE = 1;
    /**
     * <code>OTHERS = 2;</code>
     *
     * <pre>
     *主城中其他人
     * </pre>
     */
    public static final int OTHERS_VALUE = 2;
    /**
     * <code>ARENA = 3;</code>
     *
     * <pre>
     *竞技场玩家数据
     * </pre>
     */
    public static final int ARENA_VALUE = 3;
    /**
     * <code>STATUES = 4;</code>
     *
     * <pre>
     *雕像数据
     * </pre>
     */
    public static final int STATUES_VALUE = 4;
    /**
     * <code>COMRADE = 5;</code>
     *
     * <pre>
     *特殊副本中战友数据
     * </pre>
     */
    public static final int COMRADE_VALUE = 5;
    /**
     * <code>WORLDBOSS = 6;</code>
     *
     * <pre>
     *世界BOSS中其他玩家数据
     * </pre>
     */
    public static final int WORLDBOSS_VALUE = 6;
    /**
     * <code>YIJUN_CAPTURER = 7;</code>
     *
     * <pre>
     * 义军掠夺者
     * </pre>
     */
    public static final int YIJUN_CAPTURER_VALUE = 7;


    public final int getNumber() { return value; }

    public static RoleDataType valueOf(int value) {
      switch (value) {
        case 1: return MINE;
        case 2: return OTHERS;
        case 3: return ARENA;
        case 4: return STATUES;
        case 5: return COMRADE;
        case 6: return WORLDBOSS;
        case 7: return YIJUN_CAPTURER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoleDataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RoleDataType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoleDataType>() {
            public RoleDataType findValueByNumber(int number) {
              return RoleDataType.valueOf(number);
            }
          };

    private final int value;

    private RoleDataType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.RoleDataType)
  }

  /**
   * Protobuf enum {@code sanguo.BagPetCount}
   *
   * <pre>
   *背包格数
   * </pre>
   */
  public enum BagPetCount
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>BAG_PET_COUNT_MAX = 50;</code>
     */
    BAG_PET_COUNT_MAX(0, 50),
    ;

    /**
     * <code>BAG_PET_COUNT_MAX = 50;</code>
     */
    public static final int BAG_PET_COUNT_MAX_VALUE = 50;


    public final int getNumber() { return value; }

    public static BagPetCount valueOf(int value) {
      switch (value) {
        case 50: return BAG_PET_COUNT_MAX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BagPetCount>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BagPetCount>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BagPetCount>() {
            public BagPetCount findValueByNumber(int number) {
              return BagPetCount.valueOf(number);
            }
          };

    private final int value;

    private BagPetCount(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.BagPetCount)
  }

  /**
   * Protobuf enum {@code sanguo.BagCount}
   */
  public enum BagCount
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>BAG_COUNT_INIT = 32;</code>
     */
    BAG_COUNT_INIT(0, 32),
    /**
     * <code>BAG_COUNT_MAX = 80;</code>
     */
    BAG_COUNT_MAX(1, 80),
    ;

    /**
     * <code>BAG_COUNT_INIT = 32;</code>
     */
    public static final int BAG_COUNT_INIT_VALUE = 32;
    /**
     * <code>BAG_COUNT_MAX = 80;</code>
     */
    public static final int BAG_COUNT_MAX_VALUE = 80;


    public final int getNumber() { return value; }

    public static BagCount valueOf(int value) {
      switch (value) {
        case 32: return BAG_COUNT_INIT;
        case 80: return BAG_COUNT_MAX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BagCount>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BagCount>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BagCount>() {
            public BagCount findValueByNumber(int number) {
              return BagCount.valueOf(number);
            }
          };

    private final int value;

    private BagCount(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.BagCount)
  }

  /**
   * Protobuf enum {@code sanguo.BagGuaxiangCount}
   *
   * <pre>
   *卦象背包格数
   * </pre>
   */
  public enum BagGuaxiangCount
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>BAG_GUAXIANG_COUNT_INIT = 8;</code>
     */
    BAG_GUAXIANG_COUNT_INIT(0, 8),
    /**
     * <code>BAG_GUAXIANG_COUNT_MAX = 16;</code>
     */
    BAG_GUAXIANG_COUNT_MAX(1, 16),
    ;

    /**
     * <code>BAG_GUAXIANG_COUNT_INIT = 8;</code>
     */
    public static final int BAG_GUAXIANG_COUNT_INIT_VALUE = 8;
    /**
     * <code>BAG_GUAXIANG_COUNT_MAX = 16;</code>
     */
    public static final int BAG_GUAXIANG_COUNT_MAX_VALUE = 16;


    public final int getNumber() { return value; }

    public static BagGuaxiangCount valueOf(int value) {
      switch (value) {
        case 8: return BAG_GUAXIANG_COUNT_INIT;
        case 16: return BAG_GUAXIANG_COUNT_MAX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BagGuaxiangCount>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BagGuaxiangCount>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BagGuaxiangCount>() {
            public BagGuaxiangCount findValueByNumber(int number) {
              return BagGuaxiangCount.valueOf(number);
            }
          };

    private final int value;

    private BagGuaxiangCount(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.BagGuaxiangCount)
  }

  /**
   * Protobuf enum {@code sanguo.GoodsStatus}
   *
   * <pre>
   *物品的状态
   * </pre>
   */
  public enum GoodsStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>GOODS_NORMAL = 0;</code>
     *
     * <pre>
     *正常
     * </pre>
     */
    GOODS_NORMAL(0, 0),
    /**
     * <code>GOODS_EQUIPED = 1;</code>
     *
     * <pre>
     *已装备
     * </pre>
     */
    GOODS_EQUIPED(1, 1),
    /**
     * <code>GOODS_SELLED = 2;</code>
     *
     * <pre>
     *出售
     * </pre>
     */
    GOODS_SELLED(2, 2),
    /**
     * <code>GOODS_DELETE = 3;</code>
     *
     * <pre>
     *作废
     * </pre>
     */
    GOODS_DELETE(3, 3),
    /**
     * <code>GOODS_LOCK = 4;</code>
     *
     * <pre>
     *锁定
     * </pre>
     */
    GOODS_LOCK(4, 4),
    ;

    /**
     * <code>GOODS_NORMAL = 0;</code>
     *
     * <pre>
     *正常
     * </pre>
     */
    public static final int GOODS_NORMAL_VALUE = 0;
    /**
     * <code>GOODS_EQUIPED = 1;</code>
     *
     * <pre>
     *已装备
     * </pre>
     */
    public static final int GOODS_EQUIPED_VALUE = 1;
    /**
     * <code>GOODS_SELLED = 2;</code>
     *
     * <pre>
     *出售
     * </pre>
     */
    public static final int GOODS_SELLED_VALUE = 2;
    /**
     * <code>GOODS_DELETE = 3;</code>
     *
     * <pre>
     *作废
     * </pre>
     */
    public static final int GOODS_DELETE_VALUE = 3;
    /**
     * <code>GOODS_LOCK = 4;</code>
     *
     * <pre>
     *锁定
     * </pre>
     */
    public static final int GOODS_LOCK_VALUE = 4;


    public final int getNumber() { return value; }

    public static GoodsStatus valueOf(int value) {
      switch (value) {
        case 0: return GOODS_NORMAL;
        case 1: return GOODS_EQUIPED;
        case 2: return GOODS_SELLED;
        case 3: return GOODS_DELETE;
        case 4: return GOODS_LOCK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GoodsStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GoodsStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GoodsStatus>() {
            public GoodsStatus findValueByNumber(int number) {
              return GoodsStatus.valueOf(number);
            }
          };

    private final int value;

    private GoodsStatus(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.GoodsStatus)
  }

  /**
   * Protobuf enum {@code sanguo.GoodsType}
   *
   * <pre>
   *装备的类型
   * </pre>
   */
  public enum GoodsType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>GOODS_EQUIPMENT = 1;</code>
     *
     * <pre>
     *装备
     * </pre>
     */
    GOODS_EQUIPMENT(0, 1),
    /**
     * <code>GOODS_JEWELRY = 2;</code>
     *
     * <pre>
     *饰品
     * </pre>
     */
    GOODS_JEWELRY(1, 2),
    /**
     * <code>GOODS_SKILLBOOKFRAGMENT = 3;</code>
     *
     * <pre>
     *残券
     * </pre>
     */
    GOODS_SKILLBOOKFRAGMENT(2, 3),
    /**
     * <code>GOODS_SKILLBOOK = 4;</code>
     *
     * <pre>
     *技能竹简
     * </pre>
     */
    GOODS_SKILLBOOK(3, 4),
    /**
     * <code>GOODS_GEM = 5;</code>
     *
     * <pre>
     *宝石
     * </pre>
     */
    GOODS_GEM(4, 5),
    /**
     * <code>GOODS_GIFTINBAG = 6;</code>
     *
     * <pre>
     *背包中的礼包
     * </pre>
     */
    GOODS_GIFTINBAG(5, 6),
    /**
     * <code>GOODS_GUAXIANG = 7;</code>
     *
     * <pre>
     *卦象
     * </pre>
     */
    GOODS_GUAXIANG(6, 7),
    /**
     * <code>GOODS_YUNTIE = 9;</code>
     *
     * <pre>
     *陨铁
     * </pre>
     */
    GOODS_YUNTIE(7, 9),
    /**
     * <code>GOODS_KUNGFU = 10;</code>
     *
     * <pre>
     * 武功秘籍
     * </pre>
     */
    GOODS_KUNGFU(8, 10),
    /**
     * <code>GOODS_BATTLE = 11;</code>
     *
     * <pre>
     * 战斗用品
     * </pre>
     */
    GOODS_BATTLE(9, 11),
    /**
     * <code>GOODS_VIP_EXP_CARD = 12;</code>
     *
     * <pre>
     * vip体验卡
     * </pre>
     */
    GOODS_VIP_EXP_CARD(10, 12),
    /**
     * <code>GOODS_KUNGFU_ENHANCE_TAOLU = 13;</code>
     *
     * <pre>
     * 套路强化石
     * </pre>
     */
    GOODS_KUNGFU_ENHANCE_TAOLU(11, 13),
    /**
     * <code>GOODS_PET_EGG = 15;</code>
     *
     * <pre>
     * 宠物蛋
     * </pre>
     */
    GOODS_PET_EGG(12, 15),
    /**
     * <code>GOODS_PET_FEED = 16;</code>
     *
     * <pre>
     * 精气(宠物饲料)
     * </pre>
     */
    GOODS_PET_FEED(13, 16),
    ;

    /**
     * <code>GOODS_EQUIPMENT = 1;</code>
     *
     * <pre>
     *装备
     * </pre>
     */
    public static final int GOODS_EQUIPMENT_VALUE = 1;
    /**
     * <code>GOODS_JEWELRY = 2;</code>
     *
     * <pre>
     *饰品
     * </pre>
     */
    public static final int GOODS_JEWELRY_VALUE = 2;
    /**
     * <code>GOODS_SKILLBOOKFRAGMENT = 3;</code>
     *
     * <pre>
     *残券
     * </pre>
     */
    public static final int GOODS_SKILLBOOKFRAGMENT_VALUE = 3;
    /**
     * <code>GOODS_SKILLBOOK = 4;</code>
     *
     * <pre>
     *技能竹简
     * </pre>
     */
    public static final int GOODS_SKILLBOOK_VALUE = 4;
    /**
     * <code>GOODS_GEM = 5;</code>
     *
     * <pre>
     *宝石
     * </pre>
     */
    public static final int GOODS_GEM_VALUE = 5;
    /**
     * <code>GOODS_GIFTINBAG = 6;</code>
     *
     * <pre>
     *背包中的礼包
     * </pre>
     */
    public static final int GOODS_GIFTINBAG_VALUE = 6;
    /**
     * <code>GOODS_GUAXIANG = 7;</code>
     *
     * <pre>
     *卦象
     * </pre>
     */
    public static final int GOODS_GUAXIANG_VALUE = 7;
    /**
     * <code>GOODS_YUNTIE = 9;</code>
     *
     * <pre>
     *陨铁
     * </pre>
     */
    public static final int GOODS_YUNTIE_VALUE = 9;
    /**
     * <code>GOODS_KUNGFU = 10;</code>
     *
     * <pre>
     * 武功秘籍
     * </pre>
     */
    public static final int GOODS_KUNGFU_VALUE = 10;
    /**
     * <code>GOODS_BATTLE = 11;</code>
     *
     * <pre>
     * 战斗用品
     * </pre>
     */
    public static final int GOODS_BATTLE_VALUE = 11;
    /**
     * <code>GOODS_VIP_EXP_CARD = 12;</code>
     *
     * <pre>
     * vip体验卡
     * </pre>
     */
    public static final int GOODS_VIP_EXP_CARD_VALUE = 12;
    /**
     * <code>GOODS_KUNGFU_ENHANCE_TAOLU = 13;</code>
     *
     * <pre>
     * 套路强化石
     * </pre>
     */
    public static final int GOODS_KUNGFU_ENHANCE_TAOLU_VALUE = 13;
    /**
     * <code>GOODS_PET_EGG = 15;</code>
     *
     * <pre>
     * 宠物蛋
     * </pre>
     */
    public static final int GOODS_PET_EGG_VALUE = 15;
    /**
     * <code>GOODS_PET_FEED = 16;</code>
     *
     * <pre>
     * 精气(宠物饲料)
     * </pre>
     */
    public static final int GOODS_PET_FEED_VALUE = 16;


    public final int getNumber() { return value; }

    public static GoodsType valueOf(int value) {
      switch (value) {
        case 1: return GOODS_EQUIPMENT;
        case 2: return GOODS_JEWELRY;
        case 3: return GOODS_SKILLBOOKFRAGMENT;
        case 4: return GOODS_SKILLBOOK;
        case 5: return GOODS_GEM;
        case 6: return GOODS_GIFTINBAG;
        case 7: return GOODS_GUAXIANG;
        case 9: return GOODS_YUNTIE;
        case 10: return GOODS_KUNGFU;
        case 11: return GOODS_BATTLE;
        case 12: return GOODS_VIP_EXP_CARD;
        case 13: return GOODS_KUNGFU_ENHANCE_TAOLU;
        case 15: return GOODS_PET_EGG;
        case 16: return GOODS_PET_FEED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GoodsType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GoodsType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GoodsType>() {
            public GoodsType findValueByNumber(int number) {
              return GoodsType.valueOf(number);
            }
          };

    private final int value;

    private GoodsType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.GoodsType)
  }

  /**
   * Protobuf enum {@code sanguo.CooldownType}
   *
   * <pre>
   *冷却时间的类型
   * </pre>
   */
  public enum CooldownType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>COOLDOWN_ENHANCE_EQUIP = 1;</code>
     *
     * <pre>
     *强化装备
     * </pre>
     */
    COOLDOWN_ENHANCE_EQUIP(0, 1),
    /**
     * <code>COOLDOWN_UPGRADE_SKILL = 2;</code>
     *
     * <pre>
     *升级技能
     * </pre>
     */
    COOLDOWN_UPGRADE_SKILL(1, 2),
    /**
     * <code>COOLDOWN_OPENCHEST_COPPER = 3;</code>
     *
     * <pre>
     *开启铜宝箱
     * </pre>
     */
    COOLDOWN_OPENCHEST_COPPER(2, 3),
    /**
     * <code>COOLDOWN_OPENCHEST_SILVER = 4;</code>
     *
     * <pre>
     *开启银宝箱
     * </pre>
     */
    COOLDOWN_OPENCHEST_SILVER(3, 4),
    /**
     * <code>COOLDOWN_OPENCHEST_GOLD = 5;</code>
     *
     * <pre>
     *开启金宝箱
     * </pre>
     */
    COOLDOWN_OPENCHEST_GOLD(4, 5),
    /**
     * <code>COOLDOWN_SWEEP_DUNGEON = 6;</code>
     *
     * <pre>
     * 扫荡副本
     * </pre>
     */
    COOLDOWN_SWEEP_DUNGEON(5, 6),
    /**
     * <code>COOLDOWN_KUNGFU = 7;</code>
     *
     * <pre>
     * 武学
     * </pre>
     */
    COOLDOWN_KUNGFU(6, 7),
    /**
     * <code>COOLDOWN_VIP_EXPERENCED_LV = 8;</code>
     *
     * <pre>
     * vip体验卡等级1
     * </pre>
     */
    COOLDOWN_VIP_EXPERENCED_LV(7, 8),
    /**
     * <code>COOLDOWN_MONTH_CARD = 9;</code>
     *
     * <pre>
     * 月卡
     * </pre>
     */
    COOLDOWN_MONTH_CARD(8, 9),
    /**
     * <code>COOLDOWN_PET_BORNING_SLOT_ONE = 10;</code>
     *
     * <pre>
     * 宠物蛋孵化槽位1
     * </pre>
     */
    COOLDOWN_PET_BORNING_SLOT_ONE(9, 10),
    /**
     * <code>COOLDOWN_PET__SLOT_TWO = 11;</code>
     *
     * <pre>
     * 宠物蛋孵化槽位2
     * </pre>
     */
    COOLDOWN_PET__SLOT_TWO(10, 11),
    /**
     * <code>COOLDOWN_PET__SLOT_THREE = 12;</code>
     *
     * <pre>
     * 宠物蛋孵化槽位3
     * </pre>
     */
    COOLDOWN_PET__SLOT_THREE(11, 12),
    ;

    /**
     * <code>COOLDOWN_ENHANCE_EQUIP = 1;</code>
     *
     * <pre>
     *强化装备
     * </pre>
     */
    public static final int COOLDOWN_ENHANCE_EQUIP_VALUE = 1;
    /**
     * <code>COOLDOWN_UPGRADE_SKILL = 2;</code>
     *
     * <pre>
     *升级技能
     * </pre>
     */
    public static final int COOLDOWN_UPGRADE_SKILL_VALUE = 2;
    /**
     * <code>COOLDOWN_OPENCHEST_COPPER = 3;</code>
     *
     * <pre>
     *开启铜宝箱
     * </pre>
     */
    public static final int COOLDOWN_OPENCHEST_COPPER_VALUE = 3;
    /**
     * <code>COOLDOWN_OPENCHEST_SILVER = 4;</code>
     *
     * <pre>
     *开启银宝箱
     * </pre>
     */
    public static final int COOLDOWN_OPENCHEST_SILVER_VALUE = 4;
    /**
     * <code>COOLDOWN_OPENCHEST_GOLD = 5;</code>
     *
     * <pre>
     *开启金宝箱
     * </pre>
     */
    public static final int COOLDOWN_OPENCHEST_GOLD_VALUE = 5;
    /**
     * <code>COOLDOWN_SWEEP_DUNGEON = 6;</code>
     *
     * <pre>
     * 扫荡副本
     * </pre>
     */
    public static final int COOLDOWN_SWEEP_DUNGEON_VALUE = 6;
    /**
     * <code>COOLDOWN_KUNGFU = 7;</code>
     *
     * <pre>
     * 武学
     * </pre>
     */
    public static final int COOLDOWN_KUNGFU_VALUE = 7;
    /**
     * <code>COOLDOWN_VIP_EXPERENCED_LV = 8;</code>
     *
     * <pre>
     * vip体验卡等级1
     * </pre>
     */
    public static final int COOLDOWN_VIP_EXPERENCED_LV_VALUE = 8;
    /**
     * <code>COOLDOWN_MONTH_CARD = 9;</code>
     *
     * <pre>
     * 月卡
     * </pre>
     */
    public static final int COOLDOWN_MONTH_CARD_VALUE = 9;
    /**
     * <code>COOLDOWN_PET_BORNING_SLOT_ONE = 10;</code>
     *
     * <pre>
     * 宠物蛋孵化槽位1
     * </pre>
     */
    public static final int COOLDOWN_PET_BORNING_SLOT_ONE_VALUE = 10;
    /**
     * <code>COOLDOWN_PET__SLOT_TWO = 11;</code>
     *
     * <pre>
     * 宠物蛋孵化槽位2
     * </pre>
     */
    public static final int COOLDOWN_PET__SLOT_TWO_VALUE = 11;
    /**
     * <code>COOLDOWN_PET__SLOT_THREE = 12;</code>
     *
     * <pre>
     * 宠物蛋孵化槽位3
     * </pre>
     */
    public static final int COOLDOWN_PET__SLOT_THREE_VALUE = 12;


    public final int getNumber() { return value; }

    public static CooldownType valueOf(int value) {
      switch (value) {
        case 1: return COOLDOWN_ENHANCE_EQUIP;
        case 2: return COOLDOWN_UPGRADE_SKILL;
        case 3: return COOLDOWN_OPENCHEST_COPPER;
        case 4: return COOLDOWN_OPENCHEST_SILVER;
        case 5: return COOLDOWN_OPENCHEST_GOLD;
        case 6: return COOLDOWN_SWEEP_DUNGEON;
        case 7: return COOLDOWN_KUNGFU;
        case 8: return COOLDOWN_VIP_EXPERENCED_LV;
        case 9: return COOLDOWN_MONTH_CARD;
        case 10: return COOLDOWN_PET_BORNING_SLOT_ONE;
        case 11: return COOLDOWN_PET__SLOT_TWO;
        case 12: return COOLDOWN_PET__SLOT_THREE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CooldownType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CooldownType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CooldownType>() {
            public CooldownType findValueByNumber(int number) {
              return CooldownType.valueOf(number);
            }
          };

    private final int value;

    private CooldownType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.CooldownType)
  }

  /**
   * Protobuf enum {@code sanguo.RoleEquipPlace}
   *
   * <pre>
   *人物装备位置
   * </pre>
   */
  public enum RoleEquipPlace
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>WEAPON = 1;</code>
     *
     * <pre>
     *武器
     * </pre>
     */
    WEAPON(0, 1),
    /**
     * <code>HELMET = 2;</code>
     *
     * <pre>
     *头盔
     * </pre>
     */
    HELMET(1, 2),
    /**
     * <code>ARMOR = 3;</code>
     *
     * <pre>
     *胸甲
     * </pre>
     */
    ARMOR(2, 3),
    /**
     * <code>PANTS = 4;</code>
     *
     * <pre>
     *裤子
     * </pre>
     */
    PANTS(3, 4),
    /**
     * <code>JEWULRY1 = 5;</code>
     *
     * <pre>
     *饰品1
     * </pre>
     */
    JEWULRY1(4, 5),
    /**
     * <code>JEWULRY2 = 6;</code>
     *
     * <pre>
     *饰品2
     * </pre>
     */
    JEWULRY2(5, 6),
    ;

    /**
     * <code>WEAPON = 1;</code>
     *
     * <pre>
     *武器
     * </pre>
     */
    public static final int WEAPON_VALUE = 1;
    /**
     * <code>HELMET = 2;</code>
     *
     * <pre>
     *头盔
     * </pre>
     */
    public static final int HELMET_VALUE = 2;
    /**
     * <code>ARMOR = 3;</code>
     *
     * <pre>
     *胸甲
     * </pre>
     */
    public static final int ARMOR_VALUE = 3;
    /**
     * <code>PANTS = 4;</code>
     *
     * <pre>
     *裤子
     * </pre>
     */
    public static final int PANTS_VALUE = 4;
    /**
     * <code>JEWULRY1 = 5;</code>
     *
     * <pre>
     *饰品1
     * </pre>
     */
    public static final int JEWULRY1_VALUE = 5;
    /**
     * <code>JEWULRY2 = 6;</code>
     *
     * <pre>
     *饰品2
     * </pre>
     */
    public static final int JEWULRY2_VALUE = 6;


    public final int getNumber() { return value; }

    public static RoleEquipPlace valueOf(int value) {
      switch (value) {
        case 1: return WEAPON;
        case 2: return HELMET;
        case 3: return ARMOR;
        case 4: return PANTS;
        case 5: return JEWULRY1;
        case 6: return JEWULRY2;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoleEquipPlace>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RoleEquipPlace>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoleEquipPlace>() {
            public RoleEquipPlace findValueByNumber(int number) {
              return RoleEquipPlace.valueOf(number);
            }
          };

    private final int value;

    private RoleEquipPlace(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.RoleEquipPlace)
  }

  /**
   * Protobuf enum {@code sanguo.KungfuConstans}
   *
   * <pre>
   * 武学常量
   * </pre>
   */
  public enum KungfuConstans
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>MAX_STAR = 5;</code>
     *
     * <pre>
     * 5星满级
     * </pre>
     */
    MAX_STAR(0, 5),
    /**
     * <code>MAX_LEVEL = 70;</code>
     *
     * <pre>
     * 最大等级70
     * </pre>
     */
    MAX_LEVEL(1, 70),
    ;

    /**
     * <code>MAX_STAR = 5;</code>
     *
     * <pre>
     * 5星满级
     * </pre>
     */
    public static final int MAX_STAR_VALUE = 5;
    /**
     * <code>MAX_LEVEL = 70;</code>
     *
     * <pre>
     * 最大等级70
     * </pre>
     */
    public static final int MAX_LEVEL_VALUE = 70;


    public final int getNumber() { return value; }

    public static KungfuConstans valueOf(int value) {
      switch (value) {
        case 5: return MAX_STAR;
        case 70: return MAX_LEVEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KungfuConstans>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<KungfuConstans>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KungfuConstans>() {
            public KungfuConstans findValueByNumber(int number) {
              return KungfuConstans.valueOf(number);
            }
          };

    private final int value;

    private KungfuConstans(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.KungfuConstans)
  }

  /**
   * Protobuf enum {@code sanguo.GemType}
   *
   * <pre>
   *宝石的类型
   * </pre>
   */
  public enum GemType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>GEM_HP = 1;</code>
     *
     * <pre>
     *生命宝石
     * </pre>
     */
    GEM_HP(0, 1),
    /**
     * <code>GEM_PHYSICALATK = 2;</code>
     *
     * <pre>
     *物理攻击宝石
     * </pre>
     */
    GEM_PHYSICALATK(1, 2),
    /**
     * <code>GEM_PHYSICALDEF = 3;</code>
     *
     * <pre>
     *物理防御宝石
     * </pre>
     */
    GEM_PHYSICALDEF(2, 3),
    /**
     * <code>GEM_SKILLATK = 4;</code>
     *
     * <pre>
     *技能攻击宝石
     * </pre>
     */
    GEM_SKILLATK(3, 4),
    /**
     * <code>GEM_SKILLDEF = 5;</code>
     *
     * <pre>
     *技能防御宝石
     * </pre>
     */
    GEM_SKILLDEF(4, 5),
    /**
     * <code>GEM_MAGICATK = 6;</code>
     *
     * <pre>
     *魔法攻击宝石
     * </pre>
     */
    GEM_MAGICATK(5, 6),
    /**
     * <code>GEM_MAGICDEF = 7;</code>
     *
     * <pre>
     *魔法防御宝石
     * </pre>
     */
    GEM_MAGICDEF(6, 7),
    ;

    /**
     * <code>GEM_HP = 1;</code>
     *
     * <pre>
     *生命宝石
     * </pre>
     */
    public static final int GEM_HP_VALUE = 1;
    /**
     * <code>GEM_PHYSICALATK = 2;</code>
     *
     * <pre>
     *物理攻击宝石
     * </pre>
     */
    public static final int GEM_PHYSICALATK_VALUE = 2;
    /**
     * <code>GEM_PHYSICALDEF = 3;</code>
     *
     * <pre>
     *物理防御宝石
     * </pre>
     */
    public static final int GEM_PHYSICALDEF_VALUE = 3;
    /**
     * <code>GEM_SKILLATK = 4;</code>
     *
     * <pre>
     *技能攻击宝石
     * </pre>
     */
    public static final int GEM_SKILLATK_VALUE = 4;
    /**
     * <code>GEM_SKILLDEF = 5;</code>
     *
     * <pre>
     *技能防御宝石
     * </pre>
     */
    public static final int GEM_SKILLDEF_VALUE = 5;
    /**
     * <code>GEM_MAGICATK = 6;</code>
     *
     * <pre>
     *魔法攻击宝石
     * </pre>
     */
    public static final int GEM_MAGICATK_VALUE = 6;
    /**
     * <code>GEM_MAGICDEF = 7;</code>
     *
     * <pre>
     *魔法防御宝石
     * </pre>
     */
    public static final int GEM_MAGICDEF_VALUE = 7;


    public final int getNumber() { return value; }

    public static GemType valueOf(int value) {
      switch (value) {
        case 1: return GEM_HP;
        case 2: return GEM_PHYSICALATK;
        case 3: return GEM_PHYSICALDEF;
        case 4: return GEM_SKILLATK;
        case 5: return GEM_SKILLDEF;
        case 6: return GEM_MAGICATK;
        case 7: return GEM_MAGICDEF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GemType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GemType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GemType>() {
            public GemType findValueByNumber(int number) {
              return GemType.valueOf(number);
            }
          };

    private final int value;

    private GemType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.GemType)
  }

  /**
   * Protobuf enum {@code sanguo.PropertyType}
   *
   * <pre>
   * 角色13个属性的ID
   * </pre>
   */
  public enum PropertyType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>HP = 1;</code>
     *
     * <pre>
     *生命
     * </pre>
     */
    HP(0, 1),
    /**
     * <code>PHYSICALATK = 2;</code>
     *
     * <pre>
     *物理攻击
     * </pre>
     */
    PHYSICALATK(1, 2),
    /**
     * <code>PHYSICALDEF = 3;</code>
     *
     * <pre>
     *物理防御
     * </pre>
     */
    PHYSICALDEF(2, 3),
    /**
     * <code>SKILLATK = 4;</code>
     *
     * <pre>
     *技能攻击
     * </pre>
     */
    SKILLATK(3, 4),
    /**
     * <code>SKILLDEF = 5;</code>
     *
     * <pre>
     *技能防御
     * </pre>
     */
    SKILLDEF(4, 5),
    /**
     * <code>MAGICATK = 6;</code>
     *
     * <pre>
     *魔法攻击
     * </pre>
     */
    MAGICATK(5, 6),
    /**
     * <code>MAGICDEF = 7;</code>
     *
     * <pre>
     *魔法防御
     * </pre>
     */
    MAGICDEF(6, 7),
    /**
     * <code>CRITICAL = 8;</code>
     *
     * <pre>
     *暴击
     * </pre>
     */
    CRITICAL(7, 8),
    /**
     * <code>TOUGHNESS = 9;</code>
     *
     * <pre>
     *韧性
     * </pre>
     */
    TOUGHNESS(8, 9),
    /**
     * <code>DODGE = 10;</code>
     *
     * <pre>
     *闪避
     * </pre>
     */
    DODGE(9, 10),
    /**
     * <code>HIT = 11;</code>
     *
     * <pre>
     *命中
     * </pre>
     */
    HIT(10, 11),
    /**
     * <code>BLOCK = 12;</code>
     *
     * <pre>
     *格挡
     * </pre>
     */
    BLOCK(11, 12),
    /**
     * <code>SUNDER = 13;</code>
     *
     * <pre>
     *破击
     * </pre>
     */
    SUNDER(12, 13),
    ;

    /**
     * <code>HP = 1;</code>
     *
     * <pre>
     *生命
     * </pre>
     */
    public static final int HP_VALUE = 1;
    /**
     * <code>PHYSICALATK = 2;</code>
     *
     * <pre>
     *物理攻击
     * </pre>
     */
    public static final int PHYSICALATK_VALUE = 2;
    /**
     * <code>PHYSICALDEF = 3;</code>
     *
     * <pre>
     *物理防御
     * </pre>
     */
    public static final int PHYSICALDEF_VALUE = 3;
    /**
     * <code>SKILLATK = 4;</code>
     *
     * <pre>
     *技能攻击
     * </pre>
     */
    public static final int SKILLATK_VALUE = 4;
    /**
     * <code>SKILLDEF = 5;</code>
     *
     * <pre>
     *技能防御
     * </pre>
     */
    public static final int SKILLDEF_VALUE = 5;
    /**
     * <code>MAGICATK = 6;</code>
     *
     * <pre>
     *魔法攻击
     * </pre>
     */
    public static final int MAGICATK_VALUE = 6;
    /**
     * <code>MAGICDEF = 7;</code>
     *
     * <pre>
     *魔法防御
     * </pre>
     */
    public static final int MAGICDEF_VALUE = 7;
    /**
     * <code>CRITICAL = 8;</code>
     *
     * <pre>
     *暴击
     * </pre>
     */
    public static final int CRITICAL_VALUE = 8;
    /**
     * <code>TOUGHNESS = 9;</code>
     *
     * <pre>
     *韧性
     * </pre>
     */
    public static final int TOUGHNESS_VALUE = 9;
    /**
     * <code>DODGE = 10;</code>
     *
     * <pre>
     *闪避
     * </pre>
     */
    public static final int DODGE_VALUE = 10;
    /**
     * <code>HIT = 11;</code>
     *
     * <pre>
     *命中
     * </pre>
     */
    public static final int HIT_VALUE = 11;
    /**
     * <code>BLOCK = 12;</code>
     *
     * <pre>
     *格挡
     * </pre>
     */
    public static final int BLOCK_VALUE = 12;
    /**
     * <code>SUNDER = 13;</code>
     *
     * <pre>
     *破击
     * </pre>
     */
    public static final int SUNDER_VALUE = 13;


    public final int getNumber() { return value; }

    public static PropertyType valueOf(int value) {
      switch (value) {
        case 1: return HP;
        case 2: return PHYSICALATK;
        case 3: return PHYSICALDEF;
        case 4: return SKILLATK;
        case 5: return SKILLDEF;
        case 6: return MAGICATK;
        case 7: return MAGICDEF;
        case 8: return CRITICAL;
        case 9: return TOUGHNESS;
        case 10: return DODGE;
        case 11: return HIT;
        case 12: return BLOCK;
        case 13: return SUNDER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PropertyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PropertyType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PropertyType>() {
            public PropertyType findValueByNumber(int number) {
              return PropertyType.valueOf(number);
            }
          };

    private final int value;

    private PropertyType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.PropertyType)
  }

  /**
   * Protobuf enum {@code sanguo.EquipmentQuality}
   *
   * <pre>
   *卦象的品质
   * </pre>
   */
  public enum EquipmentQuality
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>EQUIPMENT_GREEN = 1;</code>
     *
     * <pre>
     *绿色卦象
     * </pre>
     */
    EQUIPMENT_GREEN(0, 1),
    /**
     * <code>EQUIPMENT_BLUE = 2;</code>
     *
     * <pre>
     *蓝色卦象
     * </pre>
     */
    EQUIPMENT_BLUE(1, 2),
    /**
     * <code>EQUIPMENT_PURPLE = 3;</code>
     *
     * <pre>
     *紫色卦象
     * </pre>
     */
    EQUIPMENT_PURPLE(2, 3),
    /**
     * <code>EQUIPMENT_ORANGE = 4;</code>
     *
     * <pre>
     *橙色卦象
     * </pre>
     */
    EQUIPMENT_ORANGE(3, 4),
    /**
     * <code>EQUIPMENT_RED = 5;</code>
     *
     * <pre>
     *红色卦象
     * </pre>
     */
    EQUIPMENT_RED(4, 5),
    ;

    /**
     * <code>EQUIPMENT_GREEN = 1;</code>
     *
     * <pre>
     *绿色卦象
     * </pre>
     */
    public static final int EQUIPMENT_GREEN_VALUE = 1;
    /**
     * <code>EQUIPMENT_BLUE = 2;</code>
     *
     * <pre>
     *蓝色卦象
     * </pre>
     */
    public static final int EQUIPMENT_BLUE_VALUE = 2;
    /**
     * <code>EQUIPMENT_PURPLE = 3;</code>
     *
     * <pre>
     *紫色卦象
     * </pre>
     */
    public static final int EQUIPMENT_PURPLE_VALUE = 3;
    /**
     * <code>EQUIPMENT_ORANGE = 4;</code>
     *
     * <pre>
     *橙色卦象
     * </pre>
     */
    public static final int EQUIPMENT_ORANGE_VALUE = 4;
    /**
     * <code>EQUIPMENT_RED = 5;</code>
     *
     * <pre>
     *红色卦象
     * </pre>
     */
    public static final int EQUIPMENT_RED_VALUE = 5;


    public final int getNumber() { return value; }

    public static EquipmentQuality valueOf(int value) {
      switch (value) {
        case 1: return EQUIPMENT_GREEN;
        case 2: return EQUIPMENT_BLUE;
        case 3: return EQUIPMENT_PURPLE;
        case 4: return EQUIPMENT_ORANGE;
        case 5: return EQUIPMENT_RED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EquipmentQuality>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EquipmentQuality>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EquipmentQuality>() {
            public EquipmentQuality findValueByNumber(int number) {
              return EquipmentQuality.valueOf(number);
            }
          };

    private final int value;

    private EquipmentQuality(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.EquipmentQuality)
  }

  /**
   * Protobuf enum {@code sanguo.GuaxiangQuality}
   *
   * <pre>
   *卦象的品质
   * </pre>
   */
  public enum GuaxiangQuality
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>GUAXIANG_GREEN = 1;</code>
     *
     * <pre>
     *绿色卦象
     * </pre>
     */
    GUAXIANG_GREEN(0, 1),
    /**
     * <code>GUAXIANG_BLUE = 2;</code>
     *
     * <pre>
     *蓝色卦象
     * </pre>
     */
    GUAXIANG_BLUE(1, 2),
    /**
     * <code>GUAXIANG_PURPLE = 3;</code>
     *
     * <pre>
     *紫色卦象
     * </pre>
     */
    GUAXIANG_PURPLE(2, 3),
    /**
     * <code>GUAXIANG_ORANGE = 4;</code>
     *
     * <pre>
     *橙色卦象
     * </pre>
     */
    GUAXIANG_ORANGE(3, 4),
    /**
     * <code>GUAXIANG_RED = 5;</code>
     *
     * <pre>
     *红色卦象
     * </pre>
     */
    GUAXIANG_RED(4, 5),
    /**
     * <code>GUAXIANG_GRAY = 11;</code>
     *
     * <pre>
     *灰色卦象
     * </pre>
     */
    GUAXIANG_GRAY(5, 11),
    /**
     * <code>GUAXIANG_YIN_YANG_YU = 12;</code>
     *
     * <pre>
     *阴阳鱼卦象
     * </pre>
     */
    GUAXIANG_YIN_YANG_YU(6, 12),
    ;

    /**
     * <code>GUAXIANG_GREEN = 1;</code>
     *
     * <pre>
     *绿色卦象
     * </pre>
     */
    public static final int GUAXIANG_GREEN_VALUE = 1;
    /**
     * <code>GUAXIANG_BLUE = 2;</code>
     *
     * <pre>
     *蓝色卦象
     * </pre>
     */
    public static final int GUAXIANG_BLUE_VALUE = 2;
    /**
     * <code>GUAXIANG_PURPLE = 3;</code>
     *
     * <pre>
     *紫色卦象
     * </pre>
     */
    public static final int GUAXIANG_PURPLE_VALUE = 3;
    /**
     * <code>GUAXIANG_ORANGE = 4;</code>
     *
     * <pre>
     *橙色卦象
     * </pre>
     */
    public static final int GUAXIANG_ORANGE_VALUE = 4;
    /**
     * <code>GUAXIANG_RED = 5;</code>
     *
     * <pre>
     *红色卦象
     * </pre>
     */
    public static final int GUAXIANG_RED_VALUE = 5;
    /**
     * <code>GUAXIANG_GRAY = 11;</code>
     *
     * <pre>
     *灰色卦象
     * </pre>
     */
    public static final int GUAXIANG_GRAY_VALUE = 11;
    /**
     * <code>GUAXIANG_YIN_YANG_YU = 12;</code>
     *
     * <pre>
     *阴阳鱼卦象
     * </pre>
     */
    public static final int GUAXIANG_YIN_YANG_YU_VALUE = 12;


    public final int getNumber() { return value; }

    public static GuaxiangQuality valueOf(int value) {
      switch (value) {
        case 1: return GUAXIANG_GREEN;
        case 2: return GUAXIANG_BLUE;
        case 3: return GUAXIANG_PURPLE;
        case 4: return GUAXIANG_ORANGE;
        case 5: return GUAXIANG_RED;
        case 11: return GUAXIANG_GRAY;
        case 12: return GUAXIANG_YIN_YANG_YU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GuaxiangQuality>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GuaxiangQuality>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GuaxiangQuality>() {
            public GuaxiangQuality findValueByNumber(int number) {
              return GuaxiangQuality.valueOf(number);
            }
          };

    private final int value;

    private GuaxiangQuality(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.GuaxiangQuality)
  }

  /**
   * Protobuf enum {@code sanguo.DiceRewordType}
   *
   * <pre>
   *摇骰子奖励的type 1翻倍 2铜钱 3荣誉 4元宝 5:1级宝石 6技能残卷
   * </pre>
   */
  public enum DiceRewordType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>REWORD_TWICE = 1;</code>
     */
    REWORD_TWICE(0, 1),
    /**
     * <code>REWORD_COPPER = 2;</code>
     */
    REWORD_COPPER(1, 2),
    /**
     * <code>REWORD_HONOR = 3;</code>
     */
    REWORD_HONOR(2, 3),
    /**
     * <code>REWORD_GOLD = 4;</code>
     */
    REWORD_GOLD(3, 4),
    /**
     * <code>REWORD_GEM = 5;</code>
     */
    REWORD_GEM(4, 5),
    /**
     * <code>REWORD_SKILLBOOKFRAGMENT = 6;</code>
     */
    REWORD_SKILLBOOKFRAGMENT(5, 6),
    /**
     * <code>REWORD_POWER = 7;</code>
     */
    REWORD_POWER(6, 7),
    /**
     * <code>REWORD_GUNGFU = 8;</code>
     */
    REWORD_GUNGFU(7, 8),
    ;

    /**
     * <code>REWORD_TWICE = 1;</code>
     */
    public static final int REWORD_TWICE_VALUE = 1;
    /**
     * <code>REWORD_COPPER = 2;</code>
     */
    public static final int REWORD_COPPER_VALUE = 2;
    /**
     * <code>REWORD_HONOR = 3;</code>
     */
    public static final int REWORD_HONOR_VALUE = 3;
    /**
     * <code>REWORD_GOLD = 4;</code>
     */
    public static final int REWORD_GOLD_VALUE = 4;
    /**
     * <code>REWORD_GEM = 5;</code>
     */
    public static final int REWORD_GEM_VALUE = 5;
    /**
     * <code>REWORD_SKILLBOOKFRAGMENT = 6;</code>
     */
    public static final int REWORD_SKILLBOOKFRAGMENT_VALUE = 6;
    /**
     * <code>REWORD_POWER = 7;</code>
     */
    public static final int REWORD_POWER_VALUE = 7;
    /**
     * <code>REWORD_GUNGFU = 8;</code>
     */
    public static final int REWORD_GUNGFU_VALUE = 8;


    public final int getNumber() { return value; }

    public static DiceRewordType valueOf(int value) {
      switch (value) {
        case 1: return REWORD_TWICE;
        case 2: return REWORD_COPPER;
        case 3: return REWORD_HONOR;
        case 4: return REWORD_GOLD;
        case 5: return REWORD_GEM;
        case 6: return REWORD_SKILLBOOKFRAGMENT;
        case 7: return REWORD_POWER;
        case 8: return REWORD_GUNGFU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DiceRewordType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DiceRewordType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DiceRewordType>() {
            public DiceRewordType findValueByNumber(int number) {
              return DiceRewordType.valueOf(number);
            }
          };

    private final int value;

    private DiceRewordType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.DiceRewordType)
  }

  /**
   * Protobuf enum {@code sanguo.ChestType}
   *
   * <pre>
   *宝箱类别 1铜 2银 3金
   * </pre>
   */
  public enum ChestType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CHEST_COPPER = 1;</code>
     */
    CHEST_COPPER(0, 1),
    /**
     * <code>CHEST_SILVER = 2;</code>
     */
    CHEST_SILVER(1, 2),
    /**
     * <code>CHEST_GOLD = 3;</code>
     */
    CHEST_GOLD(2, 3),
    ;

    /**
     * <code>CHEST_COPPER = 1;</code>
     */
    public static final int CHEST_COPPER_VALUE = 1;
    /**
     * <code>CHEST_SILVER = 2;</code>
     */
    public static final int CHEST_SILVER_VALUE = 2;
    /**
     * <code>CHEST_GOLD = 3;</code>
     */
    public static final int CHEST_GOLD_VALUE = 3;


    public final int getNumber() { return value; }

    public static ChestType valueOf(int value) {
      switch (value) {
        case 1: return CHEST_COPPER;
        case 2: return CHEST_SILVER;
        case 3: return CHEST_GOLD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChestType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChestType>() {
            public ChestType findValueByNumber(int number) {
              return ChestType.valueOf(number);
            }
          };

    private final int value;

    private ChestType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.ChestType)
  }

  /**
   * Protobuf enum {@code sanguo.MissionType}
   *
   * <pre>
   *任务的大类型 1普通任务 2日常任务 3义军任务
   * </pre>
   */
  public enum MissionType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>NORMAL_MISSION = 1;</code>
     */
    NORMAL_MISSION(0, 1),
    /**
     * <code>DAILY_MISSION = 2;</code>
     */
    DAILY_MISSION(1, 2),
    /**
     * <code>YIJUN_MISSION = 3;</code>
     */
    YIJUN_MISSION(2, 3),
    ;

    /**
     * <code>NORMAL_MISSION = 1;</code>
     */
    public static final int NORMAL_MISSION_VALUE = 1;
    /**
     * <code>DAILY_MISSION = 2;</code>
     */
    public static final int DAILY_MISSION_VALUE = 2;
    /**
     * <code>YIJUN_MISSION = 3;</code>
     */
    public static final int YIJUN_MISSION_VALUE = 3;


    public final int getNumber() { return value; }

    public static MissionType valueOf(int value) {
      switch (value) {
        case 1: return NORMAL_MISSION;
        case 2: return DAILY_MISSION;
        case 3: return YIJUN_MISSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MissionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MissionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MissionType>() {
            public MissionType findValueByNumber(int number) {
              return MissionType.valueOf(number);
            }
          };

    private final int value;

    private MissionType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.MissionType)
  }

  /**
   * Protobuf enum {@code sanguo.NormalMissionType}
   *
   * <pre>
   *普通任务的细分类型
   * </pre>
   */
  public enum NormalMissionType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>NORMAL_MISSION_TRUNK = 1;</code>
     */
    NORMAL_MISSION_TRUNK(0, 1),
    /**
     * <code>NORMAL_MISSION_BRANCH = 2;</code>
     */
    NORMAL_MISSION_BRANCH(1, 2),
    ;

    /**
     * <code>NORMAL_MISSION_TRUNK = 1;</code>
     */
    public static final int NORMAL_MISSION_TRUNK_VALUE = 1;
    /**
     * <code>NORMAL_MISSION_BRANCH = 2;</code>
     */
    public static final int NORMAL_MISSION_BRANCH_VALUE = 2;


    public final int getNumber() { return value; }

    public static NormalMissionType valueOf(int value) {
      switch (value) {
        case 1: return NORMAL_MISSION_TRUNK;
        case 2: return NORMAL_MISSION_BRANCH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NormalMissionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NormalMissionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NormalMissionType>() {
            public NormalMissionType findValueByNumber(int number) {
              return NormalMissionType.valueOf(number);
            }
          };

    private final int value;

    private NormalMissionType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.NormalMissionType)
  }

  /**
   * Protobuf enum {@code sanguo.MissionFinishType}
   *
   * <pre>
   *任务完成条件类型
   * </pre>
   */
  public enum MissionFinishType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>MISSION_FINISH_CERTEN_STAGE = 1;</code>
     *
     * <pre>
     *1 通关指定副本N次
     * </pre>
     */
    MISSION_FINISH_CERTEN_STAGE(0, 1),
    /**
     * <code>MISSION_ONE_KEY_UPDETE_KONGFU = 2;</code>
     *
     * <pre>
     *2 使用一键卸载功能重新装备某个套路（重新装备的套路中装备的武学只要装备了一个就算任务完成）
     * </pre>
     */
    MISSION_ONE_KEY_UPDETE_KONGFU(1, 2),
    /**
     * <code>MISSION_KILL_ENEMY_ON_CERTEN_STAGE = 3;</code>
     *
     * <pre>
     *3 杀死指定副本中的指定怪N只
     * </pre>
     */
    MISSION_KILL_ENEMY_ON_CERTEN_STAGE(2, 3),
    /**
     * <code>MISSION_VIP_LEVEL_TO_CERTAIN_LEVEL = 4;</code>
     *
     * <pre>
     *4 vip达到特定的等级
     * </pre>
     */
    MISSION_VIP_LEVEL_TO_CERTAIN_LEVEL(3, 4),
    /**
     * <code>MISSION_FINISH_CERTEN_STAGE_FULL_STAR = 5;</code>
     *
     * <pre>
     *5 满星通关指定副本
     * </pre>
     */
    MISSION_FINISH_CERTEN_STAGE_FULL_STAR(4, 5),
    /**
     * <code>MISSION_USE_GOLD = 6;</code>
     *
     * <pre>
     *6 消费元宝n次
     * </pre>
     */
    MISSION_USE_GOLD(5, 6),
    /**
     * <code>MISSION_COMPOSE_GEM = 7;</code>
     *
     * <pre>
     *7 宝石合成n次
     * </pre>
     */
    MISSION_COMPOSE_GEM(6, 7),
    /**
     * <code>MISSION_EAT_EQUIP = 8;</code>
     *
     * <pre>
     *8 装备吞噬n次
     * </pre>
     */
    MISSION_EAT_EQUIP(7, 8),
    /**
     * <code>MISSION_KUNGFU_LEVEL_UP = 9;</code>
     *
     * <pre>
     *9 主动技能升级n次
     * </pre>
     */
    MISSION_KUNGFU_LEVEL_UP(8, 9),
    /**
     * <code>MISSION_PASSIVE_SKILL_LEVELUP = 10;</code>
     *
     * <pre>
     *10 被动技能升级n次
     * </pre>
     */
    MISSION_PASSIVE_SKILL_LEVELUP(9, 10),
    /**
     * <code>MISSION_FIGHT_ON_ARENA = 11;</code>
     *
     * <pre>
     *11 挑战竞技场n次
     * </pre>
     */
    MISSION_FIGHT_ON_ARENA(10, 11),
    /**
     * <code>MISSION_SHAKE_MONEY_TREE = 12;</code>
     *
     * <pre>
     *12 摇钱树n次
     * </pre>
     */
    MISSION_SHAKE_MONEY_TREE(11, 12),
    /**
     * <code>MISSION_DIVING = 13;</code>
     *
     * <pre>
     *13 占卜n次
     * </pre>
     */
    MISSION_DIVING(12, 13),
    /**
     * <code>MISSION_DONATE_FOR_YIJUN = 14;</code>
     *
     * <pre>
     *14 工会捐献n次
     * </pre>
     */
    MISSION_DONATE_FOR_YIJUN(13, 14),
    /**
     * <code>MISSION_PRAY_FOR_YIJUN = 15;</code>
     *
     * <pre>
     *15 工会祈福n次
     * </pre>
     */
    MISSION_PRAY_FOR_YIJUN(14, 15),
    /**
     * <code>MISSION_GAMBLE_EQUIPMENT = 16;</code>
     *
     * <pre>
     *16 装备抽奖
     * </pre>
     */
    MISSION_GAMBLE_EQUIPMENT(15, 16),
    /**
     * <code>MISSION_TALK_WITH_NPC = 17;</code>
     *
     * <pre>
     *17 npc对话
     * </pre>
     */
    MISSION_TALK_WITH_NPC(16, 17),
    /**
     * <code>MISSION_FULL_STAR_ON_STAGE_WORLD_MAP = 18;</code>
     *
     * <pre>
     *18 副本大地图满星奖励
     * </pre>
     */
    MISSION_FULL_STAR_ON_STAGE_WORLD_MAP(17, 18),
    /**
     * <code>MISSION_EQUIP_EQUIPMENT = 19;</code>
     *
     * <pre>
     *19. 穿上装备。
     * </pre>
     */
    MISSION_EQUIP_EQUIPMENT(18, 19),
    /**
     * <code>MISSION_EQUIP_GEM = 20;</code>
     *
     * <pre>
     *20. 镶嵌宝石。
     * </pre>
     */
    MISSION_EQUIP_GEM(19, 20),
    /**
     * <code>MISSION_EQUIP_GUAXIANG = 21;</code>
     *
     * <pre>
     *21. 装备卦象。
     * </pre>
     */
    MISSION_EQUIP_GUAXIANG(20, 21),
    /**
     * <code>MISSION_OPEN_YIJUN_SCEEN = 22;</code>
     *
     * <pre>
     *22. 浏览义军界面。
     * </pre>
     */
    MISSION_OPEN_YIJUN_SCEEN(21, 22),
    /**
     * <code>MISSION_ACCEPT_DAILY_MISSION = 23;</code>
     *
     * <pre>
     *23. 接受日常任务
     * </pre>
     */
    MISSION_ACCEPT_DAILY_MISSION(22, 23),
    /**
     * <code>MISSION_HAVE_NUM_JADE = 24;</code>
     *
     * <pre>
     *24 拥有玉石n
     * </pre>
     */
    MISSION_HAVE_NUM_JADE(23, 24),
    /**
     * <code>MISSION_KILL_BOSS_ON_STAGE = 25;</code>
     *
     * <pre>
     *25.杀死任意BOSS N只。 （日常）（任意BOSS即不论哪一个副本中的哪一个BOSS都算完成任务）
     * </pre>
     */
    MISSION_KILL_BOSS_ON_STAGE(24, 25),
    /**
     * <code>MISSION_KILL_CERTAIN_TYPE_ENEMY = 26;</code>
     *
     * <pre>
     *26.杀死指定类型的怪N只（日常，暂定，看程序制作难度决定是否使用此类型）
     * </pre>
     */
    MISSION_KILL_CERTAIN_TYPE_ENEMY(25, 26),
    /**
     * <code>MISSION_ACCEPT_NORMAL_BRANCH_MISSION = 27;</code>
     *
     * <pre>
     *（注：指定类型是指，例如任务要求杀死刀兵N只，那么所有属于刀兵的小怪，不管这个怪是曹军刀兵，袁军刀兵还是西凉刀兵，都算作刀兵这一类型，任务都算完成。）
     * </pre>
     */
    MISSION_ACCEPT_NORMAL_BRANCH_MISSION(26, 27),
    /**
     * <code>MISSION_UPGRADE_EQUIPMENT_TO_CERTAIN_LEVEL = 28;</code>
     *
     * <pre>
     *28 升级装备（可以是特定的装备attrId或者某一件装备attrId = -1）达到n级
     * </pre>
     */
    MISSION_UPGRADE_EQUIPMENT_TO_CERTAIN_LEVEL(27, 28),
    /**
     * <code>MISSION_UPGRADE_KONGFU_TO_CERTAIN_LEVEL = 29;</code>
     *
     * <pre>
     *29 升级武学（可以是特定的技能attrId或者某一技能attrId = -1）达到n级
     * </pre>
     */
    MISSION_UPGRADE_KONGFU_TO_CERTAIN_LEVEL(28, 29),
    /**
     * <code>MISSION_HAVE_NUM_CERTAIN_LEVEL_KONGFU = 30;</code>
     *
     * <pre>
     *30 拥有n个m级武学  m = -1表示任意级别，m &gt; 0表示升级到m级别，这里的n代表武学的个数，比如
     * </pre>
     */
    MISSION_HAVE_NUM_CERTAIN_LEVEL_KONGFU(29, 30),
    /**
     * <code>MISSION_HAVE_NUM_DIFFER_CERTAIN_LEVEL_KONGFU = 31;</code>
     *
     * <pre>
     *这种武学可以拥有4个，那么这个n可以记录为4等待
     * </pre>
     */
    MISSION_HAVE_NUM_DIFFER_CERTAIN_LEVEL_KONGFU(30, 31),
    /**
     * <code>MISSION_CERTAIN_TAOLU_HAVE_NUM_KONGFU = 32;</code>
     *
     * <pre>
     *32 某一个（或者特定的）套路中拥有n个武学
     * </pre>
     */
    MISSION_CERTAIN_TAOLU_HAVE_NUM_KONGFU(31, 32),
    /**
     * <code>MISSION_EQUIP_NUM_KONGFU_TO_CERTAIN_KONGFU_SLOT = 33;</code>
     *
     * <pre>
     *33 装备n个武学到武学槽(attrId &gt;0 指定， attrId = -1任意)中
     * </pre>
     */
    MISSION_EQUIP_NUM_KONGFU_TO_CERTAIN_KONGFU_SLOT(32, 33),
    /**
     * <code>MISSION_REPLACE_NUM_KONGFU_FROM_KONGFU_SLOT = 34;</code>
     *
     * <pre>
     *34 将n个武学与已经被装备的武学替换
     * </pre>
     */
    MISSION_REPLACE_NUM_KONGFU_FROM_KONGFU_SLOT(33, 34),
    /**
     * <code>MISSION_EQUIP_FULL_GEM_ON_CERTAIN_GEM_SLOT = 35;</code>
     *
     * <pre>
     *35 将任意的装备槽镶嵌满宝石
     * </pre>
     */
    MISSION_EQUIP_FULL_GEM_ON_CERTAIN_GEM_SLOT(34, 35),
    /**
     * <code>MISSION_HAVE_NUM_CERTAIN_LEVEL_AND_CERTAIN_PRIORITY_GOODS = 36;</code>
     *
     * <pre>
     *36 拥有n个m级的某品质的物品（卦象，宝石，装备）
     * </pre>
     */
    MISSION_HAVE_NUM_CERTAIN_LEVEL_AND_CERTAIN_PRIORITY_GOODS(35, 36),
    /**
     * <code>MISSION_HAVE_NUM_CERTAIN_LEVEL_SKILL = 37;</code>
     *
     * <pre>
     *37 拥有n个m级的某种被动技能
     * </pre>
     */
    MISSION_HAVE_NUM_CERTAIN_LEVEL_SKILL(36, 37),
    /**
     * <code>MISSION_FINISH_NUM_DAILY_MISSION = 38;</code>
     *
     * <pre>
     *38 完成n次的日常任务
     * </pre>
     */
    MISSION_FINISH_NUM_DAILY_MISSION(37, 38),
    /**
     * <code>MISSION_JOIN_OR_SETUP_YIJUN = 39;</code>
     *
     * <pre>
     *39 创建或者加入某个义军
     * </pre>
     */
    MISSION_JOIN_OR_SETUP_YIJUN(38, 39),
    /**
     * <code>MISSION_HAVE_NUM_YIJUN_BUILDING = 40;</code>
     *
     * <pre>
     *40 开启义军建筑n个
     * </pre>
     */
    MISSION_HAVE_NUM_YIJUN_BUILDING(39, 40),
    /**
     * <code>MISSION_HAVE_NUM_YIJUN_SKILL = 41;</code>
     *
     * <pre>
     *41 开启义军技能n个
     * </pre>
     */
    MISSION_HAVE_NUM_YIJUN_SKILL(40, 41),
    /**
     * <code>MISSION_UPGRADE_YIJUN_SKILL_NUM_TIMES = 42;</code>
     *
     * <pre>
     *42 升级义军技能到达n级
     * </pre>
     */
    MISSION_UPGRADE_YIJUN_SKILL_NUM_TIMES(41, 42),
    /**
     * <code>MISSION_YIJUN_LEVEL_TO_CERTAIN_LEVEL = 43;</code>
     *
     * <pre>
     *43 升级义军达到n级
     * </pre>
     */
    MISSION_YIJUN_LEVEL_TO_CERTAIN_LEVEL(42, 43),
    /**
     * <code>MISSION_HAVE_CERTAIN_TAOLU = 44;</code>
     *
     * <pre>
     *44 开启指定的武学套路
     * </pre>
     */
    MISSION_HAVE_CERTAIN_TAOLU(43, 44),
    /**
     * <code>MISSION_COMPLETED_LIBRARY_TIMES = 45;</code>
     *
     * <pre>
     *45 通关藏经阁N次（战斗结束拿到奖励才计算次数）
     * </pre>
     */
    MISSION_COMPLETED_LIBRARY_TIMES(44, 45),
    /**
     * <code>MISSION_WORLDBOSS_FIGHT_TIMES = 46;</code>
     *
     * <pre>
     *46 参与世界BOSS战斗 N次（同一个世界BOSS开启时间段内进入战斗多次算作一次）
     * </pre>
     */
    MISSION_WORLDBOSS_FIGHT_TIMES(45, 46),
    /**
     * <code>MISSION_WORSHIP_TIMES = 47;</code>
     *
     * <pre>
     *47 膜拜雕像N次
     * </pre>
     */
    MISSION_WORSHIP_TIMES(46, 47),
    /**
     * <code>MISSION_CAPTURE_ATTACK_TIMES = 48;</code>
     *
     * <pre>
     *48 掠夺其他义军军饷N次
     * </pre>
     */
    MISSION_CAPTURE_ATTACK_TIMES(47, 48),
    /**
     * <code>MISSION_CAPTURE_DEFENCE_TIMES = 49;</code>
     *
     * <pre>
     *49 保卫自己义军N次（进入驱逐战斗算作一次）
     * </pre>
     */
    MISSION_CAPTURE_DEFENCE_TIMES(48, 49),
    /**
     * <code>MISSION_KUNGFU_STAR_LEVEL_UP_TIMES = 50;</code>
     *
     * <pre>
     *50 武学星级升级n次
     * </pre>
     */
    MISSION_KUNGFU_STAR_LEVEL_UP_TIMES(49, 50),
    /**
     * <code>MISSION_HAVE_NUM_DIFFER_CERTAIN_STARLEVEL_KONGFU = 51;</code>
     *
     * <pre>
     *51 拥有n个不同种类的m星级武学
     * </pre>
     */
    MISSION_HAVE_NUM_DIFFER_CERTAIN_STARLEVEL_KONGFU(50, 51),
    ;

    /**
     * <code>MISSION_FINISH_CERTEN_STAGE = 1;</code>
     *
     * <pre>
     *1 通关指定副本N次
     * </pre>
     */
    public static final int MISSION_FINISH_CERTEN_STAGE_VALUE = 1;
    /**
     * <code>MISSION_ONE_KEY_UPDETE_KONGFU = 2;</code>
     *
     * <pre>
     *2 使用一键卸载功能重新装备某个套路（重新装备的套路中装备的武学只要装备了一个就算任务完成）
     * </pre>
     */
    public static final int MISSION_ONE_KEY_UPDETE_KONGFU_VALUE = 2;
    /**
     * <code>MISSION_KILL_ENEMY_ON_CERTEN_STAGE = 3;</code>
     *
     * <pre>
     *3 杀死指定副本中的指定怪N只
     * </pre>
     */
    public static final int MISSION_KILL_ENEMY_ON_CERTEN_STAGE_VALUE = 3;
    /**
     * <code>MISSION_VIP_LEVEL_TO_CERTAIN_LEVEL = 4;</code>
     *
     * <pre>
     *4 vip达到特定的等级
     * </pre>
     */
    public static final int MISSION_VIP_LEVEL_TO_CERTAIN_LEVEL_VALUE = 4;
    /**
     * <code>MISSION_FINISH_CERTEN_STAGE_FULL_STAR = 5;</code>
     *
     * <pre>
     *5 满星通关指定副本
     * </pre>
     */
    public static final int MISSION_FINISH_CERTEN_STAGE_FULL_STAR_VALUE = 5;
    /**
     * <code>MISSION_USE_GOLD = 6;</code>
     *
     * <pre>
     *6 消费元宝n次
     * </pre>
     */
    public static final int MISSION_USE_GOLD_VALUE = 6;
    /**
     * <code>MISSION_COMPOSE_GEM = 7;</code>
     *
     * <pre>
     *7 宝石合成n次
     * </pre>
     */
    public static final int MISSION_COMPOSE_GEM_VALUE = 7;
    /**
     * <code>MISSION_EAT_EQUIP = 8;</code>
     *
     * <pre>
     *8 装备吞噬n次
     * </pre>
     */
    public static final int MISSION_EAT_EQUIP_VALUE = 8;
    /**
     * <code>MISSION_KUNGFU_LEVEL_UP = 9;</code>
     *
     * <pre>
     *9 主动技能升级n次
     * </pre>
     */
    public static final int MISSION_KUNGFU_LEVEL_UP_VALUE = 9;
    /**
     * <code>MISSION_PASSIVE_SKILL_LEVELUP = 10;</code>
     *
     * <pre>
     *10 被动技能升级n次
     * </pre>
     */
    public static final int MISSION_PASSIVE_SKILL_LEVELUP_VALUE = 10;
    /**
     * <code>MISSION_FIGHT_ON_ARENA = 11;</code>
     *
     * <pre>
     *11 挑战竞技场n次
     * </pre>
     */
    public static final int MISSION_FIGHT_ON_ARENA_VALUE = 11;
    /**
     * <code>MISSION_SHAKE_MONEY_TREE = 12;</code>
     *
     * <pre>
     *12 摇钱树n次
     * </pre>
     */
    public static final int MISSION_SHAKE_MONEY_TREE_VALUE = 12;
    /**
     * <code>MISSION_DIVING = 13;</code>
     *
     * <pre>
     *13 占卜n次
     * </pre>
     */
    public static final int MISSION_DIVING_VALUE = 13;
    /**
     * <code>MISSION_DONATE_FOR_YIJUN = 14;</code>
     *
     * <pre>
     *14 工会捐献n次
     * </pre>
     */
    public static final int MISSION_DONATE_FOR_YIJUN_VALUE = 14;
    /**
     * <code>MISSION_PRAY_FOR_YIJUN = 15;</code>
     *
     * <pre>
     *15 工会祈福n次
     * </pre>
     */
    public static final int MISSION_PRAY_FOR_YIJUN_VALUE = 15;
    /**
     * <code>MISSION_GAMBLE_EQUIPMENT = 16;</code>
     *
     * <pre>
     *16 装备抽奖
     * </pre>
     */
    public static final int MISSION_GAMBLE_EQUIPMENT_VALUE = 16;
    /**
     * <code>MISSION_TALK_WITH_NPC = 17;</code>
     *
     * <pre>
     *17 npc对话
     * </pre>
     */
    public static final int MISSION_TALK_WITH_NPC_VALUE = 17;
    /**
     * <code>MISSION_FULL_STAR_ON_STAGE_WORLD_MAP = 18;</code>
     *
     * <pre>
     *18 副本大地图满星奖励
     * </pre>
     */
    public static final int MISSION_FULL_STAR_ON_STAGE_WORLD_MAP_VALUE = 18;
    /**
     * <code>MISSION_EQUIP_EQUIPMENT = 19;</code>
     *
     * <pre>
     *19. 穿上装备。
     * </pre>
     */
    public static final int MISSION_EQUIP_EQUIPMENT_VALUE = 19;
    /**
     * <code>MISSION_EQUIP_GEM = 20;</code>
     *
     * <pre>
     *20. 镶嵌宝石。
     * </pre>
     */
    public static final int MISSION_EQUIP_GEM_VALUE = 20;
    /**
     * <code>MISSION_EQUIP_GUAXIANG = 21;</code>
     *
     * <pre>
     *21. 装备卦象。
     * </pre>
     */
    public static final int MISSION_EQUIP_GUAXIANG_VALUE = 21;
    /**
     * <code>MISSION_OPEN_YIJUN_SCEEN = 22;</code>
     *
     * <pre>
     *22. 浏览义军界面。
     * </pre>
     */
    public static final int MISSION_OPEN_YIJUN_SCEEN_VALUE = 22;
    /**
     * <code>MISSION_ACCEPT_DAILY_MISSION = 23;</code>
     *
     * <pre>
     *23. 接受日常任务
     * </pre>
     */
    public static final int MISSION_ACCEPT_DAILY_MISSION_VALUE = 23;
    /**
     * <code>MISSION_HAVE_NUM_JADE = 24;</code>
     *
     * <pre>
     *24 拥有玉石n
     * </pre>
     */
    public static final int MISSION_HAVE_NUM_JADE_VALUE = 24;
    /**
     * <code>MISSION_KILL_BOSS_ON_STAGE = 25;</code>
     *
     * <pre>
     *25.杀死任意BOSS N只。 （日常）（任意BOSS即不论哪一个副本中的哪一个BOSS都算完成任务）
     * </pre>
     */
    public static final int MISSION_KILL_BOSS_ON_STAGE_VALUE = 25;
    /**
     * <code>MISSION_KILL_CERTAIN_TYPE_ENEMY = 26;</code>
     *
     * <pre>
     *26.杀死指定类型的怪N只（日常，暂定，看程序制作难度决定是否使用此类型）
     * </pre>
     */
    public static final int MISSION_KILL_CERTAIN_TYPE_ENEMY_VALUE = 26;
    /**
     * <code>MISSION_ACCEPT_NORMAL_BRANCH_MISSION = 27;</code>
     *
     * <pre>
     *（注：指定类型是指，例如任务要求杀死刀兵N只，那么所有属于刀兵的小怪，不管这个怪是曹军刀兵，袁军刀兵还是西凉刀兵，都算作刀兵这一类型，任务都算完成。）
     * </pre>
     */
    public static final int MISSION_ACCEPT_NORMAL_BRANCH_MISSION_VALUE = 27;
    /**
     * <code>MISSION_UPGRADE_EQUIPMENT_TO_CERTAIN_LEVEL = 28;</code>
     *
     * <pre>
     *28 升级装备（可以是特定的装备attrId或者某一件装备attrId = -1）达到n级
     * </pre>
     */
    public static final int MISSION_UPGRADE_EQUIPMENT_TO_CERTAIN_LEVEL_VALUE = 28;
    /**
     * <code>MISSION_UPGRADE_KONGFU_TO_CERTAIN_LEVEL = 29;</code>
     *
     * <pre>
     *29 升级武学（可以是特定的技能attrId或者某一技能attrId = -1）达到n级
     * </pre>
     */
    public static final int MISSION_UPGRADE_KONGFU_TO_CERTAIN_LEVEL_VALUE = 29;
    /**
     * <code>MISSION_HAVE_NUM_CERTAIN_LEVEL_KONGFU = 30;</code>
     *
     * <pre>
     *30 拥有n个m级武学  m = -1表示任意级别，m &gt; 0表示升级到m级别，这里的n代表武学的个数，比如
     * </pre>
     */
    public static final int MISSION_HAVE_NUM_CERTAIN_LEVEL_KONGFU_VALUE = 30;
    /**
     * <code>MISSION_HAVE_NUM_DIFFER_CERTAIN_LEVEL_KONGFU = 31;</code>
     *
     * <pre>
     *这种武学可以拥有4个，那么这个n可以记录为4等待
     * </pre>
     */
    public static final int MISSION_HAVE_NUM_DIFFER_CERTAIN_LEVEL_KONGFU_VALUE = 31;
    /**
     * <code>MISSION_CERTAIN_TAOLU_HAVE_NUM_KONGFU = 32;</code>
     *
     * <pre>
     *32 某一个（或者特定的）套路中拥有n个武学
     * </pre>
     */
    public static final int MISSION_CERTAIN_TAOLU_HAVE_NUM_KONGFU_VALUE = 32;
    /**
     * <code>MISSION_EQUIP_NUM_KONGFU_TO_CERTAIN_KONGFU_SLOT = 33;</code>
     *
     * <pre>
     *33 装备n个武学到武学槽(attrId &gt;0 指定， attrId = -1任意)中
     * </pre>
     */
    public static final int MISSION_EQUIP_NUM_KONGFU_TO_CERTAIN_KONGFU_SLOT_VALUE = 33;
    /**
     * <code>MISSION_REPLACE_NUM_KONGFU_FROM_KONGFU_SLOT = 34;</code>
     *
     * <pre>
     *34 将n个武学与已经被装备的武学替换
     * </pre>
     */
    public static final int MISSION_REPLACE_NUM_KONGFU_FROM_KONGFU_SLOT_VALUE = 34;
    /**
     * <code>MISSION_EQUIP_FULL_GEM_ON_CERTAIN_GEM_SLOT = 35;</code>
     *
     * <pre>
     *35 将任意的装备槽镶嵌满宝石
     * </pre>
     */
    public static final int MISSION_EQUIP_FULL_GEM_ON_CERTAIN_GEM_SLOT_VALUE = 35;
    /**
     * <code>MISSION_HAVE_NUM_CERTAIN_LEVEL_AND_CERTAIN_PRIORITY_GOODS = 36;</code>
     *
     * <pre>
     *36 拥有n个m级的某品质的物品（卦象，宝石，装备）
     * </pre>
     */
    public static final int MISSION_HAVE_NUM_CERTAIN_LEVEL_AND_CERTAIN_PRIORITY_GOODS_VALUE = 36;
    /**
     * <code>MISSION_HAVE_NUM_CERTAIN_LEVEL_SKILL = 37;</code>
     *
     * <pre>
     *37 拥有n个m级的某种被动技能
     * </pre>
     */
    public static final int MISSION_HAVE_NUM_CERTAIN_LEVEL_SKILL_VALUE = 37;
    /**
     * <code>MISSION_FINISH_NUM_DAILY_MISSION = 38;</code>
     *
     * <pre>
     *38 完成n次的日常任务
     * </pre>
     */
    public static final int MISSION_FINISH_NUM_DAILY_MISSION_VALUE = 38;
    /**
     * <code>MISSION_JOIN_OR_SETUP_YIJUN = 39;</code>
     *
     * <pre>
     *39 创建或者加入某个义军
     * </pre>
     */
    public static final int MISSION_JOIN_OR_SETUP_YIJUN_VALUE = 39;
    /**
     * <code>MISSION_HAVE_NUM_YIJUN_BUILDING = 40;</code>
     *
     * <pre>
     *40 开启义军建筑n个
     * </pre>
     */
    public static final int MISSION_HAVE_NUM_YIJUN_BUILDING_VALUE = 40;
    /**
     * <code>MISSION_HAVE_NUM_YIJUN_SKILL = 41;</code>
     *
     * <pre>
     *41 开启义军技能n个
     * </pre>
     */
    public static final int MISSION_HAVE_NUM_YIJUN_SKILL_VALUE = 41;
    /**
     * <code>MISSION_UPGRADE_YIJUN_SKILL_NUM_TIMES = 42;</code>
     *
     * <pre>
     *42 升级义军技能到达n级
     * </pre>
     */
    public static final int MISSION_UPGRADE_YIJUN_SKILL_NUM_TIMES_VALUE = 42;
    /**
     * <code>MISSION_YIJUN_LEVEL_TO_CERTAIN_LEVEL = 43;</code>
     *
     * <pre>
     *43 升级义军达到n级
     * </pre>
     */
    public static final int MISSION_YIJUN_LEVEL_TO_CERTAIN_LEVEL_VALUE = 43;
    /**
     * <code>MISSION_HAVE_CERTAIN_TAOLU = 44;</code>
     *
     * <pre>
     *44 开启指定的武学套路
     * </pre>
     */
    public static final int MISSION_HAVE_CERTAIN_TAOLU_VALUE = 44;
    /**
     * <code>MISSION_COMPLETED_LIBRARY_TIMES = 45;</code>
     *
     * <pre>
     *45 通关藏经阁N次（战斗结束拿到奖励才计算次数）
     * </pre>
     */
    public static final int MISSION_COMPLETED_LIBRARY_TIMES_VALUE = 45;
    /**
     * <code>MISSION_WORLDBOSS_FIGHT_TIMES = 46;</code>
     *
     * <pre>
     *46 参与世界BOSS战斗 N次（同一个世界BOSS开启时间段内进入战斗多次算作一次）
     * </pre>
     */
    public static final int MISSION_WORLDBOSS_FIGHT_TIMES_VALUE = 46;
    /**
     * <code>MISSION_WORSHIP_TIMES = 47;</code>
     *
     * <pre>
     *47 膜拜雕像N次
     * </pre>
     */
    public static final int MISSION_WORSHIP_TIMES_VALUE = 47;
    /**
     * <code>MISSION_CAPTURE_ATTACK_TIMES = 48;</code>
     *
     * <pre>
     *48 掠夺其他义军军饷N次
     * </pre>
     */
    public static final int MISSION_CAPTURE_ATTACK_TIMES_VALUE = 48;
    /**
     * <code>MISSION_CAPTURE_DEFENCE_TIMES = 49;</code>
     *
     * <pre>
     *49 保卫自己义军N次（进入驱逐战斗算作一次）
     * </pre>
     */
    public static final int MISSION_CAPTURE_DEFENCE_TIMES_VALUE = 49;
    /**
     * <code>MISSION_KUNGFU_STAR_LEVEL_UP_TIMES = 50;</code>
     *
     * <pre>
     *50 武学星级升级n次
     * </pre>
     */
    public static final int MISSION_KUNGFU_STAR_LEVEL_UP_TIMES_VALUE = 50;
    /**
     * <code>MISSION_HAVE_NUM_DIFFER_CERTAIN_STARLEVEL_KONGFU = 51;</code>
     *
     * <pre>
     *51 拥有n个不同种类的m星级武学
     * </pre>
     */
    public static final int MISSION_HAVE_NUM_DIFFER_CERTAIN_STARLEVEL_KONGFU_VALUE = 51;


    public final int getNumber() { return value; }

    public static MissionFinishType valueOf(int value) {
      switch (value) {
        case 1: return MISSION_FINISH_CERTEN_STAGE;
        case 2: return MISSION_ONE_KEY_UPDETE_KONGFU;
        case 3: return MISSION_KILL_ENEMY_ON_CERTEN_STAGE;
        case 4: return MISSION_VIP_LEVEL_TO_CERTAIN_LEVEL;
        case 5: return MISSION_FINISH_CERTEN_STAGE_FULL_STAR;
        case 6: return MISSION_USE_GOLD;
        case 7: return MISSION_COMPOSE_GEM;
        case 8: return MISSION_EAT_EQUIP;
        case 9: return MISSION_KUNGFU_LEVEL_UP;
        case 10: return MISSION_PASSIVE_SKILL_LEVELUP;
        case 11: return MISSION_FIGHT_ON_ARENA;
        case 12: return MISSION_SHAKE_MONEY_TREE;
        case 13: return MISSION_DIVING;
        case 14: return MISSION_DONATE_FOR_YIJUN;
        case 15: return MISSION_PRAY_FOR_YIJUN;
        case 16: return MISSION_GAMBLE_EQUIPMENT;
        case 17: return MISSION_TALK_WITH_NPC;
        case 18: return MISSION_FULL_STAR_ON_STAGE_WORLD_MAP;
        case 19: return MISSION_EQUIP_EQUIPMENT;
        case 20: return MISSION_EQUIP_GEM;
        case 21: return MISSION_EQUIP_GUAXIANG;
        case 22: return MISSION_OPEN_YIJUN_SCEEN;
        case 23: return MISSION_ACCEPT_DAILY_MISSION;
        case 24: return MISSION_HAVE_NUM_JADE;
        case 25: return MISSION_KILL_BOSS_ON_STAGE;
        case 26: return MISSION_KILL_CERTAIN_TYPE_ENEMY;
        case 27: return MISSION_ACCEPT_NORMAL_BRANCH_MISSION;
        case 28: return MISSION_UPGRADE_EQUIPMENT_TO_CERTAIN_LEVEL;
        case 29: return MISSION_UPGRADE_KONGFU_TO_CERTAIN_LEVEL;
        case 30: return MISSION_HAVE_NUM_CERTAIN_LEVEL_KONGFU;
        case 31: return MISSION_HAVE_NUM_DIFFER_CERTAIN_LEVEL_KONGFU;
        case 32: return MISSION_CERTAIN_TAOLU_HAVE_NUM_KONGFU;
        case 33: return MISSION_EQUIP_NUM_KONGFU_TO_CERTAIN_KONGFU_SLOT;
        case 34: return MISSION_REPLACE_NUM_KONGFU_FROM_KONGFU_SLOT;
        case 35: return MISSION_EQUIP_FULL_GEM_ON_CERTAIN_GEM_SLOT;
        case 36: return MISSION_HAVE_NUM_CERTAIN_LEVEL_AND_CERTAIN_PRIORITY_GOODS;
        case 37: return MISSION_HAVE_NUM_CERTAIN_LEVEL_SKILL;
        case 38: return MISSION_FINISH_NUM_DAILY_MISSION;
        case 39: return MISSION_JOIN_OR_SETUP_YIJUN;
        case 40: return MISSION_HAVE_NUM_YIJUN_BUILDING;
        case 41: return MISSION_HAVE_NUM_YIJUN_SKILL;
        case 42: return MISSION_UPGRADE_YIJUN_SKILL_NUM_TIMES;
        case 43: return MISSION_YIJUN_LEVEL_TO_CERTAIN_LEVEL;
        case 44: return MISSION_HAVE_CERTAIN_TAOLU;
        case 45: return MISSION_COMPLETED_LIBRARY_TIMES;
        case 46: return MISSION_WORLDBOSS_FIGHT_TIMES;
        case 47: return MISSION_WORSHIP_TIMES;
        case 48: return MISSION_CAPTURE_ATTACK_TIMES;
        case 49: return MISSION_CAPTURE_DEFENCE_TIMES;
        case 50: return MISSION_KUNGFU_STAR_LEVEL_UP_TIMES;
        case 51: return MISSION_HAVE_NUM_DIFFER_CERTAIN_STARLEVEL_KONGFU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MissionFinishType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MissionFinishType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MissionFinishType>() {
            public MissionFinishType findValueByNumber(int number) {
              return MissionFinishType.valueOf(number);
            }
          };

    private final int value;

    private MissionFinishType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.MissionFinishType)
  }

  /**
   * Protobuf enum {@code sanguo.MissionState}
   *
   * <pre>
   *任务的状态 1未接 2进行中 3完成未领取 4放弃 5完成已领取 6已经可见但是不可以接受的任务
   * </pre>
   */
  public enum MissionState
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>MISSION_STATE_UNACCEPT = 1;</code>
     */
    MISSION_STATE_UNACCEPT(0, 1),
    /**
     * <code>MISSION_STATE_IS_DOING = 2;</code>
     */
    MISSION_STATE_IS_DOING(1, 2),
    /**
     * <code>MISSION_STATE_FINISH = 3;</code>
     */
    MISSION_STATE_FINISH(2, 3),
    /**
     * <code>MISSION_STATE_GIVE_UP = 4;</code>
     */
    MISSION_STATE_GIVE_UP(3, 4),
    /**
     * <code>MISSION_STATE_COMPLETEED = 5;</code>
     */
    MISSION_STATE_COMPLETEED(4, 5),
    /**
     * <code>MISSION_STATE_CANNOT_ACCEPT = 6;</code>
     */
    MISSION_STATE_CANNOT_ACCEPT(5, 6),
    ;

    /**
     * <code>MISSION_STATE_UNACCEPT = 1;</code>
     */
    public static final int MISSION_STATE_UNACCEPT_VALUE = 1;
    /**
     * <code>MISSION_STATE_IS_DOING = 2;</code>
     */
    public static final int MISSION_STATE_IS_DOING_VALUE = 2;
    /**
     * <code>MISSION_STATE_FINISH = 3;</code>
     */
    public static final int MISSION_STATE_FINISH_VALUE = 3;
    /**
     * <code>MISSION_STATE_GIVE_UP = 4;</code>
     */
    public static final int MISSION_STATE_GIVE_UP_VALUE = 4;
    /**
     * <code>MISSION_STATE_COMPLETEED = 5;</code>
     */
    public static final int MISSION_STATE_COMPLETEED_VALUE = 5;
    /**
     * <code>MISSION_STATE_CANNOT_ACCEPT = 6;</code>
     */
    public static final int MISSION_STATE_CANNOT_ACCEPT_VALUE = 6;


    public final int getNumber() { return value; }

    public static MissionState valueOf(int value) {
      switch (value) {
        case 1: return MISSION_STATE_UNACCEPT;
        case 2: return MISSION_STATE_IS_DOING;
        case 3: return MISSION_STATE_FINISH;
        case 4: return MISSION_STATE_GIVE_UP;
        case 5: return MISSION_STATE_COMPLETEED;
        case 6: return MISSION_STATE_CANNOT_ACCEPT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MissionState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MissionState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MissionState>() {
            public MissionState findValueByNumber(int number) {
              return MissionState.valueOf(number);
            }
          };

    private final int value;

    private MissionState(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.MissionState)
  }

  /**
   * Protobuf enum {@code sanguo.YijunPosition}
   *
   * <pre>
   * </pre>
   */
  public enum YijunPosition
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>YIJUN_POSITION_SOLDIER = 1;</code>
     */
    YIJUN_POSITION_SOLDIER(0, 1),
    /**
     * <code>YIJUN_POSITION_GENERAL = 4;</code>
     */
    YIJUN_POSITION_GENERAL(1, 4),
    /**
     * <code>YIJUN_POSITION_MARSHAL = 7;</code>
     */
    YIJUN_POSITION_MARSHAL(2, 7),
    ;

    /**
     * <code>YIJUN_POSITION_SOLDIER = 1;</code>
     */
    public static final int YIJUN_POSITION_SOLDIER_VALUE = 1;
    /**
     * <code>YIJUN_POSITION_GENERAL = 4;</code>
     */
    public static final int YIJUN_POSITION_GENERAL_VALUE = 4;
    /**
     * <code>YIJUN_POSITION_MARSHAL = 7;</code>
     */
    public static final int YIJUN_POSITION_MARSHAL_VALUE = 7;


    public final int getNumber() { return value; }

    public static YijunPosition valueOf(int value) {
      switch (value) {
        case 1: return YIJUN_POSITION_SOLDIER;
        case 4: return YIJUN_POSITION_GENERAL;
        case 7: return YIJUN_POSITION_MARSHAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<YijunPosition>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<YijunPosition>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<YijunPosition>() {
            public YijunPosition findValueByNumber(int number) {
              return YijunPosition.valueOf(number);
            }
          };

    private final int value;

    private YijunPosition(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.YijunPosition)
  }

  /**
   * Protobuf enum {@code sanguo.YijunCaptureResult}
   */
  public enum YijunCaptureResult
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_FAILUER_DEFENSE = 1;</code>
     *
     * <pre>
     * 守卫结果:1表示守卫失败，
     * </pre>
     */
    TYPE_FAILUER_DEFENSE(0, 1),
    /**
     * <code>TYPE_SUCCESS_DEFENSE = 0;</code>
     *
     * <pre>
     * 0表示守卫胜利
     * </pre>
     */
    TYPE_SUCCESS_DEFENSE(1, 0),
    ;

    /**
     * <code>TYPE_FAILUER_DEFENSE = 1;</code>
     *
     * <pre>
     * 守卫结果:1表示守卫失败，
     * </pre>
     */
    public static final int TYPE_FAILUER_DEFENSE_VALUE = 1;
    /**
     * <code>TYPE_SUCCESS_DEFENSE = 0;</code>
     *
     * <pre>
     * 0表示守卫胜利
     * </pre>
     */
    public static final int TYPE_SUCCESS_DEFENSE_VALUE = 0;


    public final int getNumber() { return value; }

    public static YijunCaptureResult valueOf(int value) {
      switch (value) {
        case 1: return TYPE_FAILUER_DEFENSE;
        case 0: return TYPE_SUCCESS_DEFENSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<YijunCaptureResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<YijunCaptureResult>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<YijunCaptureResult>() {
            public YijunCaptureResult findValueByNumber(int number) {
              return YijunCaptureResult.valueOf(number);
            }
          };

    private final int value;

    private YijunCaptureResult(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.YijunCaptureResult)
  }

  /**
   * Protobuf enum {@code sanguo.GetYijunInfoType}
   */
  public enum GetYijunInfoType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_YIJUN = 0;</code>
     *
     * <pre>
     * 分页获取义军信息
     * </pre>
     */
    TYPE_YIJUN(0, 0),
    /**
     * <code>TYPE_YIJUN_CAPTURE = 1;</code>
     *
     * <pre>
     * 分页获取可掠夺义军信息
     * </pre>
     */
    TYPE_YIJUN_CAPTURE(1, 1),
    ;

    /**
     * <code>TYPE_YIJUN = 0;</code>
     *
     * <pre>
     * 分页获取义军信息
     * </pre>
     */
    public static final int TYPE_YIJUN_VALUE = 0;
    /**
     * <code>TYPE_YIJUN_CAPTURE = 1;</code>
     *
     * <pre>
     * 分页获取可掠夺义军信息
     * </pre>
     */
    public static final int TYPE_YIJUN_CAPTURE_VALUE = 1;


    public final int getNumber() { return value; }

    public static GetYijunInfoType valueOf(int value) {
      switch (value) {
        case 0: return TYPE_YIJUN;
        case 1: return TYPE_YIJUN_CAPTURE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GetYijunInfoType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GetYijunInfoType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GetYijunInfoType>() {
            public GetYijunInfoType findValueByNumber(int number) {
              return GetYijunInfoType.valueOf(number);
            }
          };

    private final int value;

    private GetYijunInfoType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.GetYijunInfoType)
  }

  /**
   * Protobuf enum {@code sanguo.DungeonType}
   */
  public enum DungeonType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>DUNGEON_NORMAL = 1;</code>
     */
    DUNGEON_NORMAL(0, 1),
    /**
     * <code>DUNGEON_ELITE = 2;</code>
     */
    DUNGEON_ELITE(1, 2),
    ;

    /**
     * <code>DUNGEON_NORMAL = 1;</code>
     */
    public static final int DUNGEON_NORMAL_VALUE = 1;
    /**
     * <code>DUNGEON_ELITE = 2;</code>
     */
    public static final int DUNGEON_ELITE_VALUE = 2;


    public final int getNumber() { return value; }

    public static DungeonType valueOf(int value) {
      switch (value) {
        case 1: return DUNGEON_NORMAL;
        case 2: return DUNGEON_ELITE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DungeonType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DungeonType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DungeonType>() {
            public DungeonType findValueByNumber(int number) {
              return DungeonType.valueOf(number);
            }
          };

    private final int value;

    private DungeonType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.DungeonType)
  }

  /**
   * Protobuf enum {@code sanguo.StoryOrder}
   */
  public enum StoryOrder
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>AFTER_ACCEPT_MISSION = 1;</code>
     */
    AFTER_ACCEPT_MISSION(0, 1),
    /**
     * <code>START_DUNGEON = 2;</code>
     */
    START_DUNGEON(1, 2),
    /**
     * <code>BEFORE_BOSS = 3;</code>
     */
    BEFORE_BOSS(2, 3),
    /**
     * <code>AFTER_BOSS = 4;</code>
     */
    AFTER_BOSS(3, 4),
    /**
     * <code>AFTER_COMPLETE_MISSION = 5;</code>
     */
    AFTER_COMPLETE_MISSION(4, 5),
    ;

    /**
     * <code>AFTER_ACCEPT_MISSION = 1;</code>
     */
    public static final int AFTER_ACCEPT_MISSION_VALUE = 1;
    /**
     * <code>START_DUNGEON = 2;</code>
     */
    public static final int START_DUNGEON_VALUE = 2;
    /**
     * <code>BEFORE_BOSS = 3;</code>
     */
    public static final int BEFORE_BOSS_VALUE = 3;
    /**
     * <code>AFTER_BOSS = 4;</code>
     */
    public static final int AFTER_BOSS_VALUE = 4;
    /**
     * <code>AFTER_COMPLETE_MISSION = 5;</code>
     */
    public static final int AFTER_COMPLETE_MISSION_VALUE = 5;


    public final int getNumber() { return value; }

    public static StoryOrder valueOf(int value) {
      switch (value) {
        case 1: return AFTER_ACCEPT_MISSION;
        case 2: return START_DUNGEON;
        case 3: return BEFORE_BOSS;
        case 4: return AFTER_BOSS;
        case 5: return AFTER_COMPLETE_MISSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StoryOrder>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<StoryOrder>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StoryOrder>() {
            public StoryOrder findValueByNumber(int number) {
              return StoryOrder.valueOf(number);
            }
          };

    private final int value;

    private StoryOrder(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.StoryOrder)
  }

  /**
   * Protobuf enum {@code sanguo.StoryType}
   */
  public enum StoryType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>STORY_TALK = 1;</code>
     */
    STORY_TALK(0, 1),
    /**
     * <code>STORY_ANIMATION = 2;</code>
     */
    STORY_ANIMATION(1, 2),
    /**
     * <code>STORY_LEAD = 3;</code>
     */
    STORY_LEAD(2, 3),
    /**
     * <code>STORY_OPEN_LAYER = 4;</code>
     */
    STORY_OPEN_LAYER(3, 4),
    /**
     * <code>STORY_FIND_NPC = 5;</code>
     */
    STORY_FIND_NPC(4, 5),
    /**
     * <code>STORY_FIND_DUNGEON = 6;</code>
     */
    STORY_FIND_DUNGEON(5, 6),
    ;

    /**
     * <code>STORY_TALK = 1;</code>
     */
    public static final int STORY_TALK_VALUE = 1;
    /**
     * <code>STORY_ANIMATION = 2;</code>
     */
    public static final int STORY_ANIMATION_VALUE = 2;
    /**
     * <code>STORY_LEAD = 3;</code>
     */
    public static final int STORY_LEAD_VALUE = 3;
    /**
     * <code>STORY_OPEN_LAYER = 4;</code>
     */
    public static final int STORY_OPEN_LAYER_VALUE = 4;
    /**
     * <code>STORY_FIND_NPC = 5;</code>
     */
    public static final int STORY_FIND_NPC_VALUE = 5;
    /**
     * <code>STORY_FIND_DUNGEON = 6;</code>
     */
    public static final int STORY_FIND_DUNGEON_VALUE = 6;


    public final int getNumber() { return value; }

    public static StoryType valueOf(int value) {
      switch (value) {
        case 1: return STORY_TALK;
        case 2: return STORY_ANIMATION;
        case 3: return STORY_LEAD;
        case 4: return STORY_OPEN_LAYER;
        case 5: return STORY_FIND_NPC;
        case 6: return STORY_FIND_DUNGEON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StoryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<StoryType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StoryType>() {
            public StoryType findValueByNumber(int number) {
              return StoryType.valueOf(number);
            }
          };

    private final int value;

    private StoryType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.StoryType)
  }

  /**
   * Protobuf enum {@code sanguo.ChatType}
   */
  public enum ChatType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CHAT_WORLD = 1;</code>
     */
    CHAT_WORLD(0, 1),
    /**
     * <code>CHAT_YIJUN = 2;</code>
     */
    CHAT_YIJUN(1, 2),
    /**
     * <code>CHAT_PRIVATE = 3;</code>
     */
    CHAT_PRIVATE(2, 3),
    /**
     * <code>CHAT_BROADCAST = 4;</code>
     */
    CHAT_BROADCAST(3, 4),
    /**
     * <code>CHAT_SYSTEM = 5;</code>
     */
    CHAT_SYSTEM(4, 5),
    ;

    /**
     * <code>CHAT_WORLD = 1;</code>
     */
    public static final int CHAT_WORLD_VALUE = 1;
    /**
     * <code>CHAT_YIJUN = 2;</code>
     */
    public static final int CHAT_YIJUN_VALUE = 2;
    /**
     * <code>CHAT_PRIVATE = 3;</code>
     */
    public static final int CHAT_PRIVATE_VALUE = 3;
    /**
     * <code>CHAT_BROADCAST = 4;</code>
     */
    public static final int CHAT_BROADCAST_VALUE = 4;
    /**
     * <code>CHAT_SYSTEM = 5;</code>
     */
    public static final int CHAT_SYSTEM_VALUE = 5;


    public final int getNumber() { return value; }

    public static ChatType valueOf(int value) {
      switch (value) {
        case 1: return CHAT_WORLD;
        case 2: return CHAT_YIJUN;
        case 3: return CHAT_PRIVATE;
        case 4: return CHAT_BROADCAST;
        case 5: return CHAT_SYSTEM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChatType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChatType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChatType>() {
            public ChatType findValueByNumber(int number) {
              return ChatType.valueOf(number);
            }
          };

    private final int value;

    private ChatType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.ChatType)
  }

  /**
   * Protobuf enum {@code sanguo.MarqueType}
   */
  public enum MarqueType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_GAMBLE = 1;</code>
     *
     * <pre>
     * 赌博
     * </pre>
     */
    TYPE_GAMBLE(0, 1),
    /**
     * <code>TYPE_ACTIVITY = 2;</code>
     *
     * <pre>
     * 活动
     * </pre>
     */
    TYPE_ACTIVITY(1, 2),
    /**
     * <code>TYPE_GUAXIANG = 3;</code>
     *
     * <pre>
     * 占卜
     * </pre>
     */
    TYPE_GUAXIANG(2, 3),
    /**
     * <code>TYPE_VIP_GIFT = 4;</code>
     *
     * <pre>
     * vip礼包
     * </pre>
     */
    TYPE_VIP_GIFT(3, 4),
    /**
     * <code>TYPE_STONE_COMBINE = 5;</code>
     *
     * <pre>
     * 宝石合成
     * </pre>
     */
    TYPE_STONE_COMBINE(4, 5),
    /**
     * <code>TYPE_VIP_LEVEL_UP = 6;</code>
     *
     * <pre>
     * 升级VIP
     * </pre>
     */
    TYPE_VIP_LEVEL_UP(5, 6),
    /**
     * <code>TYPE_EQUIPE_STRONG = 7;</code>
     *
     * <pre>
     * 装备强化
     * </pre>
     */
    TYPE_EQUIPE_STRONG(6, 7),
    /**
     * <code>TYPE_ARENA = 8;</code>
     *
     * <pre>
     * 竞技场
     * </pre>
     */
    TYPE_ARENA(7, 8),
    /**
     * <code>TYPE_YIJUN_LEVEL_UP = 9;</code>
     *
     * <pre>
     * 义军升级
     * </pre>
     */
    TYPE_YIJUN_LEVEL_UP(8, 9),
    /**
     * <code>TYPE_YIJUN_JIANZHU = 10;</code>
     *
     * <pre>
     * 义军建筑升级
     * </pre>
     */
    TYPE_YIJUN_JIANZHU(9, 10),
    /**
     * <code>TYPE_SKILL_MAX = 11;</code>
     *
     * <pre>
     * 义军技能满级
     * </pre>
     */
    TYPE_SKILL_MAX(10, 11),
    /**
     * <code>TYPE_ACTIVE_SKILL = 12;</code>
     *
     * <pre>
     * 主动技能升级
     * </pre>
     */
    TYPE_ACTIVE_SKILL(11, 12),
    /**
     * <code>TYPE_SENIOR_PASSIVE_SKILL = 13;</code>
     *
     * <pre>
     * 被动高级技能升级
     * </pre>
     */
    TYPE_SENIOR_PASSIVE_SKILL(12, 13),
    /**
     * <code>TYPE_JUNIOR_PASSIVE_SKILL = 14;</code>
     *
     * <pre>
     * 被动初级技能升级
     * </pre>
     */
    TYPE_JUNIOR_PASSIVE_SKILL(13, 14),
    /**
     * <code>TYPE_SUCCESS_JOIN_YIJUN = 15;</code>
     *
     * <pre>
     * 新人加入义军成功
     * </pre>
     */
    TYPE_SUCCESS_JOIN_YIJUN(14, 15),
    /**
     * <code>TYPE_YIJUN_MEMBER_UP = 16;</code>
     *
     * <pre>
     * 义军成员升职成功
     * </pre>
     */
    TYPE_YIJUN_MEMBER_UP(15, 16),
    /**
     * <code>TYPE_YIJUN_TRANSFER = 17;</code>
     *
     * <pre>
     * 义军转让
     * </pre>
     */
    TYPE_YIJUN_TRANSFER(16, 17),
    /**
     * <code>TYPE_YIJUN_GENERAL_DEMOTION = 18;</code>
     *
     * <pre>
     * 义军成员降职
     * </pre>
     */
    TYPE_YIJUN_GENERAL_DEMOTION(17, 18),
    /**
     * <code>TYPE_YIJUN_KICKEDOUT = 19;</code>
     *
     * <pre>
     * 义军成员被踢
     * </pre>
     */
    TYPE_YIJUN_KICKEDOUT(18, 19),
    /**
     * <code>TYPE_SYSTEM = 20;</code>
     *
     * <pre>
     * 系统公告
     * </pre>
     */
    TYPE_SYSTEM(19, 20),
    /**
     * <code>TYPE_FULL_STAR_DUNGEON = 21;</code>
     *
     * <pre>
     * 满星过副本
     * </pre>
     */
    TYPE_FULL_STAR_DUNGEON(20, 21),
    /**
     * <code>TYPE_OPEN_SENIOR_PAASIVE_SKILL = 22;</code>
     *
     * <pre>
     * 开启被动技能高级
     * </pre>
     */
    TYPE_OPEN_SENIOR_PAASIVE_SKILL(21, 22),
    /**
     * <code>TYPE_OPEN_JUNIOR_PAASIVE_SKILL = 23;</code>
     *
     * <pre>
     * 开启被动技能低级
     * </pre>
     */
    TYPE_OPEN_JUNIOR_PAASIVE_SKILL(22, 23),
    /**
     * <code>TYPE_EVERY_FIVE_INTERVAL_ENHANCE_EQUIPMENT = 24;</code>
     *
     * <pre>
     * 强化橙色或者红色每5级发送类型
     * </pre>
     */
    TYPE_EVERY_FIVE_INTERVAL_ENHANCE_EQUIPMENT(23, 24),
    /**
     * <code>TYPE_KUNGFU_OPEN = 25;</code>
     *
     * <pre>
     * 开启武学类型
     * </pre>
     */
    TYPE_KUNGFU_OPEN(24, 25),
    /**
     * <code>TYPE_KUNGFU_LEVEL_UP = 26;</code>
     *
     * <pre>
     * 升级武学类型
     * </pre>
     */
    TYPE_KUNGFU_LEVEL_UP(25, 26),
    /**
     * <code>TYPE_WORLDBOSS_WILL_OPEN = 27;</code>
     *
     * <pre>
     *世界BOSS活动将要开启
     * </pre>
     */
    TYPE_WORLDBOSS_WILL_OPEN(26, 27),
    /**
     * <code>TYPE_WORLDBOSS_RANK = 28;</code>
     *
     * <pre>
     *世界BOSS活动结束
     * </pre>
     */
    TYPE_WORLDBOSS_RANK(27, 28),
    /**
     * <code>TYPE_WORLDBOSS_OPENED = 29;</code>
     */
    TYPE_WORLDBOSS_OPENED(28, 29),
    /**
     * <code>TYPE_WORLDBOSS_FINAL_ATTACK = 30;</code>
     */
    TYPE_WORLDBOSS_FINAL_ATTACK(29, 30),
    /**
     * <code>TYPE_STATUES = 31;</code>
     *
     * <pre>
     * 膜拜石像
     * </pre>
     */
    TYPE_STATUES(30, 31),
    /**
     * <code>TYPE_ACHIEVEMENT_KILL_MONSTER = 32;</code>
     *
     * <pre>
     *杀敌数量
     * </pre>
     */
    TYPE_ACHIEVEMENT_KILL_MONSTER(31, 32),
    /**
     * <code>TYPE_ACHIEVEMENT_KILL_BOSS = 33;</code>
     *
     * <pre>
     *杀boss数量
     * </pre>
     */
    TYPE_ACHIEVEMENT_KILL_BOSS(32, 33),
    /**
     * <code>TYPE_ACHIEVEMENT_ENHANCE_EQUIP = 34;</code>
     *
     * <pre>
     * 强化装备次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_ENHANCE_EQUIP(33, 34),
    /**
     * <code>TYPE_ACHIEVEMENT_COMPOSE_GEM = 35;</code>
     *
     * <pre>
     * 合成宝石次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_COMPOSE_GEM(34, 35),
    /**
     * <code>TYPE_ACHIEVEMENT_DICE = 36;</code>
     *
     * <pre>
     * 占卜次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_DICE(35, 36),
    /**
     * <code>TYPE_ACHIEVEMENT_ROLE_LEVEL = 37;</code>
     *
     * <pre>
     * 角色等级
     * </pre>
     */
    TYPE_ACHIEVEMENT_ROLE_LEVEL(36, 37),
    /**
     * <code>TYPE_ACHIEVEMENT_AREANA_RANK = 38;</code>
     *
     * <pre>
     * 竞技场排名
     * </pre>
     */
    TYPE_ACHIEVEMENT_AREANA_RANK(37, 38),
    /**
     * <code>TYPE_ACHIEVEMENT_FIGHT = 39;</code>
     *
     * <pre>
     * 战力
     * </pre>
     */
    TYPE_ACHIEVEMENT_FIGHT(38, 39),
    /**
     * <code>TYPE_ACHIEVEMENT_COPPER_0 = 40;</code>
     *
     * <pre>
     *铜钱数量１　　   铜钱=0
     * </pre>
     */
    TYPE_ACHIEVEMENT_COPPER_0(39, 40),
    /**
     * <code>TYPE_ACHIEVEMENT_COPPER_1 = 41;</code>
     *
     * <pre>
     * 铜钱数量２      铜钱=1
     * </pre>
     */
    TYPE_ACHIEVEMENT_COPPER_1(40, 41),
    /**
     * <code>TYPE_ACHIEVEMENT_COPPER_OTHER = 42;</code>
     *
     * <pre>
     * 铜钱数量３      其他
     * </pre>
     */
    TYPE_ACHIEVEMENT_COPPER_OTHER(41, 42),
    /**
     * <code>TYPE_ACHIEVEMENT_ONLINE_TIME = 43;</code>
     *
     * <pre>
     * 在线时长
     * </pre>
     */
    TYPE_ACHIEVEMENT_ONLINE_TIME(42, 43),
    /**
     * <code>TYPE_ACHIEVEMENT_DUNGEON = 44;</code>
     *
     * <pre>
     * 关卡进度
     * </pre>
     */
    TYPE_ACHIEVEMENT_DUNGEON(43, 44),
    /**
     * <code>TYPE_ACHIEVEMENT_DAILY_MISSION = 45;</code>
     *
     * <pre>
     * 完成日常任务数量
     * </pre>
     */
    TYPE_ACHIEVEMENT_DAILY_MISSION(44, 45),
    /**
     * <code>TYPE_ACHIEVEMENT_KUNGFU_LEVEL_UP = 46;</code>
     *
     * <pre>
     * 武学升级次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_KUNGFU_LEVEL_UP(45, 46),
    /**
     * <code>TYPE_ACHIEVEMENT_PASSIVE_LEVEL_UP = 47;</code>
     *
     * <pre>
     * 被动技能升级次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_PASSIVE_LEVEL_UP(46, 47),
    /**
     * <code>TYPE_ACHIEVEMENT_YIJUNSKILL_LEVEL_UP = 48;</code>
     *
     * <pre>
     * 义军技能升级次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_YIJUNSKILL_LEVEL_UP(47, 48),
    /**
     * <code>TYPE_ACHIEVEMENT_GAMBLE = 49;</code>
     *
     * <pre>
     * 摇色子次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_GAMBLE(48, 49),
    /**
     * <code>TYPE_ACHIEVEMENT_GOLDCHEST = 50;</code>
     *
     * <pre>
     * 金宝箱抽奖次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_GOLDCHEST(49, 50),
    /**
     * <code>TYPE_ACHIEVEMENT_SPECIAL_DUNGEON = 51;</code>
     *
     * <pre>
     * 藏经阁次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_SPECIAL_DUNGEON(50, 51),
    /**
     * <code>TYPE_ACHIEVEMENT_WORLDBOSS = 52;</code>
     *
     * <pre>
     * 累积世界boss次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_WORLDBOSS(51, 52),
    /**
     * <code>TYPE_ACHIEVEMENT_MONEY_TREE = 53;</code>
     *
     * <pre>
     * 摇钱树次数
     * </pre>
     */
    TYPE_ACHIEVEMENT_MONEY_TREE(52, 53),
    /**
     * <code>TYPE_ACHIEVEMENT_KUNGFU_COLLECT = 54;</code>
     *
     * <pre>
     *武学收集
     * </pre>
     */
    TYPE_ACHIEVEMENT_KUNGFU_COLLECT(53, 54),
    /**
     * <code>TYPE_ACHIEVEMENT_YIJUN_CAPTURE = 55;</code>
     *
     * <pre>
     *义军掠夺
     * </pre>
     */
    TYPE_ACHIEVEMENT_YIJUN_CAPTURE(54, 55),
    /**
     * <code>TYPE_DUNGEON_RANK = 70;</code>
     *
     * <pre>
     * 副本排行发生变化,发送跑马灯
     * </pre>
     */
    TYPE_DUNGEON_RANK(55, 70),
    /**
     * <code>TYPE_KUNGFU_REFERESH_STAR = 71;</code>
     *
     * <pre>
     * 武学升星
     * </pre>
     */
    TYPE_KUNGFU_REFERESH_STAR(56, 71),
    /**
     * <code>TYPE_YIJUNBOSS_WILL_OPEN = 72;</code>
     */
    TYPE_YIJUNBOSS_WILL_OPEN(57, 72),
    /**
     * <code>TYPE_YIJUNBOSS_RANK = 73;</code>
     */
    TYPE_YIJUNBOSS_RANK(58, 73),
    /**
     * <code>TYPE_YIJUNBOSS_OPENED = 74;</code>
     */
    TYPE_YIJUNBOSS_OPENED(59, 74),
    /**
     * <code>TYPE_YIJUNBOSS_FINAL_ATTACK = 75;</code>
     */
    TYPE_YIJUNBOSS_FINAL_ATTACK(60, 75),
    ;

    /**
     * <code>TYPE_GAMBLE = 1;</code>
     *
     * <pre>
     * 赌博
     * </pre>
     */
    public static final int TYPE_GAMBLE_VALUE = 1;
    /**
     * <code>TYPE_ACTIVITY = 2;</code>
     *
     * <pre>
     * 活动
     * </pre>
     */
    public static final int TYPE_ACTIVITY_VALUE = 2;
    /**
     * <code>TYPE_GUAXIANG = 3;</code>
     *
     * <pre>
     * 占卜
     * </pre>
     */
    public static final int TYPE_GUAXIANG_VALUE = 3;
    /**
     * <code>TYPE_VIP_GIFT = 4;</code>
     *
     * <pre>
     * vip礼包
     * </pre>
     */
    public static final int TYPE_VIP_GIFT_VALUE = 4;
    /**
     * <code>TYPE_STONE_COMBINE = 5;</code>
     *
     * <pre>
     * 宝石合成
     * </pre>
     */
    public static final int TYPE_STONE_COMBINE_VALUE = 5;
    /**
     * <code>TYPE_VIP_LEVEL_UP = 6;</code>
     *
     * <pre>
     * 升级VIP
     * </pre>
     */
    public static final int TYPE_VIP_LEVEL_UP_VALUE = 6;
    /**
     * <code>TYPE_EQUIPE_STRONG = 7;</code>
     *
     * <pre>
     * 装备强化
     * </pre>
     */
    public static final int TYPE_EQUIPE_STRONG_VALUE = 7;
    /**
     * <code>TYPE_ARENA = 8;</code>
     *
     * <pre>
     * 竞技场
     * </pre>
     */
    public static final int TYPE_ARENA_VALUE = 8;
    /**
     * <code>TYPE_YIJUN_LEVEL_UP = 9;</code>
     *
     * <pre>
     * 义军升级
     * </pre>
     */
    public static final int TYPE_YIJUN_LEVEL_UP_VALUE = 9;
    /**
     * <code>TYPE_YIJUN_JIANZHU = 10;</code>
     *
     * <pre>
     * 义军建筑升级
     * </pre>
     */
    public static final int TYPE_YIJUN_JIANZHU_VALUE = 10;
    /**
     * <code>TYPE_SKILL_MAX = 11;</code>
     *
     * <pre>
     * 义军技能满级
     * </pre>
     */
    public static final int TYPE_SKILL_MAX_VALUE = 11;
    /**
     * <code>TYPE_ACTIVE_SKILL = 12;</code>
     *
     * <pre>
     * 主动技能升级
     * </pre>
     */
    public static final int TYPE_ACTIVE_SKILL_VALUE = 12;
    /**
     * <code>TYPE_SENIOR_PASSIVE_SKILL = 13;</code>
     *
     * <pre>
     * 被动高级技能升级
     * </pre>
     */
    public static final int TYPE_SENIOR_PASSIVE_SKILL_VALUE = 13;
    /**
     * <code>TYPE_JUNIOR_PASSIVE_SKILL = 14;</code>
     *
     * <pre>
     * 被动初级技能升级
     * </pre>
     */
    public static final int TYPE_JUNIOR_PASSIVE_SKILL_VALUE = 14;
    /**
     * <code>TYPE_SUCCESS_JOIN_YIJUN = 15;</code>
     *
     * <pre>
     * 新人加入义军成功
     * </pre>
     */
    public static final int TYPE_SUCCESS_JOIN_YIJUN_VALUE = 15;
    /**
     * <code>TYPE_YIJUN_MEMBER_UP = 16;</code>
     *
     * <pre>
     * 义军成员升职成功
     * </pre>
     */
    public static final int TYPE_YIJUN_MEMBER_UP_VALUE = 16;
    /**
     * <code>TYPE_YIJUN_TRANSFER = 17;</code>
     *
     * <pre>
     * 义军转让
     * </pre>
     */
    public static final int TYPE_YIJUN_TRANSFER_VALUE = 17;
    /**
     * <code>TYPE_YIJUN_GENERAL_DEMOTION = 18;</code>
     *
     * <pre>
     * 义军成员降职
     * </pre>
     */
    public static final int TYPE_YIJUN_GENERAL_DEMOTION_VALUE = 18;
    /**
     * <code>TYPE_YIJUN_KICKEDOUT = 19;</code>
     *
     * <pre>
     * 义军成员被踢
     * </pre>
     */
    public static final int TYPE_YIJUN_KICKEDOUT_VALUE = 19;
    /**
     * <code>TYPE_SYSTEM = 20;</code>
     *
     * <pre>
     * 系统公告
     * </pre>
     */
    public static final int TYPE_SYSTEM_VALUE = 20;
    /**
     * <code>TYPE_FULL_STAR_DUNGEON = 21;</code>
     *
     * <pre>
     * 满星过副本
     * </pre>
     */
    public static final int TYPE_FULL_STAR_DUNGEON_VALUE = 21;
    /**
     * <code>TYPE_OPEN_SENIOR_PAASIVE_SKILL = 22;</code>
     *
     * <pre>
     * 开启被动技能高级
     * </pre>
     */
    public static final int TYPE_OPEN_SENIOR_PAASIVE_SKILL_VALUE = 22;
    /**
     * <code>TYPE_OPEN_JUNIOR_PAASIVE_SKILL = 23;</code>
     *
     * <pre>
     * 开启被动技能低级
     * </pre>
     */
    public static final int TYPE_OPEN_JUNIOR_PAASIVE_SKILL_VALUE = 23;
    /**
     * <code>TYPE_EVERY_FIVE_INTERVAL_ENHANCE_EQUIPMENT = 24;</code>
     *
     * <pre>
     * 强化橙色或者红色每5级发送类型
     * </pre>
     */
    public static final int TYPE_EVERY_FIVE_INTERVAL_ENHANCE_EQUIPMENT_VALUE = 24;
    /**
     * <code>TYPE_KUNGFU_OPEN = 25;</code>
     *
     * <pre>
     * 开启武学类型
     * </pre>
     */
    public static final int TYPE_KUNGFU_OPEN_VALUE = 25;
    /**
     * <code>TYPE_KUNGFU_LEVEL_UP = 26;</code>
     *
     * <pre>
     * 升级武学类型
     * </pre>
     */
    public static final int TYPE_KUNGFU_LEVEL_UP_VALUE = 26;
    /**
     * <code>TYPE_WORLDBOSS_WILL_OPEN = 27;</code>
     *
     * <pre>
     *世界BOSS活动将要开启
     * </pre>
     */
    public static final int TYPE_WORLDBOSS_WILL_OPEN_VALUE = 27;
    /**
     * <code>TYPE_WORLDBOSS_RANK = 28;</code>
     *
     * <pre>
     *世界BOSS活动结束
     * </pre>
     */
    public static final int TYPE_WORLDBOSS_RANK_VALUE = 28;
    /**
     * <code>TYPE_WORLDBOSS_OPENED = 29;</code>
     */
    public static final int TYPE_WORLDBOSS_OPENED_VALUE = 29;
    /**
     * <code>TYPE_WORLDBOSS_FINAL_ATTACK = 30;</code>
     */
    public static final int TYPE_WORLDBOSS_FINAL_ATTACK_VALUE = 30;
    /**
     * <code>TYPE_STATUES = 31;</code>
     *
     * <pre>
     * 膜拜石像
     * </pre>
     */
    public static final int TYPE_STATUES_VALUE = 31;
    /**
     * <code>TYPE_ACHIEVEMENT_KILL_MONSTER = 32;</code>
     *
     * <pre>
     *杀敌数量
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_KILL_MONSTER_VALUE = 32;
    /**
     * <code>TYPE_ACHIEVEMENT_KILL_BOSS = 33;</code>
     *
     * <pre>
     *杀boss数量
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_KILL_BOSS_VALUE = 33;
    /**
     * <code>TYPE_ACHIEVEMENT_ENHANCE_EQUIP = 34;</code>
     *
     * <pre>
     * 强化装备次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_ENHANCE_EQUIP_VALUE = 34;
    /**
     * <code>TYPE_ACHIEVEMENT_COMPOSE_GEM = 35;</code>
     *
     * <pre>
     * 合成宝石次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_COMPOSE_GEM_VALUE = 35;
    /**
     * <code>TYPE_ACHIEVEMENT_DICE = 36;</code>
     *
     * <pre>
     * 占卜次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_DICE_VALUE = 36;
    /**
     * <code>TYPE_ACHIEVEMENT_ROLE_LEVEL = 37;</code>
     *
     * <pre>
     * 角色等级
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_ROLE_LEVEL_VALUE = 37;
    /**
     * <code>TYPE_ACHIEVEMENT_AREANA_RANK = 38;</code>
     *
     * <pre>
     * 竞技场排名
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_AREANA_RANK_VALUE = 38;
    /**
     * <code>TYPE_ACHIEVEMENT_FIGHT = 39;</code>
     *
     * <pre>
     * 战力
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_FIGHT_VALUE = 39;
    /**
     * <code>TYPE_ACHIEVEMENT_COPPER_0 = 40;</code>
     *
     * <pre>
     *铜钱数量１　　   铜钱=0
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_COPPER_0_VALUE = 40;
    /**
     * <code>TYPE_ACHIEVEMENT_COPPER_1 = 41;</code>
     *
     * <pre>
     * 铜钱数量２      铜钱=1
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_COPPER_1_VALUE = 41;
    /**
     * <code>TYPE_ACHIEVEMENT_COPPER_OTHER = 42;</code>
     *
     * <pre>
     * 铜钱数量３      其他
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_COPPER_OTHER_VALUE = 42;
    /**
     * <code>TYPE_ACHIEVEMENT_ONLINE_TIME = 43;</code>
     *
     * <pre>
     * 在线时长
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_ONLINE_TIME_VALUE = 43;
    /**
     * <code>TYPE_ACHIEVEMENT_DUNGEON = 44;</code>
     *
     * <pre>
     * 关卡进度
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_DUNGEON_VALUE = 44;
    /**
     * <code>TYPE_ACHIEVEMENT_DAILY_MISSION = 45;</code>
     *
     * <pre>
     * 完成日常任务数量
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_DAILY_MISSION_VALUE = 45;
    /**
     * <code>TYPE_ACHIEVEMENT_KUNGFU_LEVEL_UP = 46;</code>
     *
     * <pre>
     * 武学升级次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_KUNGFU_LEVEL_UP_VALUE = 46;
    /**
     * <code>TYPE_ACHIEVEMENT_PASSIVE_LEVEL_UP = 47;</code>
     *
     * <pre>
     * 被动技能升级次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_PASSIVE_LEVEL_UP_VALUE = 47;
    /**
     * <code>TYPE_ACHIEVEMENT_YIJUNSKILL_LEVEL_UP = 48;</code>
     *
     * <pre>
     * 义军技能升级次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_YIJUNSKILL_LEVEL_UP_VALUE = 48;
    /**
     * <code>TYPE_ACHIEVEMENT_GAMBLE = 49;</code>
     *
     * <pre>
     * 摇色子次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_GAMBLE_VALUE = 49;
    /**
     * <code>TYPE_ACHIEVEMENT_GOLDCHEST = 50;</code>
     *
     * <pre>
     * 金宝箱抽奖次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_GOLDCHEST_VALUE = 50;
    /**
     * <code>TYPE_ACHIEVEMENT_SPECIAL_DUNGEON = 51;</code>
     *
     * <pre>
     * 藏经阁次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_SPECIAL_DUNGEON_VALUE = 51;
    /**
     * <code>TYPE_ACHIEVEMENT_WORLDBOSS = 52;</code>
     *
     * <pre>
     * 累积世界boss次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_WORLDBOSS_VALUE = 52;
    /**
     * <code>TYPE_ACHIEVEMENT_MONEY_TREE = 53;</code>
     *
     * <pre>
     * 摇钱树次数
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_MONEY_TREE_VALUE = 53;
    /**
     * <code>TYPE_ACHIEVEMENT_KUNGFU_COLLECT = 54;</code>
     *
     * <pre>
     *武学收集
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_KUNGFU_COLLECT_VALUE = 54;
    /**
     * <code>TYPE_ACHIEVEMENT_YIJUN_CAPTURE = 55;</code>
     *
     * <pre>
     *义军掠夺
     * </pre>
     */
    public static final int TYPE_ACHIEVEMENT_YIJUN_CAPTURE_VALUE = 55;
    /**
     * <code>TYPE_DUNGEON_RANK = 70;</code>
     *
     * <pre>
     * 副本排行发生变化,发送跑马灯
     * </pre>
     */
    public static final int TYPE_DUNGEON_RANK_VALUE = 70;
    /**
     * <code>TYPE_KUNGFU_REFERESH_STAR = 71;</code>
     *
     * <pre>
     * 武学升星
     * </pre>
     */
    public static final int TYPE_KUNGFU_REFERESH_STAR_VALUE = 71;
    /**
     * <code>TYPE_YIJUNBOSS_WILL_OPEN = 72;</code>
     */
    public static final int TYPE_YIJUNBOSS_WILL_OPEN_VALUE = 72;
    /**
     * <code>TYPE_YIJUNBOSS_RANK = 73;</code>
     */
    public static final int TYPE_YIJUNBOSS_RANK_VALUE = 73;
    /**
     * <code>TYPE_YIJUNBOSS_OPENED = 74;</code>
     */
    public static final int TYPE_YIJUNBOSS_OPENED_VALUE = 74;
    /**
     * <code>TYPE_YIJUNBOSS_FINAL_ATTACK = 75;</code>
     */
    public static final int TYPE_YIJUNBOSS_FINAL_ATTACK_VALUE = 75;


    public final int getNumber() { return value; }

    public static MarqueType valueOf(int value) {
      switch (value) {
        case 1: return TYPE_GAMBLE;
        case 2: return TYPE_ACTIVITY;
        case 3: return TYPE_GUAXIANG;
        case 4: return TYPE_VIP_GIFT;
        case 5: return TYPE_STONE_COMBINE;
        case 6: return TYPE_VIP_LEVEL_UP;
        case 7: return TYPE_EQUIPE_STRONG;
        case 8: return TYPE_ARENA;
        case 9: return TYPE_YIJUN_LEVEL_UP;
        case 10: return TYPE_YIJUN_JIANZHU;
        case 11: return TYPE_SKILL_MAX;
        case 12: return TYPE_ACTIVE_SKILL;
        case 13: return TYPE_SENIOR_PASSIVE_SKILL;
        case 14: return TYPE_JUNIOR_PASSIVE_SKILL;
        case 15: return TYPE_SUCCESS_JOIN_YIJUN;
        case 16: return TYPE_YIJUN_MEMBER_UP;
        case 17: return TYPE_YIJUN_TRANSFER;
        case 18: return TYPE_YIJUN_GENERAL_DEMOTION;
        case 19: return TYPE_YIJUN_KICKEDOUT;
        case 20: return TYPE_SYSTEM;
        case 21: return TYPE_FULL_STAR_DUNGEON;
        case 22: return TYPE_OPEN_SENIOR_PAASIVE_SKILL;
        case 23: return TYPE_OPEN_JUNIOR_PAASIVE_SKILL;
        case 24: return TYPE_EVERY_FIVE_INTERVAL_ENHANCE_EQUIPMENT;
        case 25: return TYPE_KUNGFU_OPEN;
        case 26: return TYPE_KUNGFU_LEVEL_UP;
        case 27: return TYPE_WORLDBOSS_WILL_OPEN;
        case 28: return TYPE_WORLDBOSS_RANK;
        case 29: return TYPE_WORLDBOSS_OPENED;
        case 30: return TYPE_WORLDBOSS_FINAL_ATTACK;
        case 31: return TYPE_STATUES;
        case 32: return TYPE_ACHIEVEMENT_KILL_MONSTER;
        case 33: return TYPE_ACHIEVEMENT_KILL_BOSS;
        case 34: return TYPE_ACHIEVEMENT_ENHANCE_EQUIP;
        case 35: return TYPE_ACHIEVEMENT_COMPOSE_GEM;
        case 36: return TYPE_ACHIEVEMENT_DICE;
        case 37: return TYPE_ACHIEVEMENT_ROLE_LEVEL;
        case 38: return TYPE_ACHIEVEMENT_AREANA_RANK;
        case 39: return TYPE_ACHIEVEMENT_FIGHT;
        case 40: return TYPE_ACHIEVEMENT_COPPER_0;
        case 41: return TYPE_ACHIEVEMENT_COPPER_1;
        case 42: return TYPE_ACHIEVEMENT_COPPER_OTHER;
        case 43: return TYPE_ACHIEVEMENT_ONLINE_TIME;
        case 44: return TYPE_ACHIEVEMENT_DUNGEON;
        case 45: return TYPE_ACHIEVEMENT_DAILY_MISSION;
        case 46: return TYPE_ACHIEVEMENT_KUNGFU_LEVEL_UP;
        case 47: return TYPE_ACHIEVEMENT_PASSIVE_LEVEL_UP;
        case 48: return TYPE_ACHIEVEMENT_YIJUNSKILL_LEVEL_UP;
        case 49: return TYPE_ACHIEVEMENT_GAMBLE;
        case 50: return TYPE_ACHIEVEMENT_GOLDCHEST;
        case 51: return TYPE_ACHIEVEMENT_SPECIAL_DUNGEON;
        case 52: return TYPE_ACHIEVEMENT_WORLDBOSS;
        case 53: return TYPE_ACHIEVEMENT_MONEY_TREE;
        case 54: return TYPE_ACHIEVEMENT_KUNGFU_COLLECT;
        case 55: return TYPE_ACHIEVEMENT_YIJUN_CAPTURE;
        case 70: return TYPE_DUNGEON_RANK;
        case 71: return TYPE_KUNGFU_REFERESH_STAR;
        case 72: return TYPE_YIJUNBOSS_WILL_OPEN;
        case 73: return TYPE_YIJUNBOSS_RANK;
        case 74: return TYPE_YIJUNBOSS_OPENED;
        case 75: return TYPE_YIJUNBOSS_FINAL_ATTACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MarqueType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MarqueType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MarqueType>() {
            public MarqueType findValueByNumber(int number) {
              return MarqueType.valueOf(number);
            }
          };

    private final int value;

    private MarqueType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.MarqueType)
  }

  /**
   * Protobuf enum {@code sanguo.SweepDungeonType}
   */
  public enum SweepDungeonType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>SWEEP_DUNGEON_ALL_POWER = 1;</code>
     *
     * <pre>
     * 扫荡全部体力副本
     * </pre>
     */
    SWEEP_DUNGEON_ALL_POWER(0, 1),
    /**
     * <code>SWEEP_DUNGEON_TWO_TIMES = 2;</code>
     *
     * <pre>
     * 扫荡2回副本
     * </pre>
     */
    SWEEP_DUNGEON_TWO_TIMES(1, 2),
    /**
     * <code>SWEEP_DUNGEON_FOUR_IMES = 3;</code>
     *
     * <pre>
     * 扫荡4回副本
     * </pre>
     */
    SWEEP_DUNGEON_FOUR_IMES(2, 3),
    /**
     * <code>SWEEP_TONGTIAN_TOWER = 4;</code>
     *
     * <pre>
     *扫荡通天塔
     * </pre>
     */
    SWEEP_TONGTIAN_TOWER(3, 4),
    ;

    /**
     * <code>SWEEP_DUNGEON_ALL_POWER = 1;</code>
     *
     * <pre>
     * 扫荡全部体力副本
     * </pre>
     */
    public static final int SWEEP_DUNGEON_ALL_POWER_VALUE = 1;
    /**
     * <code>SWEEP_DUNGEON_TWO_TIMES = 2;</code>
     *
     * <pre>
     * 扫荡2回副本
     * </pre>
     */
    public static final int SWEEP_DUNGEON_TWO_TIMES_VALUE = 2;
    /**
     * <code>SWEEP_DUNGEON_FOUR_IMES = 3;</code>
     *
     * <pre>
     * 扫荡4回副本
     * </pre>
     */
    public static final int SWEEP_DUNGEON_FOUR_IMES_VALUE = 3;
    /**
     * <code>SWEEP_TONGTIAN_TOWER = 4;</code>
     *
     * <pre>
     *扫荡通天塔
     * </pre>
     */
    public static final int SWEEP_TONGTIAN_TOWER_VALUE = 4;


    public final int getNumber() { return value; }

    public static SweepDungeonType valueOf(int value) {
      switch (value) {
        case 1: return SWEEP_DUNGEON_ALL_POWER;
        case 2: return SWEEP_DUNGEON_TWO_TIMES;
        case 3: return SWEEP_DUNGEON_FOUR_IMES;
        case 4: return SWEEP_TONGTIAN_TOWER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SweepDungeonType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SweepDungeonType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SweepDungeonType>() {
            public SweepDungeonType findValueByNumber(int number) {
              return SweepDungeonType.valueOf(number);
            }
          };

    private final int value;

    private SweepDungeonType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.SweepDungeonType)
  }

  /**
   * Protobuf enum {@code sanguo.SweepDungeon}
   */
  public enum SweepDungeon
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ONE_SWEEP_COST_POWER = 10;</code>
     *
     * <pre>
     * 扫荡一次副本所需体力
     * </pre>
     */
    ONE_SWEEP_COST_POWER(0, 10),
    /**
     * <code>ACCELERATE_SWEEP_COST_GOLD = 1;</code>
     *
     * <pre>
     * 扫荡加速,每分钟1元宝
     * </pre>
     */
    ACCELERATE_SWEEP_COST_GOLD(1, 1),
    ;

    /**
     * <code>ONE_SWEEP_COST_POWER = 10;</code>
     *
     * <pre>
     * 扫荡一次副本所需体力
     * </pre>
     */
    public static final int ONE_SWEEP_COST_POWER_VALUE = 10;
    /**
     * <code>ACCELERATE_SWEEP_COST_GOLD = 1;</code>
     *
     * <pre>
     * 扫荡加速,每分钟1元宝
     * </pre>
     */
    public static final int ACCELERATE_SWEEP_COST_GOLD_VALUE = 1;


    public final int getNumber() { return value; }

    public static SweepDungeon valueOf(int value) {
      switch (value) {
        case 10: return ONE_SWEEP_COST_POWER;
        case 1: return ACCELERATE_SWEEP_COST_GOLD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SweepDungeon>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SweepDungeon>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SweepDungeon>() {
            public SweepDungeon findValueByNumber(int number) {
              return SweepDungeon.valueOf(number);
            }
          };

    private final int value;

    private SweepDungeon(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.SweepDungeon)
  }

  /**
   * Protobuf enum {@code sanguo.KickOutReason}
   *
   * <pre>
   * 玩家被踢下线的原因
   * </pre>
   */
  public enum KickOutReason
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>LOGIN_OTHER_PLACE = 1;</code>
     *
     * <pre>
     * 账号在别的设备上登录
     * </pre>
     */
    LOGIN_OTHER_PLACE(0, 1),
    /**
     * <code>GM_LOCK_ACCOUNT = 2;</code>
     *
     * <pre>
     * GM封号
     * </pre>
     */
    GM_LOCK_ACCOUNT(1, 2),
    /**
     * <code>GM_KICK_ROLE = 3;</code>
     *
     * <pre>
     * GM踢人
     * </pre>
     */
    GM_KICK_ROLE(2, 3),
    /**
     * <code>GM_LOCK_ROLE = 4;</code>
     *
     * <pre>
     * GM封角色
     * </pre>
     */
    GM_LOCK_ROLE(3, 4),
    ;

    /**
     * <code>LOGIN_OTHER_PLACE = 1;</code>
     *
     * <pre>
     * 账号在别的设备上登录
     * </pre>
     */
    public static final int LOGIN_OTHER_PLACE_VALUE = 1;
    /**
     * <code>GM_LOCK_ACCOUNT = 2;</code>
     *
     * <pre>
     * GM封号
     * </pre>
     */
    public static final int GM_LOCK_ACCOUNT_VALUE = 2;
    /**
     * <code>GM_KICK_ROLE = 3;</code>
     *
     * <pre>
     * GM踢人
     * </pre>
     */
    public static final int GM_KICK_ROLE_VALUE = 3;
    /**
     * <code>GM_LOCK_ROLE = 4;</code>
     *
     * <pre>
     * GM封角色
     * </pre>
     */
    public static final int GM_LOCK_ROLE_VALUE = 4;


    public final int getNumber() { return value; }

    public static KickOutReason valueOf(int value) {
      switch (value) {
        case 1: return LOGIN_OTHER_PLACE;
        case 2: return GM_LOCK_ACCOUNT;
        case 3: return GM_KICK_ROLE;
        case 4: return GM_LOCK_ROLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KickOutReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<KickOutReason>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KickOutReason>() {
            public KickOutReason findValueByNumber(int number) {
              return KickOutReason.valueOf(number);
            }
          };

    private final int value;

    private KickOutReason(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.KickOutReason)
  }

  /**
   * Protobuf enum {@code sanguo.Priority}
   */
  public enum Priority
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>SYSTEM_PRIORITY = 1;</code>
     *
     * <pre>
     * 系统优先级
     * </pre>
     */
    SYSTEM_PRIORITY(0, 1),
    /**
     * <code>OTHER_PRIORITY = 2;</code>
     *
     * <pre>
     * 其他消息优先级
     * </pre>
     */
    OTHER_PRIORITY(1, 2),
    ;

    /**
     * <code>SYSTEM_PRIORITY = 1;</code>
     *
     * <pre>
     * 系统优先级
     * </pre>
     */
    public static final int SYSTEM_PRIORITY_VALUE = 1;
    /**
     * <code>OTHER_PRIORITY = 2;</code>
     *
     * <pre>
     * 其他消息优先级
     * </pre>
     */
    public static final int OTHER_PRIORITY_VALUE = 2;


    public final int getNumber() { return value; }

    public static Priority valueOf(int value) {
      switch (value) {
        case 1: return SYSTEM_PRIORITY;
        case 2: return OTHER_PRIORITY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Priority>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Priority>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Priority>() {
            public Priority findValueByNumber(int number) {
              return Priority.valueOf(number);
            }
          };

    private final int value;

    private Priority(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.Priority)
  }

  /**
   * Protobuf enum {@code sanguo.GambleEquipCostType}
   */
  public enum GambleEquipCostType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_FREE_TIMES = 1;</code>
     */
    TYPE_FREE_TIMES(0, 1),
    /**
     * <code>TYPE_TICKET_COST = 2;</code>
     */
    TYPE_TICKET_COST(1, 2),
    /**
     * <code>TYPE_JADE_COST = 3;</code>
     */
    TYPE_JADE_COST(2, 3),
    /**
     * <code>TYPE_JADE_MUTIL_COST = 4;</code>
     *
     * <pre>
     * 金宝箱使用玉石多连抽
     * </pre>
     */
    TYPE_JADE_MUTIL_COST(3, 4),
    /**
     * <code>TYPE_JADE_FIRST_GOLD = 5;</code>
     *
     * <pre>
     * 金宝箱第一次抽奖
     * </pre>
     */
    TYPE_JADE_FIRST_GOLD(4, 5),
    ;

    /**
     * <code>TYPE_FREE_TIMES = 1;</code>
     */
    public static final int TYPE_FREE_TIMES_VALUE = 1;
    /**
     * <code>TYPE_TICKET_COST = 2;</code>
     */
    public static final int TYPE_TICKET_COST_VALUE = 2;
    /**
     * <code>TYPE_JADE_COST = 3;</code>
     */
    public static final int TYPE_JADE_COST_VALUE = 3;
    /**
     * <code>TYPE_JADE_MUTIL_COST = 4;</code>
     *
     * <pre>
     * 金宝箱使用玉石多连抽
     * </pre>
     */
    public static final int TYPE_JADE_MUTIL_COST_VALUE = 4;
    /**
     * <code>TYPE_JADE_FIRST_GOLD = 5;</code>
     *
     * <pre>
     * 金宝箱第一次抽奖
     * </pre>
     */
    public static final int TYPE_JADE_FIRST_GOLD_VALUE = 5;


    public final int getNumber() { return value; }

    public static GambleEquipCostType valueOf(int value) {
      switch (value) {
        case 1: return TYPE_FREE_TIMES;
        case 2: return TYPE_TICKET_COST;
        case 3: return TYPE_JADE_COST;
        case 4: return TYPE_JADE_MUTIL_COST;
        case 5: return TYPE_JADE_FIRST_GOLD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GambleEquipCostType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GambleEquipCostType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GambleEquipCostType>() {
            public GambleEquipCostType findValueByNumber(int number) {
              return GambleEquipCostType.valueOf(number);
            }
          };

    private final int value;

    private GambleEquipCostType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.GambleEquipCostType)
  }

  /**
   * Protobuf enum {@code sanguo.WorldbossCountDownType}
   */
  public enum WorldbossCountDownType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>NONE = 1;</code>
     *
     * <pre>
     * 没有倒计时
     * </pre>
     */
    NONE(0, 1),
    /**
     * <code>DUNGEON = 2;</code>
     *
     * <pre>
     * 副本开启倒计时
     * </pre>
     */
    DUNGEON(1, 2),
    /**
     * <code>RESURRECTION = 3;</code>
     *
     * <pre>
     * 复活倒计时
     * </pre>
     */
    RESURRECTION(2, 3),
    ;

    /**
     * <code>NONE = 1;</code>
     *
     * <pre>
     * 没有倒计时
     * </pre>
     */
    public static final int NONE_VALUE = 1;
    /**
     * <code>DUNGEON = 2;</code>
     *
     * <pre>
     * 副本开启倒计时
     * </pre>
     */
    public static final int DUNGEON_VALUE = 2;
    /**
     * <code>RESURRECTION = 3;</code>
     *
     * <pre>
     * 复活倒计时
     * </pre>
     */
    public static final int RESURRECTION_VALUE = 3;


    public final int getNumber() { return value; }

    public static WorldbossCountDownType valueOf(int value) {
      switch (value) {
        case 1: return NONE;
        case 2: return DUNGEON;
        case 3: return RESURRECTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WorldbossCountDownType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WorldbossCountDownType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WorldbossCountDownType>() {
            public WorldbossCountDownType findValueByNumber(int number) {
              return WorldbossCountDownType.valueOf(number);
            }
          };

    private final int value;

    private WorldbossCountDownType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.WorldbossCountDownType)
  }

  /**
   * Protobuf enum {@code sanguo.WorldbossType}
   */
  public enum WorldbossType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>WORLD_BOSS = 1;</code>
     *
     * <pre>
     * 世界boss
     * </pre>
     */
    WORLD_BOSS(0, 1),
    /**
     * <code>YIJUN_BOSS = 2;</code>
     *
     * <pre>
     * 义军boss
     * </pre>
     */
    YIJUN_BOSS(1, 2),
    ;

    /**
     * <code>WORLD_BOSS = 1;</code>
     *
     * <pre>
     * 世界boss
     * </pre>
     */
    public static final int WORLD_BOSS_VALUE = 1;
    /**
     * <code>YIJUN_BOSS = 2;</code>
     *
     * <pre>
     * 义军boss
     * </pre>
     */
    public static final int YIJUN_BOSS_VALUE = 2;


    public final int getNumber() { return value; }

    public static WorldbossType valueOf(int value) {
      switch (value) {
        case 1: return WORLD_BOSS;
        case 2: return YIJUN_BOSS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WorldbossType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WorldbossType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WorldbossType>() {
            public WorldbossType findValueByNumber(int number) {
              return WorldbossType.valueOf(number);
            }
          };

    private final int value;

    private WorldbossType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.WorldbossType)
  }

  /**
   * Protobuf enum {@code sanguo.StatuesType}
   */
  public enum StatuesType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_YIJUN_FIGHT_MARSH = 1;</code>
     *
     * <pre>
     * 义军战力第一的义军主帅
     * </pre>
     */
    TYPE_YIJUN_FIGHT_MARSH(0, 1),
    /**
     * <code>TYPE_SERVER_FIGHT_FIRST = 2;</code>
     *
     * <pre>
     * 服务器战力第一
     * </pre>
     */
    TYPE_SERVER_FIGHT_FIRST(1, 2),
    /**
     * <code>TYPE_ARENA_FIRST = 3;</code>
     *
     * <pre>
     * 竞技场第一
     * </pre>
     */
    TYPE_ARENA_FIRST(2, 3),
    ;

    /**
     * <code>TYPE_YIJUN_FIGHT_MARSH = 1;</code>
     *
     * <pre>
     * 义军战力第一的义军主帅
     * </pre>
     */
    public static final int TYPE_YIJUN_FIGHT_MARSH_VALUE = 1;
    /**
     * <code>TYPE_SERVER_FIGHT_FIRST = 2;</code>
     *
     * <pre>
     * 服务器战力第一
     * </pre>
     */
    public static final int TYPE_SERVER_FIGHT_FIRST_VALUE = 2;
    /**
     * <code>TYPE_ARENA_FIRST = 3;</code>
     *
     * <pre>
     * 竞技场第一
     * </pre>
     */
    public static final int TYPE_ARENA_FIRST_VALUE = 3;


    public final int getNumber() { return value; }

    public static StatuesType valueOf(int value) {
      switch (value) {
        case 1: return TYPE_YIJUN_FIGHT_MARSH;
        case 2: return TYPE_SERVER_FIGHT_FIRST;
        case 3: return TYPE_ARENA_FIRST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StatuesType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<StatuesType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StatuesType>() {
            public StatuesType findValueByNumber(int number) {
              return StatuesType.valueOf(number);
            }
          };

    private final int value;

    private StatuesType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.StatuesType)
  }

  /**
   * Protobuf enum {@code sanguo.BuffType}
   */
  public enum BuffType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_ALL_ATTRIBUTES = 1;</code>
     *
     * <pre>
     * 全属性
     * </pre>
     */
    TYPE_ALL_ATTRIBUTES(0, 1),
    /**
     * <code>TYPE_EXP = 2;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    TYPE_EXP(1, 2),
    /**
     * <code>TYPE_COPPER = 3;</code>
     *
     * <pre>
     * 铜钱
     * </pre>
     */
    TYPE_COPPER(2, 3),
    /**
     * <code>TYPE_WORLDBOSS = 4;</code>
     *
     * <pre>
     * 世界BOSS
     * </pre>
     */
    TYPE_WORLDBOSS(3, 4),
    /**
     * <code>TYPE_YIJUNBOSS = 5;</code>
     *
     * <pre>
     * 义军BOSS
     * </pre>
     */
    TYPE_YIJUNBOSS(4, 5),
    ;

    /**
     * <code>TYPE_ALL_ATTRIBUTES = 1;</code>
     *
     * <pre>
     * 全属性
     * </pre>
     */
    public static final int TYPE_ALL_ATTRIBUTES_VALUE = 1;
    /**
     * <code>TYPE_EXP = 2;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    public static final int TYPE_EXP_VALUE = 2;
    /**
     * <code>TYPE_COPPER = 3;</code>
     *
     * <pre>
     * 铜钱
     * </pre>
     */
    public static final int TYPE_COPPER_VALUE = 3;
    /**
     * <code>TYPE_WORLDBOSS = 4;</code>
     *
     * <pre>
     * 世界BOSS
     * </pre>
     */
    public static final int TYPE_WORLDBOSS_VALUE = 4;
    /**
     * <code>TYPE_YIJUNBOSS = 5;</code>
     *
     * <pre>
     * 义军BOSS
     * </pre>
     */
    public static final int TYPE_YIJUNBOSS_VALUE = 5;


    public final int getNumber() { return value; }

    public static BuffType valueOf(int value) {
      switch (value) {
        case 1: return TYPE_ALL_ATTRIBUTES;
        case 2: return TYPE_EXP;
        case 3: return TYPE_COPPER;
        case 4: return TYPE_WORLDBOSS;
        case 5: return TYPE_YIJUNBOSS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BuffType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BuffType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BuffType>() {
            public BuffType findValueByNumber(int number) {
              return BuffType.valueOf(number);
            }
          };

    private final int value;

    private BuffType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.BuffType)
  }

  /**
   * Protobuf enum {@code sanguo.WorshipItemPollType}
   */
  public enum WorshipItemPollType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>WORSHIP_OTHER_ITEMS = 1;</code>
     *
     * <pre>
     * 石像掉路物品
     * </pre>
     */
    WORSHIP_OTHER_ITEMS(0, 1),
    /**
     * <code>WORSHIP_NO_GOODS_ITEM = 20000;</code>
     *
     * <pre>
     * 表示石像雕像无物品ID
     * </pre>
     */
    WORSHIP_NO_GOODS_ITEM(1, 20000),
    ;

    /**
     * <code>WORSHIP_OTHER_ITEMS = 1;</code>
     *
     * <pre>
     * 石像掉路物品
     * </pre>
     */
    public static final int WORSHIP_OTHER_ITEMS_VALUE = 1;
    /**
     * <code>WORSHIP_NO_GOODS_ITEM = 20000;</code>
     *
     * <pre>
     * 表示石像雕像无物品ID
     * </pre>
     */
    public static final int WORSHIP_NO_GOODS_ITEM_VALUE = 20000;


    public final int getNumber() { return value; }

    public static WorshipItemPollType valueOf(int value) {
      switch (value) {
        case 1: return WORSHIP_OTHER_ITEMS;
        case 20000: return WORSHIP_NO_GOODS_ITEM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WorshipItemPollType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WorshipItemPollType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WorshipItemPollType>() {
            public WorshipItemPollType findValueByNumber(int number) {
              return WorshipItemPollType.valueOf(number);
            }
          };

    private final int value;

    private WorshipItemPollType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.WorshipItemPollType)
  }

  /**
   * Protobuf enum {@code sanguo.RechargeType}
   */
  public enum RechargeType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>OTHER_TYPE = 0;</code>
     *
     * <pre>
     * 表示其他类型
     * </pre>
     */
    OTHER_TYPE(0, 0),
    /**
     * <code>MONTH_CARD_TYPE = 1;</code>
     *
     * <pre>
     * 表示购买月卡
     * </pre>
     */
    MONTH_CARD_TYPE(1, 1),
    ;

    /**
     * <code>OTHER_TYPE = 0;</code>
     *
     * <pre>
     * 表示其他类型
     * </pre>
     */
    public static final int OTHER_TYPE_VALUE = 0;
    /**
     * <code>MONTH_CARD_TYPE = 1;</code>
     *
     * <pre>
     * 表示购买月卡
     * </pre>
     */
    public static final int MONTH_CARD_TYPE_VALUE = 1;


    public final int getNumber() { return value; }

    public static RechargeType valueOf(int value) {
      switch (value) {
        case 0: return OTHER_TYPE;
        case 1: return MONTH_CARD_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RechargeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RechargeType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RechargeType>() {
            public RechargeType findValueByNumber(int number) {
              return RechargeType.valueOf(number);
            }
          };

    private final int value;

    private RechargeType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.RechargeType)
  }

  /**
   * Protobuf enum {@code sanguo.BaseMoneyType}
   */
  public enum BaseMoneyType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>COPPER_TYPE = 10001;</code>
     *
     * <pre>
     *铜钱
     * </pre>
     */
    COPPER_TYPE(0, 10001),
    /**
     * <code>GOLD_TYPE = 10002;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    GOLD_TYPE(1, 10002),
    /**
     * <code>JADE_TYPE = 10003;</code>
     *
     * <pre>
     *玉石
     * </pre>
     */
    JADE_TYPE(2, 10003),
    /**
     * <code>HONOR_TYPE = 10004;</code>
     *
     * <pre>
     *荣誉
     * </pre>
     */
    HONOR_TYPE(3, 10004),
    /**
     * <code>JUNGONG_TYPE = 10005;</code>
     *
     * <pre>
     *军功
     * </pre>
     */
    JUNGONG_TYPE(4, 10005),
    /**
     * <code>POWER_TYPE = 10006;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    POWER_TYPE(5, 10006),
    /**
     * <code>COPPER_TICKET_TYPE = 10007;</code>
     *
     * <pre>
     *铜抽奖卷
     * </pre>
     */
    COPPER_TICKET_TYPE(6, 10007),
    /**
     * <code>SILVER_TICKET_TYPE = 10008;</code>
     *
     * <pre>
     *银抽奖券
     * </pre>
     */
    SILVER_TICKET_TYPE(7, 10008),
    /**
     * <code>GOLD_TICKET_TYPE = 10009;</code>
     *
     * <pre>
     *金抽奖券
     * </pre>
     */
    GOLD_TICKET_TYPE(8, 10009),
    /**
     * <code>FRIENDSHIP_TYPE = 10010;</code>
     *
     * <pre>
     *友情点
     * </pre>
     */
    FRIENDSHIP_TYPE(9, 10010),
    /**
     * <code>EXP_TYPE = 10011;</code>
     *
     * <pre>
     *经验值
     * </pre>
     */
    EXP_TYPE(10, 10011),
    /**
     * <code>EXP_CONTRIBUTION = 10012;</code>
     *
     * <pre>
     *贡献
     * </pre>
     */
    EXP_CONTRIBUTION(11, 10012),
    ;

    /**
     * <code>COPPER_TYPE = 10001;</code>
     *
     * <pre>
     *铜钱
     * </pre>
     */
    public static final int COPPER_TYPE_VALUE = 10001;
    /**
     * <code>GOLD_TYPE = 10002;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    public static final int GOLD_TYPE_VALUE = 10002;
    /**
     * <code>JADE_TYPE = 10003;</code>
     *
     * <pre>
     *玉石
     * </pre>
     */
    public static final int JADE_TYPE_VALUE = 10003;
    /**
     * <code>HONOR_TYPE = 10004;</code>
     *
     * <pre>
     *荣誉
     * </pre>
     */
    public static final int HONOR_TYPE_VALUE = 10004;
    /**
     * <code>JUNGONG_TYPE = 10005;</code>
     *
     * <pre>
     *军功
     * </pre>
     */
    public static final int JUNGONG_TYPE_VALUE = 10005;
    /**
     * <code>POWER_TYPE = 10006;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    public static final int POWER_TYPE_VALUE = 10006;
    /**
     * <code>COPPER_TICKET_TYPE = 10007;</code>
     *
     * <pre>
     *铜抽奖卷
     * </pre>
     */
    public static final int COPPER_TICKET_TYPE_VALUE = 10007;
    /**
     * <code>SILVER_TICKET_TYPE = 10008;</code>
     *
     * <pre>
     *银抽奖券
     * </pre>
     */
    public static final int SILVER_TICKET_TYPE_VALUE = 10008;
    /**
     * <code>GOLD_TICKET_TYPE = 10009;</code>
     *
     * <pre>
     *金抽奖券
     * </pre>
     */
    public static final int GOLD_TICKET_TYPE_VALUE = 10009;
    /**
     * <code>FRIENDSHIP_TYPE = 10010;</code>
     *
     * <pre>
     *友情点
     * </pre>
     */
    public static final int FRIENDSHIP_TYPE_VALUE = 10010;
    /**
     * <code>EXP_TYPE = 10011;</code>
     *
     * <pre>
     *经验值
     * </pre>
     */
    public static final int EXP_TYPE_VALUE = 10011;
    /**
     * <code>EXP_CONTRIBUTION = 10012;</code>
     *
     * <pre>
     *贡献
     * </pre>
     */
    public static final int EXP_CONTRIBUTION_VALUE = 10012;


    public final int getNumber() { return value; }

    public static BaseMoneyType valueOf(int value) {
      switch (value) {
        case 10001: return COPPER_TYPE;
        case 10002: return GOLD_TYPE;
        case 10003: return JADE_TYPE;
        case 10004: return HONOR_TYPE;
        case 10005: return JUNGONG_TYPE;
        case 10006: return POWER_TYPE;
        case 10007: return COPPER_TICKET_TYPE;
        case 10008: return SILVER_TICKET_TYPE;
        case 10009: return GOLD_TICKET_TYPE;
        case 10010: return FRIENDSHIP_TYPE;
        case 10011: return EXP_TYPE;
        case 10012: return EXP_CONTRIBUTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BaseMoneyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BaseMoneyType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BaseMoneyType>() {
            public BaseMoneyType findValueByNumber(int number) {
              return BaseMoneyType.valueOf(number);
            }
          };

    private final int value;

    private BaseMoneyType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.BaseMoneyType)
  }

  /**
   * Protobuf enum {@code sanguo.BagType}
   */
  public enum BagType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>GOODS_BAG_TYPE = 1;</code>
     *
     * <pre>
     *物品背包
     * </pre>
     */
    GOODS_BAG_TYPE(0, 1),
    /**
     * <code>GEM_BAG_TYPE = 2;</code>
     *
     * <pre>
     *宝石背包
     * </pre>
     */
    GEM_BAG_TYPE(1, 2),
    /**
     * <code>GUAXIANG_BAG_TYPE = 3;</code>
     *
     * <pre>
     *卦象背包
     * </pre>
     */
    GUAXIANG_BAG_TYPE(2, 3),
    /**
     * <code>PET_BAG_TYPE = 4;</code>
     *
     * <pre>
     *宠物背包
     * </pre>
     */
    PET_BAG_TYPE(3, 4),
    ;

    /**
     * <code>GOODS_BAG_TYPE = 1;</code>
     *
     * <pre>
     *物品背包
     * </pre>
     */
    public static final int GOODS_BAG_TYPE_VALUE = 1;
    /**
     * <code>GEM_BAG_TYPE = 2;</code>
     *
     * <pre>
     *宝石背包
     * </pre>
     */
    public static final int GEM_BAG_TYPE_VALUE = 2;
    /**
     * <code>GUAXIANG_BAG_TYPE = 3;</code>
     *
     * <pre>
     *卦象背包
     * </pre>
     */
    public static final int GUAXIANG_BAG_TYPE_VALUE = 3;
    /**
     * <code>PET_BAG_TYPE = 4;</code>
     *
     * <pre>
     *宠物背包
     * </pre>
     */
    public static final int PET_BAG_TYPE_VALUE = 4;


    public final int getNumber() { return value; }

    public static BagType valueOf(int value) {
      switch (value) {
        case 1: return GOODS_BAG_TYPE;
        case 2: return GEM_BAG_TYPE;
        case 3: return GUAXIANG_BAG_TYPE;
        case 4: return PET_BAG_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BagType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BagType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BagType>() {
            public BagType findValueByNumber(int number) {
              return BagType.valueOf(number);
            }
          };

    private final int value;

    private BagType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.BagType)
  }

  /**
   * Protobuf enum {@code sanguo.SaleState}
   */
  public enum SaleState
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>NORMAL = 0;</code>
     *
     * <pre>
     * 正常
     * </pre>
     */
    NORMAL(0, 0),
    /**
     * <code>SOLD = 1;</code>
     *
     * <pre>
     * 售完
     * </pre>
     */
    SOLD(1, 1),
    ;

    /**
     * <code>NORMAL = 0;</code>
     *
     * <pre>
     * 正常
     * </pre>
     */
    public static final int NORMAL_VALUE = 0;
    /**
     * <code>SOLD = 1;</code>
     *
     * <pre>
     * 售完
     * </pre>
     */
    public static final int SOLD_VALUE = 1;


    public final int getNumber() { return value; }

    public static SaleState valueOf(int value) {
      switch (value) {
        case 0: return NORMAL;
        case 1: return SOLD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SaleState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SaleState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SaleState>() {
            public SaleState findValueByNumber(int number) {
              return SaleState.valueOf(number);
            }
          };

    private final int value;

    private SaleState(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.SaleState)
  }

  /**
   * Protobuf enum {@code sanguo.FriendStatus}
   */
  public enum FriendStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>FRIEND_ACCEPT_UNDONE = 0;</code>
     *
     * <pre>
     * 好友申请未处理
     * </pre>
     */
    FRIEND_ACCEPT_UNDONE(0, 0),
    /**
     * <code>RIEND_ACCEPT_OK = 1;</code>
     *
     * <pre>
     * 同意好友申请
     * </pre>
     */
    RIEND_ACCEPT_OK(1, 1),
    /**
     * <code>FRIEND_ACCEPT_REFUSE = 2;</code>
     *
     * <pre>
     * 好友拒绝
     * </pre>
     */
    FRIEND_ACCEPT_REFUSE(2, 2),
    ;

    /**
     * <code>FRIEND_ACCEPT_UNDONE = 0;</code>
     *
     * <pre>
     * 好友申请未处理
     * </pre>
     */
    public static final int FRIEND_ACCEPT_UNDONE_VALUE = 0;
    /**
     * <code>RIEND_ACCEPT_OK = 1;</code>
     *
     * <pre>
     * 同意好友申请
     * </pre>
     */
    public static final int RIEND_ACCEPT_OK_VALUE = 1;
    /**
     * <code>FRIEND_ACCEPT_REFUSE = 2;</code>
     *
     * <pre>
     * 好友拒绝
     * </pre>
     */
    public static final int FRIEND_ACCEPT_REFUSE_VALUE = 2;


    public final int getNumber() { return value; }

    public static FriendStatus valueOf(int value) {
      switch (value) {
        case 0: return FRIEND_ACCEPT_UNDONE;
        case 1: return RIEND_ACCEPT_OK;
        case 2: return FRIEND_ACCEPT_REFUSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FriendStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FriendStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FriendStatus>() {
            public FriendStatus findValueByNumber(int number) {
              return FriendStatus.valueOf(number);
            }
          };

    private final int value;

    private FriendStatus(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.FriendStatus)
  }

  /**
   * Protobuf enum {@code sanguo.AchievementType}
   */
  public enum AchievementType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ACHIEVEMENT_KILL_MONSTER = 1;</code>
     *
     * <pre>
     *杀敌数量
     * </pre>
     */
    ACHIEVEMENT_KILL_MONSTER(0, 1),
    /**
     * <code>ACHIEVEMENT_KILL_BOSS = 2;</code>
     *
     * <pre>
     *杀boss数量
     * </pre>
     */
    ACHIEVEMENT_KILL_BOSS(1, 2),
    /**
     * <code>ACHIEVEMENT_ENHANCE_EQUIP = 3;</code>
     *
     * <pre>
     * 强化装备次数
     * </pre>
     */
    ACHIEVEMENT_ENHANCE_EQUIP(2, 3),
    /**
     * <code>ACHIEVEMENT_COMPOSE_GEM = 4;</code>
     *
     * <pre>
     * 合成宝石次数
     * </pre>
     */
    ACHIEVEMENT_COMPOSE_GEM(3, 4),
    /**
     * <code>ACHIEVEMENT_DICE = 5;</code>
     *
     * <pre>
     * 占卜次数
     * </pre>
     */
    ACHIEVEMENT_DICE(4, 5),
    /**
     * <code>ACHIEVEMENT_ROLE_LEVEL = 6;</code>
     *
     * <pre>
     * 角色等级
     * </pre>
     */
    ACHIEVEMENT_ROLE_LEVEL(5, 6),
    /**
     * <code>ACHIEVEMENT_AREANA_RANK = 7;</code>
     *
     * <pre>
     * 竞技场排名
     * </pre>
     */
    ACHIEVEMENT_AREANA_RANK(6, 7),
    /**
     * <code>ACHIEVEMENT_FIGHT = 8;</code>
     *
     * <pre>
     * 战力
     * </pre>
     */
    ACHIEVEMENT_FIGHT(7, 8),
    /**
     * <code>ACHIEVEMENT_COPPER_0 = 9;</code>
     *
     * <pre>
     *铜钱数量１　　   铜钱=0
     * </pre>
     */
    ACHIEVEMENT_COPPER_0(8, 9),
    /**
     * <code>ACHIEVEMENT_COPPER_1 = 10;</code>
     *
     * <pre>
     * 铜钱数量２      铜钱=1
     * </pre>
     */
    ACHIEVEMENT_COPPER_1(9, 10),
    /**
     * <code>ACHIEVEMENT_COPPER_OTHER = 11;</code>
     *
     * <pre>
     * 铜钱数量３      其他
     * </pre>
     */
    ACHIEVEMENT_COPPER_OTHER(10, 11),
    /**
     * <code>ACHIEVEMENT_ONLINE_TIME = 12;</code>
     *
     * <pre>
     * 在线时长
     * </pre>
     */
    ACHIEVEMENT_ONLINE_TIME(11, 12),
    /**
     * <code>ACHIEVEMENT_DUNGEON = 13;</code>
     *
     * <pre>
     * 关卡进度
     * </pre>
     */
    ACHIEVEMENT_DUNGEON(12, 13),
    /**
     * <code>ACHIEVEMENT_DAILY_MISSION = 14;</code>
     *
     * <pre>
     * 完成日常任务数量
     * </pre>
     */
    ACHIEVEMENT_DAILY_MISSION(13, 14),
    /**
     * <code>ACHIEVEMENT_KUNGFU_LEVEL_UP = 15;</code>
     *
     * <pre>
     * 武学升级次数
     * </pre>
     */
    ACHIEVEMENT_KUNGFU_LEVEL_UP(14, 15),
    /**
     * <code>ACHIEVEMENT_PASSIVE_LEVEL_UP = 16;</code>
     *
     * <pre>
     * 被动技能升级次数
     * </pre>
     */
    ACHIEVEMENT_PASSIVE_LEVEL_UP(15, 16),
    /**
     * <code>ACHIEVEMENT_YIJUNSKILL_LEVEL_UP = 17;</code>
     *
     * <pre>
     * 义军技能升级次数
     * </pre>
     */
    ACHIEVEMENT_YIJUNSKILL_LEVEL_UP(16, 17),
    /**
     * <code>ACHIEVEMENT_GAMBLE = 18;</code>
     *
     * <pre>
     * 摇色子次数
     * </pre>
     */
    ACHIEVEMENT_GAMBLE(17, 18),
    /**
     * <code>ACHIEVEMENT_GOLDCHEST = 19;</code>
     *
     * <pre>
     * 金宝箱抽奖次数
     * </pre>
     */
    ACHIEVEMENT_GOLDCHEST(18, 19),
    /**
     * <code>ACHIEVEMENT_SPECIAL_DUNGEON = 20;</code>
     *
     * <pre>
     * 藏经阁次数
     * </pre>
     */
    ACHIEVEMENT_SPECIAL_DUNGEON(19, 20),
    /**
     * <code>ACHIEVEMENT_WORLDBOSS = 21;</code>
     *
     * <pre>
     * 累积世界boss次数
     * </pre>
     */
    ACHIEVEMENT_WORLDBOSS(20, 21),
    /**
     * <code>ACHIEVEMENT_MONEY_TREE = 22;</code>
     *
     * <pre>
     * 摇钱树次数
     * </pre>
     */
    ACHIEVEMENT_MONEY_TREE(21, 22),
    /**
     * <code>ACHIEVEMENT_KUNGFU_COLLECT = 23;</code>
     *
     * <pre>
     *武学收集
     * </pre>
     */
    ACHIEVEMENT_KUNGFU_COLLECT(22, 23),
    /**
     * <code>ACHIEVEMENT_YIJUN_CAPTURE = 24;</code>
     *
     * <pre>
     *义军掠夺
     * </pre>
     */
    ACHIEVEMENT_YIJUN_CAPTURE(23, 24),
    ;

    /**
     * <code>ACHIEVEMENT_KILL_MONSTER = 1;</code>
     *
     * <pre>
     *杀敌数量
     * </pre>
     */
    public static final int ACHIEVEMENT_KILL_MONSTER_VALUE = 1;
    /**
     * <code>ACHIEVEMENT_KILL_BOSS = 2;</code>
     *
     * <pre>
     *杀boss数量
     * </pre>
     */
    public static final int ACHIEVEMENT_KILL_BOSS_VALUE = 2;
    /**
     * <code>ACHIEVEMENT_ENHANCE_EQUIP = 3;</code>
     *
     * <pre>
     * 强化装备次数
     * </pre>
     */
    public static final int ACHIEVEMENT_ENHANCE_EQUIP_VALUE = 3;
    /**
     * <code>ACHIEVEMENT_COMPOSE_GEM = 4;</code>
     *
     * <pre>
     * 合成宝石次数
     * </pre>
     */
    public static final int ACHIEVEMENT_COMPOSE_GEM_VALUE = 4;
    /**
     * <code>ACHIEVEMENT_DICE = 5;</code>
     *
     * <pre>
     * 占卜次数
     * </pre>
     */
    public static final int ACHIEVEMENT_DICE_VALUE = 5;
    /**
     * <code>ACHIEVEMENT_ROLE_LEVEL = 6;</code>
     *
     * <pre>
     * 角色等级
     * </pre>
     */
    public static final int ACHIEVEMENT_ROLE_LEVEL_VALUE = 6;
    /**
     * <code>ACHIEVEMENT_AREANA_RANK = 7;</code>
     *
     * <pre>
     * 竞技场排名
     * </pre>
     */
    public static final int ACHIEVEMENT_AREANA_RANK_VALUE = 7;
    /**
     * <code>ACHIEVEMENT_FIGHT = 8;</code>
     *
     * <pre>
     * 战力
     * </pre>
     */
    public static final int ACHIEVEMENT_FIGHT_VALUE = 8;
    /**
     * <code>ACHIEVEMENT_COPPER_0 = 9;</code>
     *
     * <pre>
     *铜钱数量１　　   铜钱=0
     * </pre>
     */
    public static final int ACHIEVEMENT_COPPER_0_VALUE = 9;
    /**
     * <code>ACHIEVEMENT_COPPER_1 = 10;</code>
     *
     * <pre>
     * 铜钱数量２      铜钱=1
     * </pre>
     */
    public static final int ACHIEVEMENT_COPPER_1_VALUE = 10;
    /**
     * <code>ACHIEVEMENT_COPPER_OTHER = 11;</code>
     *
     * <pre>
     * 铜钱数量３      其他
     * </pre>
     */
    public static final int ACHIEVEMENT_COPPER_OTHER_VALUE = 11;
    /**
     * <code>ACHIEVEMENT_ONLINE_TIME = 12;</code>
     *
     * <pre>
     * 在线时长
     * </pre>
     */
    public static final int ACHIEVEMENT_ONLINE_TIME_VALUE = 12;
    /**
     * <code>ACHIEVEMENT_DUNGEON = 13;</code>
     *
     * <pre>
     * 关卡进度
     * </pre>
     */
    public static final int ACHIEVEMENT_DUNGEON_VALUE = 13;
    /**
     * <code>ACHIEVEMENT_DAILY_MISSION = 14;</code>
     *
     * <pre>
     * 完成日常任务数量
     * </pre>
     */
    public static final int ACHIEVEMENT_DAILY_MISSION_VALUE = 14;
    /**
     * <code>ACHIEVEMENT_KUNGFU_LEVEL_UP = 15;</code>
     *
     * <pre>
     * 武学升级次数
     * </pre>
     */
    public static final int ACHIEVEMENT_KUNGFU_LEVEL_UP_VALUE = 15;
    /**
     * <code>ACHIEVEMENT_PASSIVE_LEVEL_UP = 16;</code>
     *
     * <pre>
     * 被动技能升级次数
     * </pre>
     */
    public static final int ACHIEVEMENT_PASSIVE_LEVEL_UP_VALUE = 16;
    /**
     * <code>ACHIEVEMENT_YIJUNSKILL_LEVEL_UP = 17;</code>
     *
     * <pre>
     * 义军技能升级次数
     * </pre>
     */
    public static final int ACHIEVEMENT_YIJUNSKILL_LEVEL_UP_VALUE = 17;
    /**
     * <code>ACHIEVEMENT_GAMBLE = 18;</code>
     *
     * <pre>
     * 摇色子次数
     * </pre>
     */
    public static final int ACHIEVEMENT_GAMBLE_VALUE = 18;
    /**
     * <code>ACHIEVEMENT_GOLDCHEST = 19;</code>
     *
     * <pre>
     * 金宝箱抽奖次数
     * </pre>
     */
    public static final int ACHIEVEMENT_GOLDCHEST_VALUE = 19;
    /**
     * <code>ACHIEVEMENT_SPECIAL_DUNGEON = 20;</code>
     *
     * <pre>
     * 藏经阁次数
     * </pre>
     */
    public static final int ACHIEVEMENT_SPECIAL_DUNGEON_VALUE = 20;
    /**
     * <code>ACHIEVEMENT_WORLDBOSS = 21;</code>
     *
     * <pre>
     * 累积世界boss次数
     * </pre>
     */
    public static final int ACHIEVEMENT_WORLDBOSS_VALUE = 21;
    /**
     * <code>ACHIEVEMENT_MONEY_TREE = 22;</code>
     *
     * <pre>
     * 摇钱树次数
     * </pre>
     */
    public static final int ACHIEVEMENT_MONEY_TREE_VALUE = 22;
    /**
     * <code>ACHIEVEMENT_KUNGFU_COLLECT = 23;</code>
     *
     * <pre>
     *武学收集
     * </pre>
     */
    public static final int ACHIEVEMENT_KUNGFU_COLLECT_VALUE = 23;
    /**
     * <code>ACHIEVEMENT_YIJUN_CAPTURE = 24;</code>
     *
     * <pre>
     *义军掠夺
     * </pre>
     */
    public static final int ACHIEVEMENT_YIJUN_CAPTURE_VALUE = 24;


    public final int getNumber() { return value; }

    public static AchievementType valueOf(int value) {
      switch (value) {
        case 1: return ACHIEVEMENT_KILL_MONSTER;
        case 2: return ACHIEVEMENT_KILL_BOSS;
        case 3: return ACHIEVEMENT_ENHANCE_EQUIP;
        case 4: return ACHIEVEMENT_COMPOSE_GEM;
        case 5: return ACHIEVEMENT_DICE;
        case 6: return ACHIEVEMENT_ROLE_LEVEL;
        case 7: return ACHIEVEMENT_AREANA_RANK;
        case 8: return ACHIEVEMENT_FIGHT;
        case 9: return ACHIEVEMENT_COPPER_0;
        case 10: return ACHIEVEMENT_COPPER_1;
        case 11: return ACHIEVEMENT_COPPER_OTHER;
        case 12: return ACHIEVEMENT_ONLINE_TIME;
        case 13: return ACHIEVEMENT_DUNGEON;
        case 14: return ACHIEVEMENT_DAILY_MISSION;
        case 15: return ACHIEVEMENT_KUNGFU_LEVEL_UP;
        case 16: return ACHIEVEMENT_PASSIVE_LEVEL_UP;
        case 17: return ACHIEVEMENT_YIJUNSKILL_LEVEL_UP;
        case 18: return ACHIEVEMENT_GAMBLE;
        case 19: return ACHIEVEMENT_GOLDCHEST;
        case 20: return ACHIEVEMENT_SPECIAL_DUNGEON;
        case 21: return ACHIEVEMENT_WORLDBOSS;
        case 22: return ACHIEVEMENT_MONEY_TREE;
        case 23: return ACHIEVEMENT_KUNGFU_COLLECT;
        case 24: return ACHIEVEMENT_YIJUN_CAPTURE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AchievementType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AchievementType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AchievementType>() {
            public AchievementType findValueByNumber(int number) {
              return AchievementType.valueOf(number);
            }
          };

    private final int value;

    private AchievementType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.AchievementType)
  }

  /**
   * Protobuf enum {@code sanguo.FIGHTTYPE}
   */
  public enum FIGHTTYPE
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>FIGHT_DUNGEON_NORMAL = 1;</code>
     *
     * <pre>
     * 普通副本战斗
     * </pre>
     */
    FIGHT_DUNGEON_NORMAL(0, 1),
    /**
     * <code>FIGHT_DUNGEON_ELITE = 2;</code>
     *
     * <pre>
     * 精英副本战斗
     * </pre>
     */
    FIGHT_DUNGEON_ELITE(1, 2),
    /**
     * <code>FIGHT_ARENA = 3;</code>
     *
     * <pre>
     * 竞技场战斗
     * </pre>
     */
    FIGHT_ARENA(2, 3),
    /**
     * <code>FIGHT_YIJUN = 4;</code>
     *
     * <pre>
     * 义军战斗
     * </pre>
     */
    FIGHT_YIJUN(3, 4),
    /**
     * <code>FIGHT_SPECIAL_DUNGEON = 5;</code>
     *
     * <pre>
     * 特殊副本战斗
     * </pre>
     */
    FIGHT_SPECIAL_DUNGEON(4, 5),
    ;

    /**
     * <code>FIGHT_DUNGEON_NORMAL = 1;</code>
     *
     * <pre>
     * 普通副本战斗
     * </pre>
     */
    public static final int FIGHT_DUNGEON_NORMAL_VALUE = 1;
    /**
     * <code>FIGHT_DUNGEON_ELITE = 2;</code>
     *
     * <pre>
     * 精英副本战斗
     * </pre>
     */
    public static final int FIGHT_DUNGEON_ELITE_VALUE = 2;
    /**
     * <code>FIGHT_ARENA = 3;</code>
     *
     * <pre>
     * 竞技场战斗
     * </pre>
     */
    public static final int FIGHT_ARENA_VALUE = 3;
    /**
     * <code>FIGHT_YIJUN = 4;</code>
     *
     * <pre>
     * 义军战斗
     * </pre>
     */
    public static final int FIGHT_YIJUN_VALUE = 4;
    /**
     * <code>FIGHT_SPECIAL_DUNGEON = 5;</code>
     *
     * <pre>
     * 特殊副本战斗
     * </pre>
     */
    public static final int FIGHT_SPECIAL_DUNGEON_VALUE = 5;


    public final int getNumber() { return value; }

    public static FIGHTTYPE valueOf(int value) {
      switch (value) {
        case 1: return FIGHT_DUNGEON_NORMAL;
        case 2: return FIGHT_DUNGEON_ELITE;
        case 3: return FIGHT_ARENA;
        case 4: return FIGHT_YIJUN;
        case 5: return FIGHT_SPECIAL_DUNGEON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FIGHTTYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FIGHTTYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FIGHTTYPE>() {
            public FIGHTTYPE findValueByNumber(int number) {
              return FIGHTTYPE.valueOf(number);
            }
          };

    private final int value;

    private FIGHTTYPE(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.FIGHTTYPE)
  }

  /**
   * Protobuf enum {@code sanguo.MailStatus}
   */
  public enum MailStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>MAIL_UNREAD = 1;</code>
     *
     * <pre>
     * 邮件未读
     * </pre>
     */
    MAIL_UNREAD(0, 1),
    /**
     * <code>MAIL_MARK_READ = 2;</code>
     *
     * <pre>
     * 邮件已读
     * </pre>
     */
    MAIL_MARK_READ(1, 2),
    /**
     * <code>MAIL_REMOVE = 3;</code>
     *
     * <pre>
     * 邮件删除
     * </pre>
     */
    MAIL_REMOVE(2, 3),
    /**
     * <code>KIT_OPEN = 4;</code>
     *
     * <pre>
     * 邮件附件打开
     * </pre>
     */
    KIT_OPEN(3, 4),
    /**
     * <code>KIT_NOT_OPEN = 5;</code>
     *
     * <pre>
     * 邮件附件未打开
     * </pre>
     */
    KIT_NOT_OPEN(4, 5),
    /**
     * <code>MAIL_TYPE_SEND = 6;</code>
     *
     * <pre>
     * 发件箱
     * </pre>
     */
    MAIL_TYPE_SEND(5, 6),
    /**
     * <code>MAIL_TYPE_RECIVE = 7;</code>
     *
     * <pre>
     * 收件箱
     * </pre>
     */
    MAIL_TYPE_RECIVE(6, 7),
    ;

    /**
     * <code>MAIL_UNREAD = 1;</code>
     *
     * <pre>
     * 邮件未读
     * </pre>
     */
    public static final int MAIL_UNREAD_VALUE = 1;
    /**
     * <code>MAIL_MARK_READ = 2;</code>
     *
     * <pre>
     * 邮件已读
     * </pre>
     */
    public static final int MAIL_MARK_READ_VALUE = 2;
    /**
     * <code>MAIL_REMOVE = 3;</code>
     *
     * <pre>
     * 邮件删除
     * </pre>
     */
    public static final int MAIL_REMOVE_VALUE = 3;
    /**
     * <code>KIT_OPEN = 4;</code>
     *
     * <pre>
     * 邮件附件打开
     * </pre>
     */
    public static final int KIT_OPEN_VALUE = 4;
    /**
     * <code>KIT_NOT_OPEN = 5;</code>
     *
     * <pre>
     * 邮件附件未打开
     * </pre>
     */
    public static final int KIT_NOT_OPEN_VALUE = 5;
    /**
     * <code>MAIL_TYPE_SEND = 6;</code>
     *
     * <pre>
     * 发件箱
     * </pre>
     */
    public static final int MAIL_TYPE_SEND_VALUE = 6;
    /**
     * <code>MAIL_TYPE_RECIVE = 7;</code>
     *
     * <pre>
     * 收件箱
     * </pre>
     */
    public static final int MAIL_TYPE_RECIVE_VALUE = 7;


    public final int getNumber() { return value; }

    public static MailStatus valueOf(int value) {
      switch (value) {
        case 1: return MAIL_UNREAD;
        case 2: return MAIL_MARK_READ;
        case 3: return MAIL_REMOVE;
        case 4: return KIT_OPEN;
        case 5: return KIT_NOT_OPEN;
        case 6: return MAIL_TYPE_SEND;
        case 7: return MAIL_TYPE_RECIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MailStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MailStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MailStatus>() {
            public MailStatus findValueByNumber(int number) {
              return MailStatus.valueOf(number);
            }
          };

    private final int value;

    private MailStatus(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.MailStatus)
  }

  /**
   * Protobuf enum {@code sanguo.MonthCardStatus}
   */
  public enum MonthCardStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_OPEND_ACCESS = 1;</code>
     *
     * <pre>
     * 可以领取
     * </pre>
     */
    TYPE_OPEND_ACCESS(0, 1),
    /**
     * <code>TYPE_OPEND_NOT_ACCESS = 0;</code>
     *
     * <pre>
     * 不可以领取
     * </pre>
     */
    TYPE_OPEND_NOT_ACCESS(1, 0),
    /**
     * <code>TYPE_NO_MONTCH_CARD = 2;</code>
     *
     * <pre>
     *  非月卡状态
     * </pre>
     */
    TYPE_NO_MONTCH_CARD(2, 2),
    ;

    /**
     * <code>TYPE_OPEND_ACCESS = 1;</code>
     *
     * <pre>
     * 可以领取
     * </pre>
     */
    public static final int TYPE_OPEND_ACCESS_VALUE = 1;
    /**
     * <code>TYPE_OPEND_NOT_ACCESS = 0;</code>
     *
     * <pre>
     * 不可以领取
     * </pre>
     */
    public static final int TYPE_OPEND_NOT_ACCESS_VALUE = 0;
    /**
     * <code>TYPE_NO_MONTCH_CARD = 2;</code>
     *
     * <pre>
     *  非月卡状态
     * </pre>
     */
    public static final int TYPE_NO_MONTCH_CARD_VALUE = 2;


    public final int getNumber() { return value; }

    public static MonthCardStatus valueOf(int value) {
      switch (value) {
        case 1: return TYPE_OPEND_ACCESS;
        case 0: return TYPE_OPEND_NOT_ACCESS;
        case 2: return TYPE_NO_MONTCH_CARD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MonthCardStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MonthCardStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MonthCardStatus>() {
            public MonthCardStatus findValueByNumber(int number) {
              return MonthCardStatus.valueOf(number);
            }
          };

    private final int value;

    private MonthCardStatus(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.MonthCardStatus)
  }

  /**
   * Protobuf enum {@code sanguo.PetEggType}
   */
  public enum PetEggType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>PET_EGG_COPPER = 1;</code>
     *
     * <pre>
     * 铜宠物蛋
     * </pre>
     */
    PET_EGG_COPPER(0, 1),
    /**
     * <code>PET_EGG_SILVER = 2;</code>
     *
     * <pre>
     * 银宠物蛋
     * </pre>
     */
    PET_EGG_SILVER(1, 2),
    /**
     * <code>PET_EGG__GOLD = 3;</code>
     *
     * <pre>
     * 金宠物蛋
     * </pre>
     */
    PET_EGG__GOLD(2, 3),
    ;

    /**
     * <code>PET_EGG_COPPER = 1;</code>
     *
     * <pre>
     * 铜宠物蛋
     * </pre>
     */
    public static final int PET_EGG_COPPER_VALUE = 1;
    /**
     * <code>PET_EGG_SILVER = 2;</code>
     *
     * <pre>
     * 银宠物蛋
     * </pre>
     */
    public static final int PET_EGG_SILVER_VALUE = 2;
    /**
     * <code>PET_EGG__GOLD = 3;</code>
     *
     * <pre>
     * 金宠物蛋
     * </pre>
     */
    public static final int PET_EGG__GOLD_VALUE = 3;


    public final int getNumber() { return value; }

    public static PetEggType valueOf(int value) {
      switch (value) {
        case 1: return PET_EGG_COPPER;
        case 2: return PET_EGG_SILVER;
        case 3: return PET_EGG__GOLD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PetEggType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PetEggType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PetEggType>() {
            public PetEggType findValueByNumber(int number) {
              return PetEggType.valueOf(number);
            }
          };

    private final int value;

    private PetEggType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.PetEggType)
  }

  /**
   * Protobuf enum {@code sanguo.PetStatus}
   */
  public enum PetStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>PET_IDLE = 1;</code>
     *
     * <pre>
     * (1:闲置,2:出战(携带),3:休息,4:遗弃.5:孵化中)
     * </pre>
     */
    PET_IDLE(0, 1),
    /**
     * <code>PET_FIGHTING = 2;</code>
     */
    PET_FIGHTING(1, 2),
    /**
     * <code>PET_REST = 3;</code>
     */
    PET_REST(2, 3),
    /**
     * <code>PET_ABANDON = 4;</code>
     */
    PET_ABANDON(3, 4),
    /**
     * <code>PET_BORNGIN = 5;</code>
     */
    PET_BORNGIN(4, 5),
    ;

    /**
     * <code>PET_IDLE = 1;</code>
     *
     * <pre>
     * (1:闲置,2:出战(携带),3:休息,4:遗弃.5:孵化中)
     * </pre>
     */
    public static final int PET_IDLE_VALUE = 1;
    /**
     * <code>PET_FIGHTING = 2;</code>
     */
    public static final int PET_FIGHTING_VALUE = 2;
    /**
     * <code>PET_REST = 3;</code>
     */
    public static final int PET_REST_VALUE = 3;
    /**
     * <code>PET_ABANDON = 4;</code>
     */
    public static final int PET_ABANDON_VALUE = 4;
    /**
     * <code>PET_BORNGIN = 5;</code>
     */
    public static final int PET_BORNGIN_VALUE = 5;


    public final int getNumber() { return value; }

    public static PetStatus valueOf(int value) {
      switch (value) {
        case 1: return PET_IDLE;
        case 2: return PET_FIGHTING;
        case 3: return PET_REST;
        case 4: return PET_ABANDON;
        case 5: return PET_BORNGIN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PetStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PetStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PetStatus>() {
            public PetStatus findValueByNumber(int number) {
              return PetStatus.valueOf(number);
            }
          };

    private final int value;

    private PetStatus(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.PetStatus)
  }

  /**
   * Protobuf enum {@code sanguo.PetCoolDown}
   */
  public enum PetCoolDown
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>COOL_DOWN_FIGHTING = 2;</code>
     *
     * <pre>
     * 出战CD
     * </pre>
     */
    COOL_DOWN_FIGHTING(0, 2),
    /**
     * <code>COOL_DOWN_REST = 3;</code>
     *
     * <pre>
     * 休息CD
     * </pre>
     */
    COOL_DOWN_REST(1, 3),
    /**
     * <code>COOL_DOWN_IDLE = 4;</code>
     *
     * <pre>
     * 闲置CD
     * </pre>
     */
    COOL_DOWN_IDLE(2, 4),
    /**
     * <code>COOL_DOWN_ABANDON = 5;</code>
     *
     * <pre>
     * 遗弃
     * </pre>
     */
    COOL_DOWN_ABANDON(3, 5),
    ;

    /**
     * <code>COOL_DOWN_FIGHTING = 2;</code>
     *
     * <pre>
     * 出战CD
     * </pre>
     */
    public static final int COOL_DOWN_FIGHTING_VALUE = 2;
    /**
     * <code>COOL_DOWN_REST = 3;</code>
     *
     * <pre>
     * 休息CD
     * </pre>
     */
    public static final int COOL_DOWN_REST_VALUE = 3;
    /**
     * <code>COOL_DOWN_IDLE = 4;</code>
     *
     * <pre>
     * 闲置CD
     * </pre>
     */
    public static final int COOL_DOWN_IDLE_VALUE = 4;
    /**
     * <code>COOL_DOWN_ABANDON = 5;</code>
     *
     * <pre>
     * 遗弃
     * </pre>
     */
    public static final int COOL_DOWN_ABANDON_VALUE = 5;


    public final int getNumber() { return value; }

    public static PetCoolDown valueOf(int value) {
      switch (value) {
        case 2: return COOL_DOWN_FIGHTING;
        case 3: return COOL_DOWN_REST;
        case 4: return COOL_DOWN_IDLE;
        case 5: return COOL_DOWN_ABANDON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PetCoolDown>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PetCoolDown>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PetCoolDown>() {
            public PetCoolDown findValueByNumber(int number) {
              return PetCoolDown.valueOf(number);
            }
          };

    private final int value;

    private PetCoolDown(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.PetCoolDown)
  }

  /**
   * Protobuf enum {@code sanguo.PetBornEggStatus}
   */
  public enum PetBornEggStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>PET_BORNING_EGG = 1;</code>
     *
     * <pre>
     *1表示孵化中，2表示孵化结束，3表示无效, 4表示孵化中的宠物蛋已领取该状态只是服务器应用；定义在proto常量中
     * </pre>
     */
    PET_BORNING_EGG(0, 1),
    /**
     * <code>PET_BORNED_EGG = 2;</code>
     */
    PET_BORNED_EGG(1, 2),
    /**
     * <code>PET_BORN_EGG_INVALID = 3;</code>
     */
    PET_BORN_EGG_INVALID(2, 3),
    /**
     * <code>PET_BORN_EGG_OPENED = 4;</code>
     */
    PET_BORN_EGG_OPENED(3, 4),
    ;

    /**
     * <code>PET_BORNING_EGG = 1;</code>
     *
     * <pre>
     *1表示孵化中，2表示孵化结束，3表示无效, 4表示孵化中的宠物蛋已领取该状态只是服务器应用；定义在proto常量中
     * </pre>
     */
    public static final int PET_BORNING_EGG_VALUE = 1;
    /**
     * <code>PET_BORNED_EGG = 2;</code>
     */
    public static final int PET_BORNED_EGG_VALUE = 2;
    /**
     * <code>PET_BORN_EGG_INVALID = 3;</code>
     */
    public static final int PET_BORN_EGG_INVALID_VALUE = 3;
    /**
     * <code>PET_BORN_EGG_OPENED = 4;</code>
     */
    public static final int PET_BORN_EGG_OPENED_VALUE = 4;


    public final int getNumber() { return value; }

    public static PetBornEggStatus valueOf(int value) {
      switch (value) {
        case 1: return PET_BORNING_EGG;
        case 2: return PET_BORNED_EGG;
        case 3: return PET_BORN_EGG_INVALID;
        case 4: return PET_BORN_EGG_OPENED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PetBornEggStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PetBornEggStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PetBornEggStatus>() {
            public PetBornEggStatus findValueByNumber(int number) {
              return PetBornEggStatus.valueOf(number);
            }
          };

    private final int value;

    private PetBornEggStatus(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.PetBornEggStatus)
  }

  /**
   * Protobuf enum {@code sanguo.Leaderboard}
   */
  public enum Leaderboard
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ROLE_LEVEL = 1;</code>
     *
     * <pre>
     * 角色等级排行
     * </pre>
     */
    ROLE_LEVEL(0, 1),
    /**
     * <code>ROLE_FIGHT = 2;</code>
     *
     * <pre>
     * 角色战力排行
     * </pre>
     */
    ROLE_FIGHT(1, 2),
    /**
     * <code>ROLE_OFFICAL = 3;</code>
     *
     * <pre>
     * 角色官阶排行
     * </pre>
     */
    ROLE_OFFICAL(2, 3),
    /**
     * <code>YIJUN_LEVEL = 4;</code>
     *
     * <pre>
     * 义军等级排行
     * </pre>
     */
    YIJUN_LEVEL(3, 4),
    /**
     * <code>YIJUN_FIGHT = 5;</code>
     *
     * <pre>
     * 义军战力排行
     * </pre>
     */
    YIJUN_FIGHT(4, 5),
    /**
     * <code>YIJUN_WEALTH = 6;</code>
     *
     * <pre>
     * 义军财富排行
     * </pre>
     */
    YIJUN_WEALTH(5, 6),
    /**
     * <code>CONSUME_COPPER = 7;</code>
     *
     * <pre>
     * 铜钱消耗排行
     * </pre>
     */
    CONSUME_COPPER(6, 7),
    /**
     * <code>CONSUME_JADE = 8;</code>
     *
     * <pre>
     * 玉石消耗排行
     * </pre>
     */
    CONSUME_JADE(7, 8),
    /**
     * <code>RECHARGE = 9;</code>
     *
     * <pre>
     * 充值排行
     * </pre>
     */
    RECHARGE(8, 9),
    /**
     * <code>DUNGEON_MIN_TIME = 10;</code>
     *
     * <pre>
     * 精英副本最短时长排行
     * </pre>
     */
    DUNGEON_MIN_TIME(9, 10),
    /**
     * <code>DUNGEON_MIN_POWER = 11;</code>
     *
     * <pre>
     * 精英副本最小体力排行
     * </pre>
     */
    DUNGEON_MIN_POWER(10, 11),
    /**
     * <code>DUNGEON_MAX_BATTLE = 12;</code>
     *
     * <pre>
     * 精英副本最大攻击排行
     * </pre>
     */
    DUNGEON_MAX_BATTLE(11, 12),
    /**
     * <code>YIJUN_BOSS_RANK = 13;</code>
     *
     * <pre>
     * 义军boss排行
     * </pre>
     */
    YIJUN_BOSS_RANK(12, 13),
    ;

    /**
     * <code>ROLE_LEVEL = 1;</code>
     *
     * <pre>
     * 角色等级排行
     * </pre>
     */
    public static final int ROLE_LEVEL_VALUE = 1;
    /**
     * <code>ROLE_FIGHT = 2;</code>
     *
     * <pre>
     * 角色战力排行
     * </pre>
     */
    public static final int ROLE_FIGHT_VALUE = 2;
    /**
     * <code>ROLE_OFFICAL = 3;</code>
     *
     * <pre>
     * 角色官阶排行
     * </pre>
     */
    public static final int ROLE_OFFICAL_VALUE = 3;
    /**
     * <code>YIJUN_LEVEL = 4;</code>
     *
     * <pre>
     * 义军等级排行
     * </pre>
     */
    public static final int YIJUN_LEVEL_VALUE = 4;
    /**
     * <code>YIJUN_FIGHT = 5;</code>
     *
     * <pre>
     * 义军战力排行
     * </pre>
     */
    public static final int YIJUN_FIGHT_VALUE = 5;
    /**
     * <code>YIJUN_WEALTH = 6;</code>
     *
     * <pre>
     * 义军财富排行
     * </pre>
     */
    public static final int YIJUN_WEALTH_VALUE = 6;
    /**
     * <code>CONSUME_COPPER = 7;</code>
     *
     * <pre>
     * 铜钱消耗排行
     * </pre>
     */
    public static final int CONSUME_COPPER_VALUE = 7;
    /**
     * <code>CONSUME_JADE = 8;</code>
     *
     * <pre>
     * 玉石消耗排行
     * </pre>
     */
    public static final int CONSUME_JADE_VALUE = 8;
    /**
     * <code>RECHARGE = 9;</code>
     *
     * <pre>
     * 充值排行
     * </pre>
     */
    public static final int RECHARGE_VALUE = 9;
    /**
     * <code>DUNGEON_MIN_TIME = 10;</code>
     *
     * <pre>
     * 精英副本最短时长排行
     * </pre>
     */
    public static final int DUNGEON_MIN_TIME_VALUE = 10;
    /**
     * <code>DUNGEON_MIN_POWER = 11;</code>
     *
     * <pre>
     * 精英副本最小体力排行
     * </pre>
     */
    public static final int DUNGEON_MIN_POWER_VALUE = 11;
    /**
     * <code>DUNGEON_MAX_BATTLE = 12;</code>
     *
     * <pre>
     * 精英副本最大攻击排行
     * </pre>
     */
    public static final int DUNGEON_MAX_BATTLE_VALUE = 12;
    /**
     * <code>YIJUN_BOSS_RANK = 13;</code>
     *
     * <pre>
     * 义军boss排行
     * </pre>
     */
    public static final int YIJUN_BOSS_RANK_VALUE = 13;


    public final int getNumber() { return value; }

    public static Leaderboard valueOf(int value) {
      switch (value) {
        case 1: return ROLE_LEVEL;
        case 2: return ROLE_FIGHT;
        case 3: return ROLE_OFFICAL;
        case 4: return YIJUN_LEVEL;
        case 5: return YIJUN_FIGHT;
        case 6: return YIJUN_WEALTH;
        case 7: return CONSUME_COPPER;
        case 8: return CONSUME_JADE;
        case 9: return RECHARGE;
        case 10: return DUNGEON_MIN_TIME;
        case 11: return DUNGEON_MIN_POWER;
        case 12: return DUNGEON_MAX_BATTLE;
        case 13: return YIJUN_BOSS_RANK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Leaderboard>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Leaderboard>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Leaderboard>() {
            public Leaderboard findValueByNumber(int number) {
              return Leaderboard.valueOf(number);
            }
          };

    private final int value;

    private Leaderboard(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sanguo.Leaderboard)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
