// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_rank_reward.proto

package com.cwa.sanguo.messages.arena;

public final class GetRankRewardMessage {
  private GetRankRewardMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface GetRankRewardRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();

    // required bool flag = 2;
    /**
     * <code>required bool flag = 2;</code>
     *
     * <pre>
     * 标志领奖true
     * </pre>
     */
    boolean hasFlag();
    /**
     * <code>required bool flag = 2;</code>
     *
     * <pre>
     * 标志领奖true
     * </pre>
     */
    boolean getFlag();
  }
  /**
   * Protobuf type {@code sanguo.GetRankRewardRequest}
   */
  public static final class GetRankRewardRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements GetRankRewardRequestOrBuilder {
    // Use GetRankRewardRequest.newBuilder() to construct.
    private GetRankRewardRequest(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private GetRankRewardRequest(boolean noInit) {}

    private static final GetRankRewardRequest defaultInstance;
    public static GetRankRewardRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetRankRewardRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private GetRankRewardRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              flag_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<GetRankRewardRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetRankRewardRequest>() {
      public GetRankRewardRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetRankRewardRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetRankRewardRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    // required bool flag = 2;
    public static final int FLAG_FIELD_NUMBER = 2;
    private boolean flag_;
    /**
     * <code>required bool flag = 2;</code>
     *
     * <pre>
     * 标志领奖true
     * </pre>
     */
    public boolean hasFlag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool flag = 2;</code>
     *
     * <pre>
     * 标志领奖true
     * </pre>
     */
    public boolean getFlag() {
      return flag_;
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      flag_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, flag_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, flag_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.GetRankRewardRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest, Builder>
        implements com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequestOrBuilder {
      // Construct using com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        flag_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest build() {
        com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest buildPartial() {
        com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest result = new com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.flag_ = flag_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest other) {
        if (other == com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        if (other.hasFlag()) {
          setFlag(other.getFlag());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        if (!hasFlag()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // required bool flag = 2;
      private boolean flag_ ;
      /**
       * <code>required bool flag = 2;</code>
       *
       * <pre>
       * 标志领奖true
       * </pre>
       */
      public boolean hasFlag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool flag = 2;</code>
       *
       * <pre>
       * 标志领奖true
       * </pre>
       */
      public boolean getFlag() {
        return flag_;
      }
      /**
       * <code>required bool flag = 2;</code>
       *
       * <pre>
       * 标志领奖true
       * </pre>
       */
      public Builder setFlag(boolean value) {
        bitField0_ |= 0x00000002;
        flag_ = value;
        
        return this;
      }
      /**
       * <code>required bool flag = 2;</code>
       *
       * <pre>
       * 标志领奖true
       * </pre>
       */
      public Builder clearFlag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        flag_ = false;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.GetRankRewardRequest)
    }

    static {
      defaultInstance = new GetRankRewardRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.GetRankRewardRequest)
  }

  public interface GetRankRewardResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();

    // required .sanguo.StatusCode status = 2;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus();

    // optional uint64 rank = 3;
    /**
     * <code>optional uint64 rank = 3;</code>
     *
     * <pre>
     *客户端看到的排名
     * </pre>
     */
    boolean hasRank();
    /**
     * <code>optional uint64 rank = 3;</code>
     *
     * <pre>
     *客户端看到的排名
     * </pre>
     */
    long getRank();

    // optional uint64 currentHonourReward = 4;
    /**
     * <code>optional uint64 currentHonourReward = 4;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    boolean hasCurrentHonourReward();
    /**
     * <code>optional uint64 currentHonourReward = 4;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    long getCurrentHonourReward();

    // optional uint32 nextMinuteHonourReward = 5;
    /**
     * <code>optional uint32 nextMinuteHonourReward = 5;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    boolean hasNextMinuteHonourReward();
    /**
     * <code>optional uint32 nextMinuteHonourReward = 5;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    int getNextMinuteHonourReward();

    // optional uint64 lostHonourReward = 6;
    /**
     * <code>optional uint64 lostHonourReward = 6;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    boolean hasLostHonourReward();
    /**
     * <code>optional uint64 lostHonourReward = 6;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    long getLostHonourReward();

    // optional uint64 totalHonourReward = 7;
    /**
     * <code>optional uint64 totalHonourReward = 7;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    boolean hasTotalHonourReward();
    /**
     * <code>optional uint64 totalHonourReward = 7;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    long getTotalHonourReward();

    // optional uint64 currentCopperReward = 8;
    /**
     * <code>optional uint64 currentCopperReward = 8;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    boolean hasCurrentCopperReward();
    /**
     * <code>optional uint64 currentCopperReward = 8;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    long getCurrentCopperReward();

    // optional uint64 lostCopperReward = 9;
    /**
     * <code>optional uint64 lostCopperReward = 9;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    boolean hasLostCopperReward();
    /**
     * <code>optional uint64 lostCopperReward = 9;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    long getLostCopperReward();

    // optional uint64 totalCopperReward = 10;
    /**
     * <code>optional uint64 totalCopperReward = 10;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    boolean hasTotalCopperReward();
    /**
     * <code>optional uint64 totalCopperReward = 10;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    long getTotalCopperReward();

    // optional uint32 nextMinuteCopperReward = 11;
    /**
     * <code>optional uint32 nextMinuteCopperReward = 11;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    boolean hasNextMinuteCopperReward();
    /**
     * <code>optional uint32 nextMinuteCopperReward = 11;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    int getNextMinuteCopperReward();

    // optional bool rewardFlag = 12;
    /**
     * <code>optional bool rewardFlag = 12;</code>
     *
     * <pre>
     * 标志领奖true
     * </pre>
     */
    boolean hasRewardFlag();
    /**
     * <code>optional bool rewardFlag = 12;</code>
     *
     * <pre>
     * 标志领奖true
     * </pre>
     */
    boolean getRewardFlag();

    // optional uint64 captureTimes = 13;
    /**
     * <code>optional uint64 captureTimes = 13;</code>
     *
     * <pre>
     * 占领时长 
     * </pre>
     */
    boolean hasCaptureTimes();
    /**
     * <code>optional uint64 captureTimes = 13;</code>
     *
     * <pre>
     * 占领时长 
     * </pre>
     */
    long getCaptureTimes();

    // optional uint32 consecutiveVictories = 14;
    /**
     * <code>optional uint32 consecutiveVictories = 14;</code>
     *
     * <pre>
     * 连胜场次
     * </pre>
     */
    boolean hasConsecutiveVictories();
    /**
     * <code>optional uint32 consecutiveVictories = 14;</code>
     *
     * <pre>
     * 连胜场次
     * </pre>
     */
    int getConsecutiveVictories();

    // optional uint64 honourReward = 15;
    /**
     * <code>optional uint64 honourReward = 15;</code>
     *
     * <pre>
     * 领取的荣誉奖励
     * </pre>
     */
    boolean hasHonourReward();
    /**
     * <code>optional uint64 honourReward = 15;</code>
     *
     * <pre>
     * 领取的荣誉奖励
     * </pre>
     */
    long getHonourReward();

    // optional uint64 copperReward = 16;
    /**
     * <code>optional uint64 copperReward = 16;</code>
     *
     * <pre>
     * 领取的铜钱奖励
     * </pre>
     */
    boolean hasCopperReward();
    /**
     * <code>optional uint64 copperReward = 16;</code>
     *
     * <pre>
     * 领取的铜钱奖励
     * </pre>
     */
    long getCopperReward();
  }
  /**
   * Protobuf type {@code sanguo.GetRankRewardResponse}
   */
  public static final class GetRankRewardResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements GetRankRewardResponseOrBuilder {
    // Use GetRankRewardResponse.newBuilder() to construct.
    private GetRankRewardResponse(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private GetRankRewardResponse(boolean noInit) {}

    private static final GetRankRewardResponse defaultInstance;
    public static GetRankRewardResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetRankRewardResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private GetRankRewardResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgStatusCode.StatusCode value = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rank_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              currentHonourReward_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              nextMinuteHonourReward_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              lostHonourReward_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              totalHonourReward_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              currentCopperReward_ = input.readUInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              lostCopperReward_ = input.readUInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              totalCopperReward_ = input.readUInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              nextMinuteCopperReward_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              rewardFlag_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              captureTimes_ = input.readUInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              consecutiveVictories_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              honourReward_ = input.readUInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              copperReward_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<GetRankRewardResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetRankRewardResponse>() {
      public GetRankRewardResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetRankRewardResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetRankRewardResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    // required .sanguo.StatusCode status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
      return status_;
    }

    // optional uint64 rank = 3;
    public static final int RANK_FIELD_NUMBER = 3;
    private long rank_;
    /**
     * <code>optional uint64 rank = 3;</code>
     *
     * <pre>
     *客户端看到的排名
     * </pre>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 rank = 3;</code>
     *
     * <pre>
     *客户端看到的排名
     * </pre>
     */
    public long getRank() {
      return rank_;
    }

    // optional uint64 currentHonourReward = 4;
    public static final int CURRENTHONOURREWARD_FIELD_NUMBER = 4;
    private long currentHonourReward_;
    /**
     * <code>optional uint64 currentHonourReward = 4;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    public boolean hasCurrentHonourReward() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 currentHonourReward = 4;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    public long getCurrentHonourReward() {
      return currentHonourReward_;
    }

    // optional uint32 nextMinuteHonourReward = 5;
    public static final int NEXTMINUTEHONOURREWARD_FIELD_NUMBER = 5;
    private int nextMinuteHonourReward_;
    /**
     * <code>optional uint32 nextMinuteHonourReward = 5;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    public boolean hasNextMinuteHonourReward() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 nextMinuteHonourReward = 5;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    public int getNextMinuteHonourReward() {
      return nextMinuteHonourReward_;
    }

    // optional uint64 lostHonourReward = 6;
    public static final int LOSTHONOURREWARD_FIELD_NUMBER = 6;
    private long lostHonourReward_;
    /**
     * <code>optional uint64 lostHonourReward = 6;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    public boolean hasLostHonourReward() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 lostHonourReward = 6;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    public long getLostHonourReward() {
      return lostHonourReward_;
    }

    // optional uint64 totalHonourReward = 7;
    public static final int TOTALHONOURREWARD_FIELD_NUMBER = 7;
    private long totalHonourReward_;
    /**
     * <code>optional uint64 totalHonourReward = 7;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    public boolean hasTotalHonourReward() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 totalHonourReward = 7;</code>
     *
     * <pre>
     * 奖励荣誉
     * </pre>
     */
    public long getTotalHonourReward() {
      return totalHonourReward_;
    }

    // optional uint64 currentCopperReward = 8;
    public static final int CURRENTCOPPERREWARD_FIELD_NUMBER = 8;
    private long currentCopperReward_;
    /**
     * <code>optional uint64 currentCopperReward = 8;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    public boolean hasCurrentCopperReward() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 currentCopperReward = 8;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    public long getCurrentCopperReward() {
      return currentCopperReward_;
    }

    // optional uint64 lostCopperReward = 9;
    public static final int LOSTCOPPERREWARD_FIELD_NUMBER = 9;
    private long lostCopperReward_;
    /**
     * <code>optional uint64 lostCopperReward = 9;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    public boolean hasLostCopperReward() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 lostCopperReward = 9;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    public long getLostCopperReward() {
      return lostCopperReward_;
    }

    // optional uint64 totalCopperReward = 10;
    public static final int TOTALCOPPERREWARD_FIELD_NUMBER = 10;
    private long totalCopperReward_;
    /**
     * <code>optional uint64 totalCopperReward = 10;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    public boolean hasTotalCopperReward() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint64 totalCopperReward = 10;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    public long getTotalCopperReward() {
      return totalCopperReward_;
    }

    // optional uint32 nextMinuteCopperReward = 11;
    public static final int NEXTMINUTECOPPERREWARD_FIELD_NUMBER = 11;
    private int nextMinuteCopperReward_;
    /**
     * <code>optional uint32 nextMinuteCopperReward = 11;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    public boolean hasNextMinuteCopperReward() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 nextMinuteCopperReward = 11;</code>
     *
     * <pre>
     * 奖励铜钱
     * </pre>
     */
    public int getNextMinuteCopperReward() {
      return nextMinuteCopperReward_;
    }

    // optional bool rewardFlag = 12;
    public static final int REWARDFLAG_FIELD_NUMBER = 12;
    private boolean rewardFlag_;
    /**
     * <code>optional bool rewardFlag = 12;</code>
     *
     * <pre>
     * 标志领奖true
     * </pre>
     */
    public boolean hasRewardFlag() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool rewardFlag = 12;</code>
     *
     * <pre>
     * 标志领奖true
     * </pre>
     */
    public boolean getRewardFlag() {
      return rewardFlag_;
    }

    // optional uint64 captureTimes = 13;
    public static final int CAPTURETIMES_FIELD_NUMBER = 13;
    private long captureTimes_;
    /**
     * <code>optional uint64 captureTimes = 13;</code>
     *
     * <pre>
     * 占领时长 
     * </pre>
     */
    public boolean hasCaptureTimes() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint64 captureTimes = 13;</code>
     *
     * <pre>
     * 占领时长 
     * </pre>
     */
    public long getCaptureTimes() {
      return captureTimes_;
    }

    // optional uint32 consecutiveVictories = 14;
    public static final int CONSECUTIVEVICTORIES_FIELD_NUMBER = 14;
    private int consecutiveVictories_;
    /**
     * <code>optional uint32 consecutiveVictories = 14;</code>
     *
     * <pre>
     * 连胜场次
     * </pre>
     */
    public boolean hasConsecutiveVictories() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 consecutiveVictories = 14;</code>
     *
     * <pre>
     * 连胜场次
     * </pre>
     */
    public int getConsecutiveVictories() {
      return consecutiveVictories_;
    }

    // optional uint64 honourReward = 15;
    public static final int HONOURREWARD_FIELD_NUMBER = 15;
    private long honourReward_;
    /**
     * <code>optional uint64 honourReward = 15;</code>
     *
     * <pre>
     * 领取的荣誉奖励
     * </pre>
     */
    public boolean hasHonourReward() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint64 honourReward = 15;</code>
     *
     * <pre>
     * 领取的荣誉奖励
     * </pre>
     */
    public long getHonourReward() {
      return honourReward_;
    }

    // optional uint64 copperReward = 16;
    public static final int COPPERREWARD_FIELD_NUMBER = 16;
    private long copperReward_;
    /**
     * <code>optional uint64 copperReward = 16;</code>
     *
     * <pre>
     * 领取的铜钱奖励
     * </pre>
     */
    public boolean hasCopperReward() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint64 copperReward = 16;</code>
     *
     * <pre>
     * 领取的铜钱奖励
     * </pre>
     */
    public long getCopperReward() {
      return copperReward_;
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      rank_ = 0L;
      currentHonourReward_ = 0L;
      nextMinuteHonourReward_ = 0;
      lostHonourReward_ = 0L;
      totalHonourReward_ = 0L;
      currentCopperReward_ = 0L;
      lostCopperReward_ = 0L;
      totalCopperReward_ = 0L;
      nextMinuteCopperReward_ = 0;
      rewardFlag_ = false;
      captureTimes_ = 0L;
      consecutiveVictories_ = 0;
      honourReward_ = 0L;
      copperReward_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, rank_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, currentHonourReward_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, nextMinuteHonourReward_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, lostHonourReward_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, totalHonourReward_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, currentCopperReward_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, lostCopperReward_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt64(10, totalCopperReward_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, nextMinuteCopperReward_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, rewardFlag_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt64(13, captureTimes_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(14, consecutiveVictories_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt64(15, honourReward_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt64(16, copperReward_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, rank_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, currentHonourReward_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, nextMinuteHonourReward_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, lostHonourReward_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, totalHonourReward_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, currentCopperReward_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, lostCopperReward_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, totalCopperReward_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, nextMinuteCopperReward_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, rewardFlag_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, captureTimes_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, consecutiveVictories_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(15, honourReward_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, copperReward_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.GetRankRewardResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse, Builder>
        implements com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponseOrBuilder {
      // Construct using com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        bitField0_ = (bitField0_ & ~0x00000002);
        rank_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        currentHonourReward_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        nextMinuteHonourReward_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lostHonourReward_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        totalHonourReward_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        currentCopperReward_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        lostCopperReward_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        totalCopperReward_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        nextMinuteCopperReward_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        rewardFlag_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        captureTimes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        consecutiveVictories_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        honourReward_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        copperReward_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse build() {
        com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse buildPartial() {
        com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse result = new com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rank_ = rank_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.currentHonourReward_ = currentHonourReward_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nextMinuteHonourReward_ = nextMinuteHonourReward_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lostHonourReward_ = lostHonourReward_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalHonourReward_ = totalHonourReward_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.currentCopperReward_ = currentCopperReward_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.lostCopperReward_ = lostCopperReward_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.totalCopperReward_ = totalCopperReward_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.nextMinuteCopperReward_ = nextMinuteCopperReward_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.rewardFlag_ = rewardFlag_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.captureTimes_ = captureTimes_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.consecutiveVictories_ = consecutiveVictories_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.honourReward_ = honourReward_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.copperReward_ = copperReward_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse other) {
        if (other == com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRank()) {
          setRank(other.getRank());
        }
        if (other.hasCurrentHonourReward()) {
          setCurrentHonourReward(other.getCurrentHonourReward());
        }
        if (other.hasNextMinuteHonourReward()) {
          setNextMinuteHonourReward(other.getNextMinuteHonourReward());
        }
        if (other.hasLostHonourReward()) {
          setLostHonourReward(other.getLostHonourReward());
        }
        if (other.hasTotalHonourReward()) {
          setTotalHonourReward(other.getTotalHonourReward());
        }
        if (other.hasCurrentCopperReward()) {
          setCurrentCopperReward(other.getCurrentCopperReward());
        }
        if (other.hasLostCopperReward()) {
          setLostCopperReward(other.getLostCopperReward());
        }
        if (other.hasTotalCopperReward()) {
          setTotalCopperReward(other.getTotalCopperReward());
        }
        if (other.hasNextMinuteCopperReward()) {
          setNextMinuteCopperReward(other.getNextMinuteCopperReward());
        }
        if (other.hasRewardFlag()) {
          setRewardFlag(other.getRewardFlag());
        }
        if (other.hasCaptureTimes()) {
          setCaptureTimes(other.getCaptureTimes());
        }
        if (other.hasConsecutiveVictories()) {
          setConsecutiveVictories(other.getConsecutiveVictories());
        }
        if (other.hasHonourReward()) {
          setHonourReward(other.getHonourReward());
        }
        if (other.hasCopperReward()) {
          setCopperReward(other.getCopperReward());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.arena.GetRankRewardMessage.GetRankRewardResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // required .sanguo.StatusCode status = 2;
      private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
        return status_;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder setStatus(com.cwa.sanguo.messages.MsgStatusCode.StatusCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        
        return this;
      }

      // optional uint64 rank = 3;
      private long rank_ ;
      /**
       * <code>optional uint64 rank = 3;</code>
       *
       * <pre>
       *客户端看到的排名
       * </pre>
       */
      public boolean hasRank() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 rank = 3;</code>
       *
       * <pre>
       *客户端看到的排名
       * </pre>
       */
      public long getRank() {
        return rank_;
      }
      /**
       * <code>optional uint64 rank = 3;</code>
       *
       * <pre>
       *客户端看到的排名
       * </pre>
       */
      public Builder setRank(long value) {
        bitField0_ |= 0x00000004;
        rank_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 rank = 3;</code>
       *
       * <pre>
       *客户端看到的排名
       * </pre>
       */
      public Builder clearRank() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rank_ = 0L;
        
        return this;
      }

      // optional uint64 currentHonourReward = 4;
      private long currentHonourReward_ ;
      /**
       * <code>optional uint64 currentHonourReward = 4;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public boolean hasCurrentHonourReward() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 currentHonourReward = 4;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public long getCurrentHonourReward() {
        return currentHonourReward_;
      }
      /**
       * <code>optional uint64 currentHonourReward = 4;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public Builder setCurrentHonourReward(long value) {
        bitField0_ |= 0x00000008;
        currentHonourReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 currentHonourReward = 4;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public Builder clearCurrentHonourReward() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currentHonourReward_ = 0L;
        
        return this;
      }

      // optional uint32 nextMinuteHonourReward = 5;
      private int nextMinuteHonourReward_ ;
      /**
       * <code>optional uint32 nextMinuteHonourReward = 5;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public boolean hasNextMinuteHonourReward() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 nextMinuteHonourReward = 5;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public int getNextMinuteHonourReward() {
        return nextMinuteHonourReward_;
      }
      /**
       * <code>optional uint32 nextMinuteHonourReward = 5;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public Builder setNextMinuteHonourReward(int value) {
        bitField0_ |= 0x00000010;
        nextMinuteHonourReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 nextMinuteHonourReward = 5;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public Builder clearNextMinuteHonourReward() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nextMinuteHonourReward_ = 0;
        
        return this;
      }

      // optional uint64 lostHonourReward = 6;
      private long lostHonourReward_ ;
      /**
       * <code>optional uint64 lostHonourReward = 6;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public boolean hasLostHonourReward() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 lostHonourReward = 6;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public long getLostHonourReward() {
        return lostHonourReward_;
      }
      /**
       * <code>optional uint64 lostHonourReward = 6;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public Builder setLostHonourReward(long value) {
        bitField0_ |= 0x00000020;
        lostHonourReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 lostHonourReward = 6;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public Builder clearLostHonourReward() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lostHonourReward_ = 0L;
        
        return this;
      }

      // optional uint64 totalHonourReward = 7;
      private long totalHonourReward_ ;
      /**
       * <code>optional uint64 totalHonourReward = 7;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public boolean hasTotalHonourReward() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 totalHonourReward = 7;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public long getTotalHonourReward() {
        return totalHonourReward_;
      }
      /**
       * <code>optional uint64 totalHonourReward = 7;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public Builder setTotalHonourReward(long value) {
        bitField0_ |= 0x00000040;
        totalHonourReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 totalHonourReward = 7;</code>
       *
       * <pre>
       * 奖励荣誉
       * </pre>
       */
      public Builder clearTotalHonourReward() {
        bitField0_ = (bitField0_ & ~0x00000040);
        totalHonourReward_ = 0L;
        
        return this;
      }

      // optional uint64 currentCopperReward = 8;
      private long currentCopperReward_ ;
      /**
       * <code>optional uint64 currentCopperReward = 8;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public boolean hasCurrentCopperReward() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 currentCopperReward = 8;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public long getCurrentCopperReward() {
        return currentCopperReward_;
      }
      /**
       * <code>optional uint64 currentCopperReward = 8;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public Builder setCurrentCopperReward(long value) {
        bitField0_ |= 0x00000080;
        currentCopperReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 currentCopperReward = 8;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public Builder clearCurrentCopperReward() {
        bitField0_ = (bitField0_ & ~0x00000080);
        currentCopperReward_ = 0L;
        
        return this;
      }

      // optional uint64 lostCopperReward = 9;
      private long lostCopperReward_ ;
      /**
       * <code>optional uint64 lostCopperReward = 9;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public boolean hasLostCopperReward() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 lostCopperReward = 9;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public long getLostCopperReward() {
        return lostCopperReward_;
      }
      /**
       * <code>optional uint64 lostCopperReward = 9;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public Builder setLostCopperReward(long value) {
        bitField0_ |= 0x00000100;
        lostCopperReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 lostCopperReward = 9;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public Builder clearLostCopperReward() {
        bitField0_ = (bitField0_ & ~0x00000100);
        lostCopperReward_ = 0L;
        
        return this;
      }

      // optional uint64 totalCopperReward = 10;
      private long totalCopperReward_ ;
      /**
       * <code>optional uint64 totalCopperReward = 10;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public boolean hasTotalCopperReward() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint64 totalCopperReward = 10;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public long getTotalCopperReward() {
        return totalCopperReward_;
      }
      /**
       * <code>optional uint64 totalCopperReward = 10;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public Builder setTotalCopperReward(long value) {
        bitField0_ |= 0x00000200;
        totalCopperReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 totalCopperReward = 10;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public Builder clearTotalCopperReward() {
        bitField0_ = (bitField0_ & ~0x00000200);
        totalCopperReward_ = 0L;
        
        return this;
      }

      // optional uint32 nextMinuteCopperReward = 11;
      private int nextMinuteCopperReward_ ;
      /**
       * <code>optional uint32 nextMinuteCopperReward = 11;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public boolean hasNextMinuteCopperReward() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 nextMinuteCopperReward = 11;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public int getNextMinuteCopperReward() {
        return nextMinuteCopperReward_;
      }
      /**
       * <code>optional uint32 nextMinuteCopperReward = 11;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public Builder setNextMinuteCopperReward(int value) {
        bitField0_ |= 0x00000400;
        nextMinuteCopperReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 nextMinuteCopperReward = 11;</code>
       *
       * <pre>
       * 奖励铜钱
       * </pre>
       */
      public Builder clearNextMinuteCopperReward() {
        bitField0_ = (bitField0_ & ~0x00000400);
        nextMinuteCopperReward_ = 0;
        
        return this;
      }

      // optional bool rewardFlag = 12;
      private boolean rewardFlag_ ;
      /**
       * <code>optional bool rewardFlag = 12;</code>
       *
       * <pre>
       * 标志领奖true
       * </pre>
       */
      public boolean hasRewardFlag() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool rewardFlag = 12;</code>
       *
       * <pre>
       * 标志领奖true
       * </pre>
       */
      public boolean getRewardFlag() {
        return rewardFlag_;
      }
      /**
       * <code>optional bool rewardFlag = 12;</code>
       *
       * <pre>
       * 标志领奖true
       * </pre>
       */
      public Builder setRewardFlag(boolean value) {
        bitField0_ |= 0x00000800;
        rewardFlag_ = value;
        
        return this;
      }
      /**
       * <code>optional bool rewardFlag = 12;</code>
       *
       * <pre>
       * 标志领奖true
       * </pre>
       */
      public Builder clearRewardFlag() {
        bitField0_ = (bitField0_ & ~0x00000800);
        rewardFlag_ = false;
        
        return this;
      }

      // optional uint64 captureTimes = 13;
      private long captureTimes_ ;
      /**
       * <code>optional uint64 captureTimes = 13;</code>
       *
       * <pre>
       * 占领时长 
       * </pre>
       */
      public boolean hasCaptureTimes() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint64 captureTimes = 13;</code>
       *
       * <pre>
       * 占领时长 
       * </pre>
       */
      public long getCaptureTimes() {
        return captureTimes_;
      }
      /**
       * <code>optional uint64 captureTimes = 13;</code>
       *
       * <pre>
       * 占领时长 
       * </pre>
       */
      public Builder setCaptureTimes(long value) {
        bitField0_ |= 0x00001000;
        captureTimes_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 captureTimes = 13;</code>
       *
       * <pre>
       * 占领时长 
       * </pre>
       */
      public Builder clearCaptureTimes() {
        bitField0_ = (bitField0_ & ~0x00001000);
        captureTimes_ = 0L;
        
        return this;
      }

      // optional uint32 consecutiveVictories = 14;
      private int consecutiveVictories_ ;
      /**
       * <code>optional uint32 consecutiveVictories = 14;</code>
       *
       * <pre>
       * 连胜场次
       * </pre>
       */
      public boolean hasConsecutiveVictories() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 consecutiveVictories = 14;</code>
       *
       * <pre>
       * 连胜场次
       * </pre>
       */
      public int getConsecutiveVictories() {
        return consecutiveVictories_;
      }
      /**
       * <code>optional uint32 consecutiveVictories = 14;</code>
       *
       * <pre>
       * 连胜场次
       * </pre>
       */
      public Builder setConsecutiveVictories(int value) {
        bitField0_ |= 0x00002000;
        consecutiveVictories_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 consecutiveVictories = 14;</code>
       *
       * <pre>
       * 连胜场次
       * </pre>
       */
      public Builder clearConsecutiveVictories() {
        bitField0_ = (bitField0_ & ~0x00002000);
        consecutiveVictories_ = 0;
        
        return this;
      }

      // optional uint64 honourReward = 15;
      private long honourReward_ ;
      /**
       * <code>optional uint64 honourReward = 15;</code>
       *
       * <pre>
       * 领取的荣誉奖励
       * </pre>
       */
      public boolean hasHonourReward() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint64 honourReward = 15;</code>
       *
       * <pre>
       * 领取的荣誉奖励
       * </pre>
       */
      public long getHonourReward() {
        return honourReward_;
      }
      /**
       * <code>optional uint64 honourReward = 15;</code>
       *
       * <pre>
       * 领取的荣誉奖励
       * </pre>
       */
      public Builder setHonourReward(long value) {
        bitField0_ |= 0x00004000;
        honourReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 honourReward = 15;</code>
       *
       * <pre>
       * 领取的荣誉奖励
       * </pre>
       */
      public Builder clearHonourReward() {
        bitField0_ = (bitField0_ & ~0x00004000);
        honourReward_ = 0L;
        
        return this;
      }

      // optional uint64 copperReward = 16;
      private long copperReward_ ;
      /**
       * <code>optional uint64 copperReward = 16;</code>
       *
       * <pre>
       * 领取的铜钱奖励
       * </pre>
       */
      public boolean hasCopperReward() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint64 copperReward = 16;</code>
       *
       * <pre>
       * 领取的铜钱奖励
       * </pre>
       */
      public long getCopperReward() {
        return copperReward_;
      }
      /**
       * <code>optional uint64 copperReward = 16;</code>
       *
       * <pre>
       * 领取的铜钱奖励
       * </pre>
       */
      public Builder setCopperReward(long value) {
        bitField0_ |= 0x00008000;
        copperReward_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 copperReward = 16;</code>
       *
       * <pre>
       * 领取的铜钱奖励
       * </pre>
       */
      public Builder clearCopperReward() {
        bitField0_ = (bitField0_ & ~0x00008000);
        copperReward_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.GetRankRewardResponse)
    }

    static {
      defaultInstance = new GetRankRewardResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.GetRankRewardResponse)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
