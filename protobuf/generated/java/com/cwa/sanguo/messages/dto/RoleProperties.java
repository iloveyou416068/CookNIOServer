// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_properties.proto

package com.cwa.sanguo.messages.dto;

public final class RoleProperties {
  private RoleProperties() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MsgRolePropertiesOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 hp = 1;
    /**
     * <code>required uint32 hp = 1;</code>
     */
    boolean hasHp();
    /**
     * <code>required uint32 hp = 1;</code>
     */
    int getHp();

    // required uint32 physicalAttack = 2;
    /**
     * <code>required uint32 physicalAttack = 2;</code>
     */
    boolean hasPhysicalAttack();
    /**
     * <code>required uint32 physicalAttack = 2;</code>
     */
    int getPhysicalAttack();

    // required uint32 physicalDefense = 3;
    /**
     * <code>required uint32 physicalDefense = 3;</code>
     */
    boolean hasPhysicalDefense();
    /**
     * <code>required uint32 physicalDefense = 3;</code>
     */
    int getPhysicalDefense();

    // required uint32 skillAttack = 4;
    /**
     * <code>required uint32 skillAttack = 4;</code>
     */
    boolean hasSkillAttack();
    /**
     * <code>required uint32 skillAttack = 4;</code>
     */
    int getSkillAttack();

    // required uint32 skillDefense = 5;
    /**
     * <code>required uint32 skillDefense = 5;</code>
     */
    boolean hasSkillDefense();
    /**
     * <code>required uint32 skillDefense = 5;</code>
     */
    int getSkillDefense();

    // required uint32 magicAttack = 6;
    /**
     * <code>required uint32 magicAttack = 6;</code>
     */
    boolean hasMagicAttack();
    /**
     * <code>required uint32 magicAttack = 6;</code>
     */
    int getMagicAttack();

    // required uint32 magicDefense = 7;
    /**
     * <code>required uint32 magicDefense = 7;</code>
     */
    boolean hasMagicDefense();
    /**
     * <code>required uint32 magicDefense = 7;</code>
     */
    int getMagicDefense();

    // required uint32 critical = 8;
    /**
     * <code>required uint32 critical = 8;</code>
     */
    boolean hasCritical();
    /**
     * <code>required uint32 critical = 8;</code>
     */
    int getCritical();

    // required uint32 toughness = 9;
    /**
     * <code>required uint32 toughness = 9;</code>
     */
    boolean hasToughness();
    /**
     * <code>required uint32 toughness = 9;</code>
     */
    int getToughness();

    // required uint32 dodge = 10;
    /**
     * <code>required uint32 dodge = 10;</code>
     */
    boolean hasDodge();
    /**
     * <code>required uint32 dodge = 10;</code>
     */
    int getDodge();

    // required uint32 hit = 11;
    /**
     * <code>required uint32 hit = 11;</code>
     */
    boolean hasHit();
    /**
     * <code>required uint32 hit = 11;</code>
     */
    int getHit();

    // required uint32 block = 12;
    /**
     * <code>required uint32 block = 12;</code>
     */
    boolean hasBlock();
    /**
     * <code>required uint32 block = 12;</code>
     */
    int getBlock();

    // required uint32 sunder = 13;
    /**
     * <code>required uint32 sunder = 13;</code>
     */
    boolean hasSunder();
    /**
     * <code>required uint32 sunder = 13;</code>
     */
    int getSunder();
  }
  /**
   * Protobuf type {@code sanguo.MsgRoleProperties}
   *
   * <pre>
   * 角色的13个属性
   * </pre>
   */
  public static final class MsgRoleProperties extends
      com.google.protobuf.GeneratedMessageLite
      implements MsgRolePropertiesOrBuilder {
    // Use MsgRoleProperties.newBuilder() to construct.
    private MsgRoleProperties(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MsgRoleProperties(boolean noInit) {}

    private static final MsgRoleProperties defaultInstance;
    public static MsgRoleProperties getDefaultInstance() {
      return defaultInstance;
    }

    public MsgRoleProperties getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MsgRoleProperties(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              hp_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              physicalAttack_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              physicalDefense_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              skillAttack_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              skillDefense_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              magicAttack_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              magicDefense_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              critical_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              toughness_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              dodge_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              hit_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              block_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              sunder_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MsgRoleProperties> PARSER =
        new com.google.protobuf.AbstractParser<MsgRoleProperties>() {
      public MsgRoleProperties parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgRoleProperties(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgRoleProperties> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 hp = 1;
    public static final int HP_FIELD_NUMBER = 1;
    private int hp_;
    /**
     * <code>required uint32 hp = 1;</code>
     */
    public boolean hasHp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 hp = 1;</code>
     */
    public int getHp() {
      return hp_;
    }

    // required uint32 physicalAttack = 2;
    public static final int PHYSICALATTACK_FIELD_NUMBER = 2;
    private int physicalAttack_;
    /**
     * <code>required uint32 physicalAttack = 2;</code>
     */
    public boolean hasPhysicalAttack() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 physicalAttack = 2;</code>
     */
    public int getPhysicalAttack() {
      return physicalAttack_;
    }

    // required uint32 physicalDefense = 3;
    public static final int PHYSICALDEFENSE_FIELD_NUMBER = 3;
    private int physicalDefense_;
    /**
     * <code>required uint32 physicalDefense = 3;</code>
     */
    public boolean hasPhysicalDefense() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 physicalDefense = 3;</code>
     */
    public int getPhysicalDefense() {
      return physicalDefense_;
    }

    // required uint32 skillAttack = 4;
    public static final int SKILLATTACK_FIELD_NUMBER = 4;
    private int skillAttack_;
    /**
     * <code>required uint32 skillAttack = 4;</code>
     */
    public boolean hasSkillAttack() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 skillAttack = 4;</code>
     */
    public int getSkillAttack() {
      return skillAttack_;
    }

    // required uint32 skillDefense = 5;
    public static final int SKILLDEFENSE_FIELD_NUMBER = 5;
    private int skillDefense_;
    /**
     * <code>required uint32 skillDefense = 5;</code>
     */
    public boolean hasSkillDefense() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 skillDefense = 5;</code>
     */
    public int getSkillDefense() {
      return skillDefense_;
    }

    // required uint32 magicAttack = 6;
    public static final int MAGICATTACK_FIELD_NUMBER = 6;
    private int magicAttack_;
    /**
     * <code>required uint32 magicAttack = 6;</code>
     */
    public boolean hasMagicAttack() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 magicAttack = 6;</code>
     */
    public int getMagicAttack() {
      return magicAttack_;
    }

    // required uint32 magicDefense = 7;
    public static final int MAGICDEFENSE_FIELD_NUMBER = 7;
    private int magicDefense_;
    /**
     * <code>required uint32 magicDefense = 7;</code>
     */
    public boolean hasMagicDefense() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint32 magicDefense = 7;</code>
     */
    public int getMagicDefense() {
      return magicDefense_;
    }

    // required uint32 critical = 8;
    public static final int CRITICAL_FIELD_NUMBER = 8;
    private int critical_;
    /**
     * <code>required uint32 critical = 8;</code>
     */
    public boolean hasCritical() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required uint32 critical = 8;</code>
     */
    public int getCritical() {
      return critical_;
    }

    // required uint32 toughness = 9;
    public static final int TOUGHNESS_FIELD_NUMBER = 9;
    private int toughness_;
    /**
     * <code>required uint32 toughness = 9;</code>
     */
    public boolean hasToughness() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required uint32 toughness = 9;</code>
     */
    public int getToughness() {
      return toughness_;
    }

    // required uint32 dodge = 10;
    public static final int DODGE_FIELD_NUMBER = 10;
    private int dodge_;
    /**
     * <code>required uint32 dodge = 10;</code>
     */
    public boolean hasDodge() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required uint32 dodge = 10;</code>
     */
    public int getDodge() {
      return dodge_;
    }

    // required uint32 hit = 11;
    public static final int HIT_FIELD_NUMBER = 11;
    private int hit_;
    /**
     * <code>required uint32 hit = 11;</code>
     */
    public boolean hasHit() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required uint32 hit = 11;</code>
     */
    public int getHit() {
      return hit_;
    }

    // required uint32 block = 12;
    public static final int BLOCK_FIELD_NUMBER = 12;
    private int block_;
    /**
     * <code>required uint32 block = 12;</code>
     */
    public boolean hasBlock() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required uint32 block = 12;</code>
     */
    public int getBlock() {
      return block_;
    }

    // required uint32 sunder = 13;
    public static final int SUNDER_FIELD_NUMBER = 13;
    private int sunder_;
    /**
     * <code>required uint32 sunder = 13;</code>
     */
    public boolean hasSunder() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required uint32 sunder = 13;</code>
     */
    public int getSunder() {
      return sunder_;
    }

    private void initFields() {
      hp_ = 0;
      physicalAttack_ = 0;
      physicalDefense_ = 0;
      skillAttack_ = 0;
      skillDefense_ = 0;
      magicAttack_ = 0;
      magicDefense_ = 0;
      critical_ = 0;
      toughness_ = 0;
      dodge_ = 0;
      hit_ = 0;
      block_ = 0;
      sunder_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPhysicalAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPhysicalDefense()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSkillAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSkillDefense()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMagicAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMagicDefense()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCritical()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToughness()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDodge()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSunder()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, hp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, physicalAttack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, physicalDefense_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, skillAttack_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, skillDefense_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, magicAttack_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, magicDefense_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, critical_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, toughness_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, dodge_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, hit_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, block_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, sunder_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, hp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, physicalAttack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, physicalDefense_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, skillAttack_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, skillDefense_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, magicAttack_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, magicDefense_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, critical_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, toughness_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, dodge_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, hit_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, block_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, sunder_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.MsgRoleProperties}
     *
     * <pre>
     * 角色的13个属性
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties, Builder>
        implements com.cwa.sanguo.messages.dto.RoleProperties.MsgRolePropertiesOrBuilder {
      // Construct using com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        physicalAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        physicalDefense_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        skillAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        skillDefense_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        magicAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        magicDefense_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        critical_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        toughness_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        dodge_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        hit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        block_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        sunder_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties build() {
        com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties buildPartial() {
        com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties result = new com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hp_ = hp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.physicalAttack_ = physicalAttack_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.physicalDefense_ = physicalDefense_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.skillAttack_ = skillAttack_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.skillDefense_ = skillDefense_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.magicAttack_ = magicAttack_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.magicDefense_ = magicDefense_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.critical_ = critical_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.toughness_ = toughness_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.dodge_ = dodge_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.hit_ = hit_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.block_ = block_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.sunder_ = sunder_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties other) {
        if (other == com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties.getDefaultInstance()) return this;
        if (other.hasHp()) {
          setHp(other.getHp());
        }
        if (other.hasPhysicalAttack()) {
          setPhysicalAttack(other.getPhysicalAttack());
        }
        if (other.hasPhysicalDefense()) {
          setPhysicalDefense(other.getPhysicalDefense());
        }
        if (other.hasSkillAttack()) {
          setSkillAttack(other.getSkillAttack());
        }
        if (other.hasSkillDefense()) {
          setSkillDefense(other.getSkillDefense());
        }
        if (other.hasMagicAttack()) {
          setMagicAttack(other.getMagicAttack());
        }
        if (other.hasMagicDefense()) {
          setMagicDefense(other.getMagicDefense());
        }
        if (other.hasCritical()) {
          setCritical(other.getCritical());
        }
        if (other.hasToughness()) {
          setToughness(other.getToughness());
        }
        if (other.hasDodge()) {
          setDodge(other.getDodge());
        }
        if (other.hasHit()) {
          setHit(other.getHit());
        }
        if (other.hasBlock()) {
          setBlock(other.getBlock());
        }
        if (other.hasSunder()) {
          setSunder(other.getSunder());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHp()) {
          
          return false;
        }
        if (!hasPhysicalAttack()) {
          
          return false;
        }
        if (!hasPhysicalDefense()) {
          
          return false;
        }
        if (!hasSkillAttack()) {
          
          return false;
        }
        if (!hasSkillDefense()) {
          
          return false;
        }
        if (!hasMagicAttack()) {
          
          return false;
        }
        if (!hasMagicDefense()) {
          
          return false;
        }
        if (!hasCritical()) {
          
          return false;
        }
        if (!hasToughness()) {
          
          return false;
        }
        if (!hasDodge()) {
          
          return false;
        }
        if (!hasHit()) {
          
          return false;
        }
        if (!hasBlock()) {
          
          return false;
        }
        if (!hasSunder()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dto.RoleProperties.MsgRoleProperties) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 hp = 1;
      private int hp_ ;
      /**
       * <code>required uint32 hp = 1;</code>
       */
      public boolean hasHp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 hp = 1;</code>
       */
      public int getHp() {
        return hp_;
      }
      /**
       * <code>required uint32 hp = 1;</code>
       */
      public Builder setHp(int value) {
        bitField0_ |= 0x00000001;
        hp_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 hp = 1;</code>
       */
      public Builder clearHp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hp_ = 0;
        
        return this;
      }

      // required uint32 physicalAttack = 2;
      private int physicalAttack_ ;
      /**
       * <code>required uint32 physicalAttack = 2;</code>
       */
      public boolean hasPhysicalAttack() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 physicalAttack = 2;</code>
       */
      public int getPhysicalAttack() {
        return physicalAttack_;
      }
      /**
       * <code>required uint32 physicalAttack = 2;</code>
       */
      public Builder setPhysicalAttack(int value) {
        bitField0_ |= 0x00000002;
        physicalAttack_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 physicalAttack = 2;</code>
       */
      public Builder clearPhysicalAttack() {
        bitField0_ = (bitField0_ & ~0x00000002);
        physicalAttack_ = 0;
        
        return this;
      }

      // required uint32 physicalDefense = 3;
      private int physicalDefense_ ;
      /**
       * <code>required uint32 physicalDefense = 3;</code>
       */
      public boolean hasPhysicalDefense() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 physicalDefense = 3;</code>
       */
      public int getPhysicalDefense() {
        return physicalDefense_;
      }
      /**
       * <code>required uint32 physicalDefense = 3;</code>
       */
      public Builder setPhysicalDefense(int value) {
        bitField0_ |= 0x00000004;
        physicalDefense_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 physicalDefense = 3;</code>
       */
      public Builder clearPhysicalDefense() {
        bitField0_ = (bitField0_ & ~0x00000004);
        physicalDefense_ = 0;
        
        return this;
      }

      // required uint32 skillAttack = 4;
      private int skillAttack_ ;
      /**
       * <code>required uint32 skillAttack = 4;</code>
       */
      public boolean hasSkillAttack() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 skillAttack = 4;</code>
       */
      public int getSkillAttack() {
        return skillAttack_;
      }
      /**
       * <code>required uint32 skillAttack = 4;</code>
       */
      public Builder setSkillAttack(int value) {
        bitField0_ |= 0x00000008;
        skillAttack_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 skillAttack = 4;</code>
       */
      public Builder clearSkillAttack() {
        bitField0_ = (bitField0_ & ~0x00000008);
        skillAttack_ = 0;
        
        return this;
      }

      // required uint32 skillDefense = 5;
      private int skillDefense_ ;
      /**
       * <code>required uint32 skillDefense = 5;</code>
       */
      public boolean hasSkillDefense() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 skillDefense = 5;</code>
       */
      public int getSkillDefense() {
        return skillDefense_;
      }
      /**
       * <code>required uint32 skillDefense = 5;</code>
       */
      public Builder setSkillDefense(int value) {
        bitField0_ |= 0x00000010;
        skillDefense_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 skillDefense = 5;</code>
       */
      public Builder clearSkillDefense() {
        bitField0_ = (bitField0_ & ~0x00000010);
        skillDefense_ = 0;
        
        return this;
      }

      // required uint32 magicAttack = 6;
      private int magicAttack_ ;
      /**
       * <code>required uint32 magicAttack = 6;</code>
       */
      public boolean hasMagicAttack() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 magicAttack = 6;</code>
       */
      public int getMagicAttack() {
        return magicAttack_;
      }
      /**
       * <code>required uint32 magicAttack = 6;</code>
       */
      public Builder setMagicAttack(int value) {
        bitField0_ |= 0x00000020;
        magicAttack_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 magicAttack = 6;</code>
       */
      public Builder clearMagicAttack() {
        bitField0_ = (bitField0_ & ~0x00000020);
        magicAttack_ = 0;
        
        return this;
      }

      // required uint32 magicDefense = 7;
      private int magicDefense_ ;
      /**
       * <code>required uint32 magicDefense = 7;</code>
       */
      public boolean hasMagicDefense() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 magicDefense = 7;</code>
       */
      public int getMagicDefense() {
        return magicDefense_;
      }
      /**
       * <code>required uint32 magicDefense = 7;</code>
       */
      public Builder setMagicDefense(int value) {
        bitField0_ |= 0x00000040;
        magicDefense_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 magicDefense = 7;</code>
       */
      public Builder clearMagicDefense() {
        bitField0_ = (bitField0_ & ~0x00000040);
        magicDefense_ = 0;
        
        return this;
      }

      // required uint32 critical = 8;
      private int critical_ ;
      /**
       * <code>required uint32 critical = 8;</code>
       */
      public boolean hasCritical() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required uint32 critical = 8;</code>
       */
      public int getCritical() {
        return critical_;
      }
      /**
       * <code>required uint32 critical = 8;</code>
       */
      public Builder setCritical(int value) {
        bitField0_ |= 0x00000080;
        critical_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 critical = 8;</code>
       */
      public Builder clearCritical() {
        bitField0_ = (bitField0_ & ~0x00000080);
        critical_ = 0;
        
        return this;
      }

      // required uint32 toughness = 9;
      private int toughness_ ;
      /**
       * <code>required uint32 toughness = 9;</code>
       */
      public boolean hasToughness() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required uint32 toughness = 9;</code>
       */
      public int getToughness() {
        return toughness_;
      }
      /**
       * <code>required uint32 toughness = 9;</code>
       */
      public Builder setToughness(int value) {
        bitField0_ |= 0x00000100;
        toughness_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 toughness = 9;</code>
       */
      public Builder clearToughness() {
        bitField0_ = (bitField0_ & ~0x00000100);
        toughness_ = 0;
        
        return this;
      }

      // required uint32 dodge = 10;
      private int dodge_ ;
      /**
       * <code>required uint32 dodge = 10;</code>
       */
      public boolean hasDodge() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required uint32 dodge = 10;</code>
       */
      public int getDodge() {
        return dodge_;
      }
      /**
       * <code>required uint32 dodge = 10;</code>
       */
      public Builder setDodge(int value) {
        bitField0_ |= 0x00000200;
        dodge_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 dodge = 10;</code>
       */
      public Builder clearDodge() {
        bitField0_ = (bitField0_ & ~0x00000200);
        dodge_ = 0;
        
        return this;
      }

      // required uint32 hit = 11;
      private int hit_ ;
      /**
       * <code>required uint32 hit = 11;</code>
       */
      public boolean hasHit() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required uint32 hit = 11;</code>
       */
      public int getHit() {
        return hit_;
      }
      /**
       * <code>required uint32 hit = 11;</code>
       */
      public Builder setHit(int value) {
        bitField0_ |= 0x00000400;
        hit_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 hit = 11;</code>
       */
      public Builder clearHit() {
        bitField0_ = (bitField0_ & ~0x00000400);
        hit_ = 0;
        
        return this;
      }

      // required uint32 block = 12;
      private int block_ ;
      /**
       * <code>required uint32 block = 12;</code>
       */
      public boolean hasBlock() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required uint32 block = 12;</code>
       */
      public int getBlock() {
        return block_;
      }
      /**
       * <code>required uint32 block = 12;</code>
       */
      public Builder setBlock(int value) {
        bitField0_ |= 0x00000800;
        block_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 block = 12;</code>
       */
      public Builder clearBlock() {
        bitField0_ = (bitField0_ & ~0x00000800);
        block_ = 0;
        
        return this;
      }

      // required uint32 sunder = 13;
      private int sunder_ ;
      /**
       * <code>required uint32 sunder = 13;</code>
       */
      public boolean hasSunder() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required uint32 sunder = 13;</code>
       */
      public int getSunder() {
        return sunder_;
      }
      /**
       * <code>required uint32 sunder = 13;</code>
       */
      public Builder setSunder(int value) {
        bitField0_ |= 0x00001000;
        sunder_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 sunder = 13;</code>
       */
      public Builder clearSunder() {
        bitField0_ = (bitField0_ & ~0x00001000);
        sunder_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.MsgRoleProperties)
    }

    static {
      defaultInstance = new MsgRoleProperties(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.MsgRoleProperties)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
