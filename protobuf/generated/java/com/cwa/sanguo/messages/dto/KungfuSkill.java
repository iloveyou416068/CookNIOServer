// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kungfu_skill.proto

package com.cwa.sanguo.messages.dto;

public final class KungfuSkill {
  private KungfuSkill() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MsgKungfuSkillOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 kungfuSkillID = 1;
    /**
     * <code>required uint32 kungfuSkillID = 1;</code>
     */
    boolean hasKungfuSkillID();
    /**
     * <code>required uint32 kungfuSkillID = 1;</code>
     */
    int getKungfuSkillID();

    // required uint32 ownerNum = 2;
    /**
     * <code>required uint32 ownerNum = 2;</code>
     *
     * <pre>
     * 可装备的N值
     * </pre>
     */
    boolean hasOwnerNum();
    /**
     * <code>required uint32 ownerNum = 2;</code>
     *
     * <pre>
     * 可装备的N值
     * </pre>
     */
    int getOwnerNum();

    // required uint32 ownerTotalNum = 3;
    /**
     * <code>required uint32 ownerTotalNum = 3;</code>
     *
     * <pre>
     * 总共开启的数量
     * </pre>
     */
    boolean hasOwnerTotalNum();
    /**
     * <code>required uint32 ownerTotalNum = 3;</code>
     *
     * <pre>
     * 总共开启的数量
     * </pre>
     */
    int getOwnerTotalNum();

    // required uint32 level = 4;
    /**
     * <code>required uint32 level = 4;</code>
     */
    boolean hasLevel();
    /**
     * <code>required uint32 level = 4;</code>
     */
    int getLevel();

    // required uint32 star = 5;
    /**
     * <code>required uint32 star = 5;</code>
     *
     * <pre>
     * 星级
     * </pre>
     */
    boolean hasStar();
    /**
     * <code>required uint32 star = 5;</code>
     *
     * <pre>
     * 星级
     * </pre>
     */
    int getStar();
  }
  /**
   * Protobuf type {@code sanguo.MsgKungfuSkill}
   */
  public static final class MsgKungfuSkill extends
      com.google.protobuf.GeneratedMessageLite
      implements MsgKungfuSkillOrBuilder {
    // Use MsgKungfuSkill.newBuilder() to construct.
    private MsgKungfuSkill(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MsgKungfuSkill(boolean noInit) {}

    private static final MsgKungfuSkill defaultInstance;
    public static MsgKungfuSkill getDefaultInstance() {
      return defaultInstance;
    }

    public MsgKungfuSkill getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MsgKungfuSkill(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              kungfuSkillID_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ownerNum_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ownerTotalNum_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              level_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              star_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MsgKungfuSkill> PARSER =
        new com.google.protobuf.AbstractParser<MsgKungfuSkill>() {
      public MsgKungfuSkill parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgKungfuSkill(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgKungfuSkill> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 kungfuSkillID = 1;
    public static final int KUNGFUSKILLID_FIELD_NUMBER = 1;
    private int kungfuSkillID_;
    /**
     * <code>required uint32 kungfuSkillID = 1;</code>
     */
    public boolean hasKungfuSkillID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 kungfuSkillID = 1;</code>
     */
    public int getKungfuSkillID() {
      return kungfuSkillID_;
    }

    // required uint32 ownerNum = 2;
    public static final int OWNERNUM_FIELD_NUMBER = 2;
    private int ownerNum_;
    /**
     * <code>required uint32 ownerNum = 2;</code>
     *
     * <pre>
     * 可装备的N值
     * </pre>
     */
    public boolean hasOwnerNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 ownerNum = 2;</code>
     *
     * <pre>
     * 可装备的N值
     * </pre>
     */
    public int getOwnerNum() {
      return ownerNum_;
    }

    // required uint32 ownerTotalNum = 3;
    public static final int OWNERTOTALNUM_FIELD_NUMBER = 3;
    private int ownerTotalNum_;
    /**
     * <code>required uint32 ownerTotalNum = 3;</code>
     *
     * <pre>
     * 总共开启的数量
     * </pre>
     */
    public boolean hasOwnerTotalNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 ownerTotalNum = 3;</code>
     *
     * <pre>
     * 总共开启的数量
     * </pre>
     */
    public int getOwnerTotalNum() {
      return ownerTotalNum_;
    }

    // required uint32 level = 4;
    public static final int LEVEL_FIELD_NUMBER = 4;
    private int level_;
    /**
     * <code>required uint32 level = 4;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 level = 4;</code>
     */
    public int getLevel() {
      return level_;
    }

    // required uint32 star = 5;
    public static final int STAR_FIELD_NUMBER = 5;
    private int star_;
    /**
     * <code>required uint32 star = 5;</code>
     *
     * <pre>
     * 星级
     * </pre>
     */
    public boolean hasStar() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 star = 5;</code>
     *
     * <pre>
     * 星级
     * </pre>
     */
    public int getStar() {
      return star_;
    }

    private void initFields() {
      kungfuSkillID_ = 0;
      ownerNum_ = 0;
      ownerTotalNum_ = 0;
      level_ = 0;
      star_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKungfuSkillID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwnerNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwnerTotalNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, kungfuSkillID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ownerNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, ownerTotalNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, level_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, star_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, kungfuSkillID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ownerNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ownerTotalNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, level_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, star_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.MsgKungfuSkill}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill, Builder>
        implements com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkillOrBuilder {
      // Construct using com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        kungfuSkillID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerTotalNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        star_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill build() {
        com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill buildPartial() {
        com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill result = new com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.kungfuSkillID_ = kungfuSkillID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerNum_ = ownerNum_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ownerTotalNum_ = ownerTotalNum_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.star_ = star_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill other) {
        if (other == com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.getDefaultInstance()) return this;
        if (other.hasKungfuSkillID()) {
          setKungfuSkillID(other.getKungfuSkillID());
        }
        if (other.hasOwnerNum()) {
          setOwnerNum(other.getOwnerNum());
        }
        if (other.hasOwnerTotalNum()) {
          setOwnerTotalNum(other.getOwnerTotalNum());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasStar()) {
          setStar(other.getStar());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKungfuSkillID()) {
          
          return false;
        }
        if (!hasOwnerNum()) {
          
          return false;
        }
        if (!hasOwnerTotalNum()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasStar()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 kungfuSkillID = 1;
      private int kungfuSkillID_ ;
      /**
       * <code>required uint32 kungfuSkillID = 1;</code>
       */
      public boolean hasKungfuSkillID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 kungfuSkillID = 1;</code>
       */
      public int getKungfuSkillID() {
        return kungfuSkillID_;
      }
      /**
       * <code>required uint32 kungfuSkillID = 1;</code>
       */
      public Builder setKungfuSkillID(int value) {
        bitField0_ |= 0x00000001;
        kungfuSkillID_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 kungfuSkillID = 1;</code>
       */
      public Builder clearKungfuSkillID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kungfuSkillID_ = 0;
        
        return this;
      }

      // required uint32 ownerNum = 2;
      private int ownerNum_ ;
      /**
       * <code>required uint32 ownerNum = 2;</code>
       *
       * <pre>
       * 可装备的N值
       * </pre>
       */
      public boolean hasOwnerNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 ownerNum = 2;</code>
       *
       * <pre>
       * 可装备的N值
       * </pre>
       */
      public int getOwnerNum() {
        return ownerNum_;
      }
      /**
       * <code>required uint32 ownerNum = 2;</code>
       *
       * <pre>
       * 可装备的N值
       * </pre>
       */
      public Builder setOwnerNum(int value) {
        bitField0_ |= 0x00000002;
        ownerNum_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 ownerNum = 2;</code>
       *
       * <pre>
       * 可装备的N值
       * </pre>
       */
      public Builder clearOwnerNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerNum_ = 0;
        
        return this;
      }

      // required uint32 ownerTotalNum = 3;
      private int ownerTotalNum_ ;
      /**
       * <code>required uint32 ownerTotalNum = 3;</code>
       *
       * <pre>
       * 总共开启的数量
       * </pre>
       */
      public boolean hasOwnerTotalNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 ownerTotalNum = 3;</code>
       *
       * <pre>
       * 总共开启的数量
       * </pre>
       */
      public int getOwnerTotalNum() {
        return ownerTotalNum_;
      }
      /**
       * <code>required uint32 ownerTotalNum = 3;</code>
       *
       * <pre>
       * 总共开启的数量
       * </pre>
       */
      public Builder setOwnerTotalNum(int value) {
        bitField0_ |= 0x00000004;
        ownerTotalNum_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 ownerTotalNum = 3;</code>
       *
       * <pre>
       * 总共开启的数量
       * </pre>
       */
      public Builder clearOwnerTotalNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ownerTotalNum_ = 0;
        
        return this;
      }

      // required uint32 level = 4;
      private int level_ ;
      /**
       * <code>required uint32 level = 4;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 level = 4;</code>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required uint32 level = 4;</code>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000008;
        level_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 level = 4;</code>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        level_ = 0;
        
        return this;
      }

      // required uint32 star = 5;
      private int star_ ;
      /**
       * <code>required uint32 star = 5;</code>
       *
       * <pre>
       * 星级
       * </pre>
       */
      public boolean hasStar() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 star = 5;</code>
       *
       * <pre>
       * 星级
       * </pre>
       */
      public int getStar() {
        return star_;
      }
      /**
       * <code>required uint32 star = 5;</code>
       *
       * <pre>
       * 星级
       * </pre>
       */
      public Builder setStar(int value) {
        bitField0_ |= 0x00000010;
        star_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 star = 5;</code>
       *
       * <pre>
       * 星级
       * </pre>
       */
      public Builder clearStar() {
        bitField0_ = (bitField0_ & ~0x00000010);
        star_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.MsgKungfuSkill)
    }

    static {
      defaultInstance = new MsgKungfuSkill(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.MsgKungfuSkill)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
