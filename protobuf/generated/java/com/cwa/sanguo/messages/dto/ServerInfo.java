// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_info.proto

package com.cwa.sanguo.messages.dto;

public final class ServerInfo {
  private ServerInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MsgServerInfoDataOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 serverID = 1;
    /**
     * <code>required uint32 serverID = 1;</code>
     *
     * <pre>
     * 服务器ID
     * </pre>
     */
    boolean hasServerID();
    /**
     * <code>required uint32 serverID = 1;</code>
     *
     * <pre>
     * 服务器ID
     * </pre>
     */
    int getServerID();

    // required string serverIP = 2;
    /**
     * <code>required string serverIP = 2;</code>
     *
     * <pre>
     * 服务器IP
     * </pre>
     */
    boolean hasServerIP();
    /**
     * <code>required string serverIP = 2;</code>
     *
     * <pre>
     * 服务器IP
     * </pre>
     */
    java.lang.String getServerIP();
    /**
     * <code>required string serverIP = 2;</code>
     *
     * <pre>
     * 服务器IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getServerIPBytes();

    // required uint32 serverPort = 3;
    /**
     * <code>required uint32 serverPort = 3;</code>
     *
     * <pre>
     * 服务器端口
     * </pre>
     */
    boolean hasServerPort();
    /**
     * <code>required uint32 serverPort = 3;</code>
     *
     * <pre>
     * 服务器端口
     * </pre>
     */
    int getServerPort();

    // required string serverName = 4;
    /**
     * <code>required string serverName = 4;</code>
     *
     * <pre>
     * 服务器名
     * </pre>
     */
    boolean hasServerName();
    /**
     * <code>required string serverName = 4;</code>
     *
     * <pre>
     * 服务器名
     * </pre>
     */
    java.lang.String getServerName();
    /**
     * <code>required string serverName = 4;</code>
     *
     * <pre>
     * 服务器名
     * </pre>
     */
    com.google.protobuf.ByteString
        getServerNameBytes();

    // required uint32 roleCount = 5;
    /**
     * <code>required uint32 roleCount = 5;</code>
     *
     * <pre>
     * 所在服务器有效角色人数
     * </pre>
     */
    boolean hasRoleCount();
    /**
     * <code>required uint32 roleCount = 5;</code>
     *
     * <pre>
     * 所在服务器有效角色人数
     * </pre>
     */
    int getRoleCount();

    // required uint32 status = 6;
    /**
     * <code>required uint32 status = 6;</code>
     *
     * <pre>
     * 0：表示服务器正常运行，1表示服务器维护
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required uint32 status = 6;</code>
     *
     * <pre>
     * 0：表示服务器正常运行，1表示服务器维护
     * </pre>
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code sanguo.MsgServerInfoData}
   */
  public static final class MsgServerInfoData extends
      com.google.protobuf.GeneratedMessageLite
      implements MsgServerInfoDataOrBuilder {
    // Use MsgServerInfoData.newBuilder() to construct.
    private MsgServerInfoData(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MsgServerInfoData(boolean noInit) {}

    private static final MsgServerInfoData defaultInstance;
    public static MsgServerInfoData getDefaultInstance() {
      return defaultInstance;
    }

    public MsgServerInfoData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MsgServerInfoData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              serverID_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              serverIP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              serverPort_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              serverName_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              roleCount_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              status_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MsgServerInfoData> PARSER =
        new com.google.protobuf.AbstractParser<MsgServerInfoData>() {
      public MsgServerInfoData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgServerInfoData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgServerInfoData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 serverID = 1;
    public static final int SERVERID_FIELD_NUMBER = 1;
    private int serverID_;
    /**
     * <code>required uint32 serverID = 1;</code>
     *
     * <pre>
     * 服务器ID
     * </pre>
     */
    public boolean hasServerID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 serverID = 1;</code>
     *
     * <pre>
     * 服务器ID
     * </pre>
     */
    public int getServerID() {
      return serverID_;
    }

    // required string serverIP = 2;
    public static final int SERVERIP_FIELD_NUMBER = 2;
    private java.lang.Object serverIP_;
    /**
     * <code>required string serverIP = 2;</code>
     *
     * <pre>
     * 服务器IP
     * </pre>
     */
    public boolean hasServerIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string serverIP = 2;</code>
     *
     * <pre>
     * 服务器IP
     * </pre>
     */
    public java.lang.String getServerIP() {
      java.lang.Object ref = serverIP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serverIP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string serverIP = 2;</code>
     *
     * <pre>
     * 服务器IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getServerIPBytes() {
      java.lang.Object ref = serverIP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverIP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 serverPort = 3;
    public static final int SERVERPORT_FIELD_NUMBER = 3;
    private int serverPort_;
    /**
     * <code>required uint32 serverPort = 3;</code>
     *
     * <pre>
     * 服务器端口
     * </pre>
     */
    public boolean hasServerPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 serverPort = 3;</code>
     *
     * <pre>
     * 服务器端口
     * </pre>
     */
    public int getServerPort() {
      return serverPort_;
    }

    // required string serverName = 4;
    public static final int SERVERNAME_FIELD_NUMBER = 4;
    private java.lang.Object serverName_;
    /**
     * <code>required string serverName = 4;</code>
     *
     * <pre>
     * 服务器名
     * </pre>
     */
    public boolean hasServerName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string serverName = 4;</code>
     *
     * <pre>
     * 服务器名
     * </pre>
     */
    public java.lang.String getServerName() {
      java.lang.Object ref = serverName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serverName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string serverName = 4;</code>
     *
     * <pre>
     * 服务器名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getServerNameBytes() {
      java.lang.Object ref = serverName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 roleCount = 5;
    public static final int ROLECOUNT_FIELD_NUMBER = 5;
    private int roleCount_;
    /**
     * <code>required uint32 roleCount = 5;</code>
     *
     * <pre>
     * 所在服务器有效角色人数
     * </pre>
     */
    public boolean hasRoleCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 roleCount = 5;</code>
     *
     * <pre>
     * 所在服务器有效角色人数
     * </pre>
     */
    public int getRoleCount() {
      return roleCount_;
    }

    // required uint32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>required uint32 status = 6;</code>
     *
     * <pre>
     * 0：表示服务器正常运行，1表示服务器维护
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 status = 6;</code>
     *
     * <pre>
     * 0：表示服务器正常运行，1表示服务器维护
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    private void initFields() {
      serverID_ = 0;
      serverIP_ = "";
      serverPort_ = 0;
      serverName_ = "";
      roleCount_ = 0;
      status_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasServerID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerIP()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, serverID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getServerIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, serverPort_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getServerNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, roleCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, status_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, serverID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getServerIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, serverPort_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getServerNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, roleCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, status_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.MsgServerInfoData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData, Builder>
        implements com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoDataOrBuilder {
      // Construct using com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serverID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        serverIP_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        serverPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        serverName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        roleCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData build() {
        com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData buildPartial() {
        com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData result = new com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serverID_ = serverID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serverIP_ = serverIP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serverPort_ = serverPort_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.serverName_ = serverName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.roleCount_ = roleCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData other) {
        if (other == com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData.getDefaultInstance()) return this;
        if (other.hasServerID()) {
          setServerID(other.getServerID());
        }
        if (other.hasServerIP()) {
          bitField0_ |= 0x00000002;
          serverIP_ = other.serverIP_;
          
        }
        if (other.hasServerPort()) {
          setServerPort(other.getServerPort());
        }
        if (other.hasServerName()) {
          bitField0_ |= 0x00000008;
          serverName_ = other.serverName_;
          
        }
        if (other.hasRoleCount()) {
          setRoleCount(other.getRoleCount());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasServerID()) {
          
          return false;
        }
        if (!hasServerIP()) {
          
          return false;
        }
        if (!hasServerPort()) {
          
          return false;
        }
        if (!hasServerName()) {
          
          return false;
        }
        if (!hasRoleCount()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dto.ServerInfo.MsgServerInfoData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 serverID = 1;
      private int serverID_ ;
      /**
       * <code>required uint32 serverID = 1;</code>
       *
       * <pre>
       * 服务器ID
       * </pre>
       */
      public boolean hasServerID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 serverID = 1;</code>
       *
       * <pre>
       * 服务器ID
       * </pre>
       */
      public int getServerID() {
        return serverID_;
      }
      /**
       * <code>required uint32 serverID = 1;</code>
       *
       * <pre>
       * 服务器ID
       * </pre>
       */
      public Builder setServerID(int value) {
        bitField0_ |= 0x00000001;
        serverID_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 serverID = 1;</code>
       *
       * <pre>
       * 服务器ID
       * </pre>
       */
      public Builder clearServerID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serverID_ = 0;
        
        return this;
      }

      // required string serverIP = 2;
      private java.lang.Object serverIP_ = "";
      /**
       * <code>required string serverIP = 2;</code>
       *
       * <pre>
       * 服务器IP
       * </pre>
       */
      public boolean hasServerIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string serverIP = 2;</code>
       *
       * <pre>
       * 服务器IP
       * </pre>
       */
      public java.lang.String getServerIP() {
        java.lang.Object ref = serverIP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          serverIP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string serverIP = 2;</code>
       *
       * <pre>
       * 服务器IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getServerIPBytes() {
        java.lang.Object ref = serverIP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serverIP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string serverIP = 2;</code>
       *
       * <pre>
       * 服务器IP
       * </pre>
       */
      public Builder setServerIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        serverIP_ = value;
        
        return this;
      }
      /**
       * <code>required string serverIP = 2;</code>
       *
       * <pre>
       * 服务器IP
       * </pre>
       */
      public Builder clearServerIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serverIP_ = getDefaultInstance().getServerIP();
        
        return this;
      }
      /**
       * <code>required string serverIP = 2;</code>
       *
       * <pre>
       * 服务器IP
       * </pre>
       */
      public Builder setServerIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        serverIP_ = value;
        
        return this;
      }

      // required uint32 serverPort = 3;
      private int serverPort_ ;
      /**
       * <code>required uint32 serverPort = 3;</code>
       *
       * <pre>
       * 服务器端口
       * </pre>
       */
      public boolean hasServerPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 serverPort = 3;</code>
       *
       * <pre>
       * 服务器端口
       * </pre>
       */
      public int getServerPort() {
        return serverPort_;
      }
      /**
       * <code>required uint32 serverPort = 3;</code>
       *
       * <pre>
       * 服务器端口
       * </pre>
       */
      public Builder setServerPort(int value) {
        bitField0_ |= 0x00000004;
        serverPort_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 serverPort = 3;</code>
       *
       * <pre>
       * 服务器端口
       * </pre>
       */
      public Builder clearServerPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serverPort_ = 0;
        
        return this;
      }

      // required string serverName = 4;
      private java.lang.Object serverName_ = "";
      /**
       * <code>required string serverName = 4;</code>
       *
       * <pre>
       * 服务器名
       * </pre>
       */
      public boolean hasServerName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string serverName = 4;</code>
       *
       * <pre>
       * 服务器名
       * </pre>
       */
      public java.lang.String getServerName() {
        java.lang.Object ref = serverName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          serverName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string serverName = 4;</code>
       *
       * <pre>
       * 服务器名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getServerNameBytes() {
        java.lang.Object ref = serverName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serverName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string serverName = 4;</code>
       *
       * <pre>
       * 服务器名
       * </pre>
       */
      public Builder setServerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        serverName_ = value;
        
        return this;
      }
      /**
       * <code>required string serverName = 4;</code>
       *
       * <pre>
       * 服务器名
       * </pre>
       */
      public Builder clearServerName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        serverName_ = getDefaultInstance().getServerName();
        
        return this;
      }
      /**
       * <code>required string serverName = 4;</code>
       *
       * <pre>
       * 服务器名
       * </pre>
       */
      public Builder setServerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        serverName_ = value;
        
        return this;
      }

      // required uint32 roleCount = 5;
      private int roleCount_ ;
      /**
       * <code>required uint32 roleCount = 5;</code>
       *
       * <pre>
       * 所在服务器有效角色人数
       * </pre>
       */
      public boolean hasRoleCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 roleCount = 5;</code>
       *
       * <pre>
       * 所在服务器有效角色人数
       * </pre>
       */
      public int getRoleCount() {
        return roleCount_;
      }
      /**
       * <code>required uint32 roleCount = 5;</code>
       *
       * <pre>
       * 所在服务器有效角色人数
       * </pre>
       */
      public Builder setRoleCount(int value) {
        bitField0_ |= 0x00000010;
        roleCount_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 roleCount = 5;</code>
       *
       * <pre>
       * 所在服务器有效角色人数
       * </pre>
       */
      public Builder clearRoleCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        roleCount_ = 0;
        
        return this;
      }

      // required uint32 status = 6;
      private int status_ ;
      /**
       * <code>required uint32 status = 6;</code>
       *
       * <pre>
       * 0：表示服务器正常运行，1表示服务器维护
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 status = 6;</code>
       *
       * <pre>
       * 0：表示服务器正常运行，1表示服务器维护
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required uint32 status = 6;</code>
       *
       * <pre>
       * 0：表示服务器正常运行，1表示服务器维护
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 status = 6;</code>
       *
       * <pre>
       * 0：表示服务器正常运行，1表示服务器维护
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.MsgServerInfoData)
    }

    static {
      defaultInstance = new MsgServerInfoData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.MsgServerInfoData)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
