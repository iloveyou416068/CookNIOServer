// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sweep_dungeon_award.proto

package com.cwa.sanguo.messages.dto;

public final class SweepDungeonAward {
  private SweepDungeonAward() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MsgSweepDungeonAwardOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .sanguo.MsgGambleCardReward cardReward = 1;
    /**
     * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
     */
    java.util.List<com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward> 
        getCardRewardList();
    /**
     * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
     */
    com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward getCardReward(int index);
    /**
     * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
     */
    int getCardRewardCount();

    // optional .sanguo.MsgDungeonReward dungeonReward = 2;
    /**
     * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
     */
    boolean hasDungeonReward();
    /**
     * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
     */
    com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward getDungeonReward();
  }
  /**
   * Protobuf type {@code sanguo.MsgSweepDungeonAward}
   */
  public static final class MsgSweepDungeonAward extends
      com.google.protobuf.GeneratedMessageLite
      implements MsgSweepDungeonAwardOrBuilder {
    // Use MsgSweepDungeonAward.newBuilder() to construct.
    private MsgSweepDungeonAward(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MsgSweepDungeonAward(boolean noInit) {}

    private static final MsgSweepDungeonAward defaultInstance;
    public static MsgSweepDungeonAward getDefaultInstance() {
      return defaultInstance;
    }

    public MsgSweepDungeonAward getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MsgSweepDungeonAward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardReward_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardReward_.add(input.readMessage(com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = dungeonReward_.toBuilder();
              }
              dungeonReward_ = input.readMessage(com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dungeonReward_);
                dungeonReward_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardReward_ = java.util.Collections.unmodifiableList(cardReward_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MsgSweepDungeonAward> PARSER =
        new com.google.protobuf.AbstractParser<MsgSweepDungeonAward>() {
      public MsgSweepDungeonAward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgSweepDungeonAward(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgSweepDungeonAward> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .sanguo.MsgGambleCardReward cardReward = 1;
    public static final int CARDREWARD_FIELD_NUMBER = 1;
    private java.util.List<com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward> cardReward_;
    /**
     * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
     */
    public java.util.List<com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward> getCardRewardList() {
      return cardReward_;
    }
    /**
     * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
     */
    public java.util.List<? extends com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardRewardOrBuilder> 
        getCardRewardOrBuilderList() {
      return cardReward_;
    }
    /**
     * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
     */
    public int getCardRewardCount() {
      return cardReward_.size();
    }
    /**
     * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
     */
    public com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward getCardReward(int index) {
      return cardReward_.get(index);
    }
    /**
     * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
     */
    public com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardRewardOrBuilder getCardRewardOrBuilder(
        int index) {
      return cardReward_.get(index);
    }

    // optional .sanguo.MsgDungeonReward dungeonReward = 2;
    public static final int DUNGEONREWARD_FIELD_NUMBER = 2;
    private com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward dungeonReward_;
    /**
     * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
     */
    public boolean hasDungeonReward() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
     */
    public com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward getDungeonReward() {
      return dungeonReward_;
    }

    private void initFields() {
      cardReward_ = java.util.Collections.emptyList();
      dungeonReward_ = com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCardRewardCount(); i++) {
        if (!getCardReward(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardReward_.size(); i++) {
        output.writeMessage(1, cardReward_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, dungeonReward_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cardReward_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cardReward_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, dungeonReward_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.MsgSweepDungeonAward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward, Builder>
        implements com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAwardOrBuilder {
      // Construct using com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardReward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        dungeonReward_ = com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward build() {
        com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward buildPartial() {
        com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward result = new com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardReward_ = java.util.Collections.unmodifiableList(cardReward_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardReward_ = cardReward_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dungeonReward_ = dungeonReward_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward other) {
        if (other == com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward.getDefaultInstance()) return this;
        if (!other.cardReward_.isEmpty()) {
          if (cardReward_.isEmpty()) {
            cardReward_ = other.cardReward_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardRewardIsMutable();
            cardReward_.addAll(other.cardReward_);
          }
          
        }
        if (other.hasDungeonReward()) {
          mergeDungeonReward(other.getDungeonReward());
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCardRewardCount(); i++) {
          if (!getCardReward(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dto.SweepDungeonAward.MsgSweepDungeonAward) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .sanguo.MsgGambleCardReward cardReward = 1;
      private java.util.List<com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward> cardReward_ =
        java.util.Collections.emptyList();
      private void ensureCardRewardIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardReward_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward>(cardReward_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public java.util.List<com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward> getCardRewardList() {
        return java.util.Collections.unmodifiableList(cardReward_);
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public int getCardRewardCount() {
        return cardReward_.size();
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward getCardReward(int index) {
        return cardReward_.get(index);
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public Builder setCardReward(
          int index, com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCardRewardIsMutable();
        cardReward_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public Builder setCardReward(
          int index, com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.Builder builderForValue) {
        ensureCardRewardIsMutable();
        cardReward_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public Builder addCardReward(com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCardRewardIsMutable();
        cardReward_.add(value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public Builder addCardReward(
          int index, com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCardRewardIsMutable();
        cardReward_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public Builder addCardReward(
          com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.Builder builderForValue) {
        ensureCardRewardIsMutable();
        cardReward_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public Builder addCardReward(
          int index, com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.Builder builderForValue) {
        ensureCardRewardIsMutable();
        cardReward_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public Builder addAllCardReward(
          java.lang.Iterable<? extends com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward> values) {
        ensureCardRewardIsMutable();
        super.addAll(values, cardReward_);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public Builder clearCardReward() {
        cardReward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardReward cardReward = 1;</code>
       */
      public Builder removeCardReward(int index) {
        ensureCardRewardIsMutable();
        cardReward_.remove(index);

        return this;
      }

      // optional .sanguo.MsgDungeonReward dungeonReward = 2;
      private com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward dungeonReward_ = com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance();
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
       */
      public boolean hasDungeonReward() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
       */
      public com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward getDungeonReward() {
        return dungeonReward_;
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
       */
      public Builder setDungeonReward(com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward value) {
        if (value == null) {
          throw new NullPointerException();
        }
        dungeonReward_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
       */
      public Builder setDungeonReward(
          com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.Builder builderForValue) {
        dungeonReward_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
       */
      public Builder mergeDungeonReward(com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            dungeonReward_ != com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance()) {
          dungeonReward_ =
            com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.newBuilder(dungeonReward_).mergeFrom(value).buildPartial();
        } else {
          dungeonReward_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 2;</code>
       */
      public Builder clearDungeonReward() {
        dungeonReward_ = com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.MsgSweepDungeonAward)
    }

    static {
      defaultInstance = new MsgSweepDungeonAward(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.MsgSweepDungeonAward)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
