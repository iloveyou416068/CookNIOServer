// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kungfu_slot_child.proto

package com.cwa.sanguo.messages.dto;

public final class KungfuSlotChild {
  private KungfuSlotChild() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MsgKungfuSlotChildOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 slotChildrenLevel = 1;
    /**
     * <code>required uint32 slotChildrenLevel = 1;</code>
     *
     * <pre>
     * 套路下槽对应等级
     * </pre>
     */
    boolean hasSlotChildrenLevel();
    /**
     * <code>required uint32 slotChildrenLevel = 1;</code>
     *
     * <pre>
     * 套路下槽对应等级
     * </pre>
     */
    int getSlotChildrenLevel();

    // required uint32 slotChildrenProperty = 2;
    /**
     * <code>required uint32 slotChildrenProperty = 2;</code>
     *
     * <pre>
     * 套路下槽等级对应加成
     * </pre>
     */
    boolean hasSlotChildrenProperty();
    /**
     * <code>required uint32 slotChildrenProperty = 2;</code>
     *
     * <pre>
     * 套路下槽等级对应加成
     * </pre>
     */
    int getSlotChildrenProperty();

    // required uint32 slotChildID = 3;
    /**
     * <code>required uint32 slotChildID = 3;</code>
     *
     * <pre>
     * 槽索引(1,2,3,4)
     * </pre>
     */
    boolean hasSlotChildID();
    /**
     * <code>required uint32 slotChildID = 3;</code>
     *
     * <pre>
     * 槽索引(1,2,3,4)
     * </pre>
     */
    int getSlotChildID();

    // optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;
    /**
     * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
     *
     * <pre>
     * 装备的武学
     * </pre>
     */
    boolean hasMsgKungfuSkill();
    /**
     * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
     *
     * <pre>
     * 装备的武学
     * </pre>
     */
    com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill getMsgKungfuSkill();
  }
  /**
   * Protobuf type {@code sanguo.MsgKungfuSlotChild}
   */
  public static final class MsgKungfuSlotChild extends
      com.google.protobuf.GeneratedMessageLite
      implements MsgKungfuSlotChildOrBuilder {
    // Use MsgKungfuSlotChild.newBuilder() to construct.
    private MsgKungfuSlotChild(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MsgKungfuSlotChild(boolean noInit) {}

    private static final MsgKungfuSlotChild defaultInstance;
    public static MsgKungfuSlotChild getDefaultInstance() {
      return defaultInstance;
    }

    public MsgKungfuSlotChild getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MsgKungfuSlotChild(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              slotChildrenLevel_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              slotChildrenProperty_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              slotChildID_ = input.readUInt32();
              break;
            }
            case 34: {
              com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = msgKungfuSkill_.toBuilder();
              }
              msgKungfuSkill_ = input.readMessage(com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(msgKungfuSkill_);
                msgKungfuSkill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MsgKungfuSlotChild> PARSER =
        new com.google.protobuf.AbstractParser<MsgKungfuSlotChild>() {
      public MsgKungfuSlotChild parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgKungfuSlotChild(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgKungfuSlotChild> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 slotChildrenLevel = 1;
    public static final int SLOTCHILDRENLEVEL_FIELD_NUMBER = 1;
    private int slotChildrenLevel_;
    /**
     * <code>required uint32 slotChildrenLevel = 1;</code>
     *
     * <pre>
     * 套路下槽对应等级
     * </pre>
     */
    public boolean hasSlotChildrenLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 slotChildrenLevel = 1;</code>
     *
     * <pre>
     * 套路下槽对应等级
     * </pre>
     */
    public int getSlotChildrenLevel() {
      return slotChildrenLevel_;
    }

    // required uint32 slotChildrenProperty = 2;
    public static final int SLOTCHILDRENPROPERTY_FIELD_NUMBER = 2;
    private int slotChildrenProperty_;
    /**
     * <code>required uint32 slotChildrenProperty = 2;</code>
     *
     * <pre>
     * 套路下槽等级对应加成
     * </pre>
     */
    public boolean hasSlotChildrenProperty() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 slotChildrenProperty = 2;</code>
     *
     * <pre>
     * 套路下槽等级对应加成
     * </pre>
     */
    public int getSlotChildrenProperty() {
      return slotChildrenProperty_;
    }

    // required uint32 slotChildID = 3;
    public static final int SLOTCHILDID_FIELD_NUMBER = 3;
    private int slotChildID_;
    /**
     * <code>required uint32 slotChildID = 3;</code>
     *
     * <pre>
     * 槽索引(1,2,3,4)
     * </pre>
     */
    public boolean hasSlotChildID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 slotChildID = 3;</code>
     *
     * <pre>
     * 槽索引(1,2,3,4)
     * </pre>
     */
    public int getSlotChildID() {
      return slotChildID_;
    }

    // optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;
    public static final int MSGKUNGFUSKILL_FIELD_NUMBER = 4;
    private com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill msgKungfuSkill_;
    /**
     * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
     *
     * <pre>
     * 装备的武学
     * </pre>
     */
    public boolean hasMsgKungfuSkill() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
     *
     * <pre>
     * 装备的武学
     * </pre>
     */
    public com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill getMsgKungfuSkill() {
      return msgKungfuSkill_;
    }

    private void initFields() {
      slotChildrenLevel_ = 0;
      slotChildrenProperty_ = 0;
      slotChildID_ = 0;
      msgKungfuSkill_ = com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSlotChildrenLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSlotChildrenProperty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSlotChildID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasMsgKungfuSkill()) {
        if (!getMsgKungfuSkill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, slotChildrenLevel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, slotChildrenProperty_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, slotChildID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, msgKungfuSkill_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, slotChildrenLevel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, slotChildrenProperty_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, slotChildID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, msgKungfuSkill_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.MsgKungfuSlotChild}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild, Builder>
        implements com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChildOrBuilder {
      // Construct using com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        slotChildrenLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        slotChildrenProperty_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        slotChildID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        msgKungfuSkill_ = com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild build() {
        com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild buildPartial() {
        com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild result = new com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.slotChildrenLevel_ = slotChildrenLevel_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.slotChildrenProperty_ = slotChildrenProperty_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.slotChildID_ = slotChildID_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.msgKungfuSkill_ = msgKungfuSkill_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild other) {
        if (other == com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild.getDefaultInstance()) return this;
        if (other.hasSlotChildrenLevel()) {
          setSlotChildrenLevel(other.getSlotChildrenLevel());
        }
        if (other.hasSlotChildrenProperty()) {
          setSlotChildrenProperty(other.getSlotChildrenProperty());
        }
        if (other.hasSlotChildID()) {
          setSlotChildID(other.getSlotChildID());
        }
        if (other.hasMsgKungfuSkill()) {
          mergeMsgKungfuSkill(other.getMsgKungfuSkill());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSlotChildrenLevel()) {
          
          return false;
        }
        if (!hasSlotChildrenProperty()) {
          
          return false;
        }
        if (!hasSlotChildID()) {
          
          return false;
        }
        if (hasMsgKungfuSkill()) {
          if (!getMsgKungfuSkill().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dto.KungfuSlotChild.MsgKungfuSlotChild) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 slotChildrenLevel = 1;
      private int slotChildrenLevel_ ;
      /**
       * <code>required uint32 slotChildrenLevel = 1;</code>
       *
       * <pre>
       * 套路下槽对应等级
       * </pre>
       */
      public boolean hasSlotChildrenLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 slotChildrenLevel = 1;</code>
       *
       * <pre>
       * 套路下槽对应等级
       * </pre>
       */
      public int getSlotChildrenLevel() {
        return slotChildrenLevel_;
      }
      /**
       * <code>required uint32 slotChildrenLevel = 1;</code>
       *
       * <pre>
       * 套路下槽对应等级
       * </pre>
       */
      public Builder setSlotChildrenLevel(int value) {
        bitField0_ |= 0x00000001;
        slotChildrenLevel_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 slotChildrenLevel = 1;</code>
       *
       * <pre>
       * 套路下槽对应等级
       * </pre>
       */
      public Builder clearSlotChildrenLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slotChildrenLevel_ = 0;
        
        return this;
      }

      // required uint32 slotChildrenProperty = 2;
      private int slotChildrenProperty_ ;
      /**
       * <code>required uint32 slotChildrenProperty = 2;</code>
       *
       * <pre>
       * 套路下槽等级对应加成
       * </pre>
       */
      public boolean hasSlotChildrenProperty() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 slotChildrenProperty = 2;</code>
       *
       * <pre>
       * 套路下槽等级对应加成
       * </pre>
       */
      public int getSlotChildrenProperty() {
        return slotChildrenProperty_;
      }
      /**
       * <code>required uint32 slotChildrenProperty = 2;</code>
       *
       * <pre>
       * 套路下槽等级对应加成
       * </pre>
       */
      public Builder setSlotChildrenProperty(int value) {
        bitField0_ |= 0x00000002;
        slotChildrenProperty_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 slotChildrenProperty = 2;</code>
       *
       * <pre>
       * 套路下槽等级对应加成
       * </pre>
       */
      public Builder clearSlotChildrenProperty() {
        bitField0_ = (bitField0_ & ~0x00000002);
        slotChildrenProperty_ = 0;
        
        return this;
      }

      // required uint32 slotChildID = 3;
      private int slotChildID_ ;
      /**
       * <code>required uint32 slotChildID = 3;</code>
       *
       * <pre>
       * 槽索引(1,2,3,4)
       * </pre>
       */
      public boolean hasSlotChildID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 slotChildID = 3;</code>
       *
       * <pre>
       * 槽索引(1,2,3,4)
       * </pre>
       */
      public int getSlotChildID() {
        return slotChildID_;
      }
      /**
       * <code>required uint32 slotChildID = 3;</code>
       *
       * <pre>
       * 槽索引(1,2,3,4)
       * </pre>
       */
      public Builder setSlotChildID(int value) {
        bitField0_ |= 0x00000004;
        slotChildID_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 slotChildID = 3;</code>
       *
       * <pre>
       * 槽索引(1,2,3,4)
       * </pre>
       */
      public Builder clearSlotChildID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        slotChildID_ = 0;
        
        return this;
      }

      // optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;
      private com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill msgKungfuSkill_ = com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.getDefaultInstance();
      /**
       * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
       *
       * <pre>
       * 装备的武学
       * </pre>
       */
      public boolean hasMsgKungfuSkill() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
       *
       * <pre>
       * 装备的武学
       * </pre>
       */
      public com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill getMsgKungfuSkill() {
        return msgKungfuSkill_;
      }
      /**
       * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
       *
       * <pre>
       * 装备的武学
       * </pre>
       */
      public Builder setMsgKungfuSkill(com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill value) {
        if (value == null) {
          throw new NullPointerException();
        }
        msgKungfuSkill_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
       *
       * <pre>
       * 装备的武学
       * </pre>
       */
      public Builder setMsgKungfuSkill(
          com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.Builder builderForValue) {
        msgKungfuSkill_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
       *
       * <pre>
       * 装备的武学
       * </pre>
       */
      public Builder mergeMsgKungfuSkill(com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            msgKungfuSkill_ != com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.getDefaultInstance()) {
          msgKungfuSkill_ =
            com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.newBuilder(msgKungfuSkill_).mergeFrom(value).buildPartial();
        } else {
          msgKungfuSkill_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgKungfuSkill msgKungfuSkill = 4;</code>
       *
       * <pre>
       * 装备的武学
       * </pre>
       */
      public Builder clearMsgKungfuSkill() {
        msgKungfuSkill_ = com.cwa.sanguo.messages.dto.KungfuSkill.MsgKungfuSkill.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.MsgKungfuSlotChild)
    }

    static {
      defaultInstance = new MsgKungfuSlotChild(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.MsgKungfuSlotChild)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
