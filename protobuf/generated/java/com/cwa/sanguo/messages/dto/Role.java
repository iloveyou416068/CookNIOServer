// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role.proto

package com.cwa.sanguo.messages.dto;

public final class Role {
  private Role() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MsgRoleDataOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint64 roleID = 1;
    /**
     * <code>required uint64 roleID = 1;</code>
     */
    boolean hasRoleID();
    /**
     * <code>required uint64 roleID = 1;</code>
     */
    long getRoleID();

    // required string roleName = 2;
    /**
     * <code>required string roleName = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    boolean hasRoleName();
    /**
     * <code>required string roleName = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    java.lang.String getRoleName();
    /**
     * <code>required string roleName = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoleNameBytes();

    // required uint32 roleLevel = 3;
    /**
     * <code>required uint32 roleLevel = 3;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    boolean hasRoleLevel();
    /**
     * <code>required uint32 roleLevel = 3;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    int getRoleLevel();

    // required .sanguo.RoleProfession roleProfession = 4;
    /**
     * <code>required .sanguo.RoleProfession roleProfession = 4;</code>
     *
     * <pre>
     *职业
     * </pre>
     */
    boolean hasRoleProfession();
    /**
     * <code>required .sanguo.RoleProfession roleProfession = 4;</code>
     *
     * <pre>
     *职业
     * </pre>
     */
    com.cwa.sanguo.messages.Constants.RoleProfession getRoleProfession();

    // required uint32 mapID = 5;
    /**
     * <code>required uint32 mapID = 5;</code>
     *
     * <pre>
     *所在地图ID（cityID）
     * </pre>
     */
    boolean hasMapID();
    /**
     * <code>required uint32 mapID = 5;</code>
     *
     * <pre>
     *所在地图ID（cityID）
     * </pre>
     */
    int getMapID();

    // required uint64 copper = 6;
    /**
     * <code>required uint64 copper = 6;</code>
     *
     * <pre>
     *铜钱
     * </pre>
     */
    boolean hasCopper();
    /**
     * <code>required uint64 copper = 6;</code>
     *
     * <pre>
     *铜钱
     * </pre>
     */
    long getCopper();

    // required uint32 gold = 7;
    /**
     * <code>required uint32 gold = 7;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>required uint32 gold = 7;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    int getGold();

    // required uint32 jade = 8;
    /**
     * <code>required uint32 jade = 8;</code>
     *
     * <pre>
     *玉石
     * </pre>
     */
    boolean hasJade();
    /**
     * <code>required uint32 jade = 8;</code>
     *
     * <pre>
     *玉石
     * </pre>
     */
    int getJade();

    // required uint32 power = 9;
    /**
     * <code>required uint32 power = 9;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    boolean hasPower();
    /**
     * <code>required uint32 power = 9;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    int getPower();

    // required uint32 vipLevel = 10;
    /**
     * <code>required uint32 vipLevel = 10;</code>
     *
     * <pre>
     *vip等级
     * </pre>
     */
    boolean hasVipLevel();
    /**
     * <code>required uint32 vipLevel = 10;</code>
     *
     * <pre>
     *vip等级
     * </pre>
     */
    int getVipLevel();

    // required uint64 credit = 11;
    /**
     * <code>required uint64 credit = 11;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    boolean hasCredit();
    /**
     * <code>required uint64 credit = 11;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    long getCredit();

    // optional uint64 honour = 12;
    /**
     * <code>optional uint64 honour = 12;</code>
     *
     * <pre>
     *荣誉
     * </pre>
     */
    boolean hasHonour();
    /**
     * <code>optional uint64 honour = 12;</code>
     *
     * <pre>
     *荣誉
     * </pre>
     */
    long getHonour();

    // repeated uint32 vipRewarded = 13;
    /**
     * <code>repeated uint32 vipRewarded = 13;</code>
     *
     * <pre>
     *vip领取记录
     * </pre>
     */
    java.util.List<java.lang.Integer> getVipRewardedList();
    /**
     * <code>repeated uint32 vipRewarded = 13;</code>
     *
     * <pre>
     *vip领取记录
     * </pre>
     */
    int getVipRewardedCount();
    /**
     * <code>repeated uint32 vipRewarded = 13;</code>
     *
     * <pre>
     *vip领取记录
     * </pre>
     */
    int getVipRewarded(int index);

    // optional uint32 recharge = 14;
    /**
     * <code>optional uint32 recharge = 14;</code>
     *
     * <pre>
     *充值数量
     * </pre>
     */
    boolean hasRecharge();
    /**
     * <code>optional uint32 recharge = 14;</code>
     *
     * <pre>
     *充值数量
     * </pre>
     */
    int getRecharge();

    // optional uint64 yijunID = 15;
    /**
     * <code>optional uint64 yijunID = 15;</code>
     *
     * <pre>
     *义军ID
     * </pre>
     */
    boolean hasYijunID();
    /**
     * <code>optional uint64 yijunID = 15;</code>
     *
     * <pre>
     *义军ID
     * </pre>
     */
    long getYijunID();

    // optional uint64 exp = 16;
    /**
     * <code>optional uint64 exp = 16;</code>
     *
     * <pre>
     *角色经验
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>optional uint64 exp = 16;</code>
     *
     * <pre>
     *角色经验
     * </pre>
     */
    long getExp();

    // optional uint64 jungong = 17;
    /**
     * <code>optional uint64 jungong = 17;</code>
     *
     * <pre>
     *军功
     * </pre>
     */
    boolean hasJungong();
    /**
     * <code>optional uint64 jungong = 17;</code>
     *
     * <pre>
     *军功
     * </pre>
     */
    long getJungong();

    // optional uint32 buyPowerCountToday = 18;
    /**
     * <code>optional uint32 buyPowerCountToday = 18;</code>
     *
     * <pre>
     *当天购买体力次数
     * </pre>
     */
    boolean hasBuyPowerCountToday();
    /**
     * <code>optional uint32 buyPowerCountToday = 18;</code>
     *
     * <pre>
     *当天购买体力次数
     * </pre>
     */
    int getBuyPowerCountToday();

    // optional uint64 arenaRoleRank = 19;
    /**
     * <code>optional uint64 arenaRoleRank = 19;</code>
     *
     * <pre>
     * 竞技场角色排名
     * </pre>
     */
    boolean hasArenaRoleRank();
    /**
     * <code>optional uint64 arenaRoleRank = 19;</code>
     *
     * <pre>
     * 竞技场角色排名
     * </pre>
     */
    long getArenaRoleRank();

    // optional uint32 fight = 20;
    /**
     * <code>optional uint32 fight = 20;</code>
     *
     * <pre>
     * 战斗力
     * </pre>
     */
    boolean hasFight();
    /**
     * <code>optional uint32 fight = 20;</code>
     *
     * <pre>
     * 战斗力
     * </pre>
     */
    int getFight();

    // optional uint32 goldTicket = 21;
    /**
     * <code>optional uint32 goldTicket = 21;</code>
     *
     * <pre>
     * 金奖券
     * </pre>
     */
    boolean hasGoldTicket();
    /**
     * <code>optional uint32 goldTicket = 21;</code>
     *
     * <pre>
     * 金奖券
     * </pre>
     */
    int getGoldTicket();

    // optional uint32 silverTicket = 22;
    /**
     * <code>optional uint32 silverTicket = 22;</code>
     *
     * <pre>
     * 银奖券
     * </pre>
     */
    boolean hasSilverTicket();
    /**
     * <code>optional uint32 silverTicket = 22;</code>
     *
     * <pre>
     * 银奖券
     * </pre>
     */
    int getSilverTicket();

    // optional uint32 copperTicket = 23;
    /**
     * <code>optional uint32 copperTicket = 23;</code>
     *
     * <pre>
     * 铜奖券
     * </pre>
     */
    boolean hasCopperTicket();
    /**
     * <code>optional uint32 copperTicket = 23;</code>
     *
     * <pre>
     * 铜奖券
     * </pre>
     */
    int getCopperTicket();

    // optional uint32 friendShip = 24;
    /**
     * <code>optional uint32 friendShip = 24;</code>
     *
     * <pre>
     * 友情点
     * </pre>
     */
    boolean hasFriendShip();
    /**
     * <code>optional uint32 friendShip = 24;</code>
     *
     * <pre>
     * 友情点
     * </pre>
     */
    int getFriendShip();

    // required uint32 curtitle = 25;
    /**
     * <code>required uint32 curtitle = 25;</code>
     *
     * <pre>
     *当前称号
     * </pre>
     */
    boolean hasCurtitle();
    /**
     * <code>required uint32 curtitle = 25;</code>
     *
     * <pre>
     *当前称号
     * </pre>
     */
    int getCurtitle();

    // optional uint32 vipExperienceCardLevel = 26;
    /**
     * <code>optional uint32 vipExperienceCardLevel = 26;</code>
     *
     * <pre>
     * VIP体验卡等级
     * </pre>
     */
    boolean hasVipExperienceCardLevel();
    /**
     * <code>optional uint32 vipExperienceCardLevel = 26;</code>
     *
     * <pre>
     * VIP体验卡等级
     * </pre>
     */
    int getVipExperienceCardLevel();
  }
  /**
   * Protobuf type {@code sanguo.MsgRoleData}
   */
  public static final class MsgRoleData extends
      com.google.protobuf.GeneratedMessageLite
      implements MsgRoleDataOrBuilder {
    // Use MsgRoleData.newBuilder() to construct.
    private MsgRoleData(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MsgRoleData(boolean noInit) {}

    private static final MsgRoleData defaultInstance;
    public static MsgRoleData getDefaultInstance() {
      return defaultInstance;
    }

    public MsgRoleData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MsgRoleData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roleID_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              roleName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roleLevel_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.Constants.RoleProfession value = com.cwa.sanguo.messages.Constants.RoleProfession.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000008;
                roleProfession_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              mapID_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              copper_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              gold_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              jade_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              power_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              vipLevel_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              credit_ = input.readUInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              honour_ = input.readUInt64();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                vipRewarded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              vipRewarded_.add(input.readUInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                vipRewarded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                vipRewarded_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              recharge_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              yijunID_ = input.readUInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              exp_ = input.readUInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              jungong_ = input.readUInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00010000;
              buyPowerCountToday_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00020000;
              arenaRoleRank_ = input.readUInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00040000;
              fight_ = input.readUInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00080000;
              goldTicket_ = input.readUInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00100000;
              silverTicket_ = input.readUInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00200000;
              copperTicket_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00400000;
              friendShip_ = input.readUInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00800000;
              curtitle_ = input.readUInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x01000000;
              vipExperienceCardLevel_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          vipRewarded_ = java.util.Collections.unmodifiableList(vipRewarded_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MsgRoleData> PARSER =
        new com.google.protobuf.AbstractParser<MsgRoleData>() {
      public MsgRoleData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgRoleData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgRoleData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint64 roleID = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private long roleID_;
    /**
     * <code>required uint64 roleID = 1;</code>
     */
    public boolean hasRoleID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 roleID = 1;</code>
     */
    public long getRoleID() {
      return roleID_;
    }

    // required string roleName = 2;
    public static final int ROLENAME_FIELD_NUMBER = 2;
    private java.lang.Object roleName_;
    /**
     * <code>required string roleName = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public boolean hasRoleName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string roleName = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public java.lang.String getRoleName() {
      java.lang.Object ref = roleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roleName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string roleName = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoleNameBytes() {
      java.lang.Object ref = roleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 roleLevel = 3;
    public static final int ROLELEVEL_FIELD_NUMBER = 3;
    private int roleLevel_;
    /**
     * <code>required uint32 roleLevel = 3;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    public boolean hasRoleLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 roleLevel = 3;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    public int getRoleLevel() {
      return roleLevel_;
    }

    // required .sanguo.RoleProfession roleProfession = 4;
    public static final int ROLEPROFESSION_FIELD_NUMBER = 4;
    private com.cwa.sanguo.messages.Constants.RoleProfession roleProfession_;
    /**
     * <code>required .sanguo.RoleProfession roleProfession = 4;</code>
     *
     * <pre>
     *职业
     * </pre>
     */
    public boolean hasRoleProfession() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .sanguo.RoleProfession roleProfession = 4;</code>
     *
     * <pre>
     *职业
     * </pre>
     */
    public com.cwa.sanguo.messages.Constants.RoleProfession getRoleProfession() {
      return roleProfession_;
    }

    // required uint32 mapID = 5;
    public static final int MAPID_FIELD_NUMBER = 5;
    private int mapID_;
    /**
     * <code>required uint32 mapID = 5;</code>
     *
     * <pre>
     *所在地图ID（cityID）
     * </pre>
     */
    public boolean hasMapID() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 mapID = 5;</code>
     *
     * <pre>
     *所在地图ID（cityID）
     * </pre>
     */
    public int getMapID() {
      return mapID_;
    }

    // required uint64 copper = 6;
    public static final int COPPER_FIELD_NUMBER = 6;
    private long copper_;
    /**
     * <code>required uint64 copper = 6;</code>
     *
     * <pre>
     *铜钱
     * </pre>
     */
    public boolean hasCopper() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint64 copper = 6;</code>
     *
     * <pre>
     *铜钱
     * </pre>
     */
    public long getCopper() {
      return copper_;
    }

    // required uint32 gold = 7;
    public static final int GOLD_FIELD_NUMBER = 7;
    private int gold_;
    /**
     * <code>required uint32 gold = 7;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint32 gold = 7;</code>
     *
     * <pre>
     *元宝
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // required uint32 jade = 8;
    public static final int JADE_FIELD_NUMBER = 8;
    private int jade_;
    /**
     * <code>required uint32 jade = 8;</code>
     *
     * <pre>
     *玉石
     * </pre>
     */
    public boolean hasJade() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required uint32 jade = 8;</code>
     *
     * <pre>
     *玉石
     * </pre>
     */
    public int getJade() {
      return jade_;
    }

    // required uint32 power = 9;
    public static final int POWER_FIELD_NUMBER = 9;
    private int power_;
    /**
     * <code>required uint32 power = 9;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required uint32 power = 9;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    public int getPower() {
      return power_;
    }

    // required uint32 vipLevel = 10;
    public static final int VIPLEVEL_FIELD_NUMBER = 10;
    private int vipLevel_;
    /**
     * <code>required uint32 vipLevel = 10;</code>
     *
     * <pre>
     *vip等级
     * </pre>
     */
    public boolean hasVipLevel() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required uint32 vipLevel = 10;</code>
     *
     * <pre>
     *vip等级
     * </pre>
     */
    public int getVipLevel() {
      return vipLevel_;
    }

    // required uint64 credit = 11;
    public static final int CREDIT_FIELD_NUMBER = 11;
    private long credit_;
    /**
     * <code>required uint64 credit = 11;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public boolean hasCredit() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required uint64 credit = 11;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public long getCredit() {
      return credit_;
    }

    // optional uint64 honour = 12;
    public static final int HONOUR_FIELD_NUMBER = 12;
    private long honour_;
    /**
     * <code>optional uint64 honour = 12;</code>
     *
     * <pre>
     *荣誉
     * </pre>
     */
    public boolean hasHonour() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint64 honour = 12;</code>
     *
     * <pre>
     *荣誉
     * </pre>
     */
    public long getHonour() {
      return honour_;
    }

    // repeated uint32 vipRewarded = 13;
    public static final int VIPREWARDED_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> vipRewarded_;
    /**
     * <code>repeated uint32 vipRewarded = 13;</code>
     *
     * <pre>
     *vip领取记录
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getVipRewardedList() {
      return vipRewarded_;
    }
    /**
     * <code>repeated uint32 vipRewarded = 13;</code>
     *
     * <pre>
     *vip领取记录
     * </pre>
     */
    public int getVipRewardedCount() {
      return vipRewarded_.size();
    }
    /**
     * <code>repeated uint32 vipRewarded = 13;</code>
     *
     * <pre>
     *vip领取记录
     * </pre>
     */
    public int getVipRewarded(int index) {
      return vipRewarded_.get(index);
    }

    // optional uint32 recharge = 14;
    public static final int RECHARGE_FIELD_NUMBER = 14;
    private int recharge_;
    /**
     * <code>optional uint32 recharge = 14;</code>
     *
     * <pre>
     *充值数量
     * </pre>
     */
    public boolean hasRecharge() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 recharge = 14;</code>
     *
     * <pre>
     *充值数量
     * </pre>
     */
    public int getRecharge() {
      return recharge_;
    }

    // optional uint64 yijunID = 15;
    public static final int YIJUNID_FIELD_NUMBER = 15;
    private long yijunID_;
    /**
     * <code>optional uint64 yijunID = 15;</code>
     *
     * <pre>
     *义军ID
     * </pre>
     */
    public boolean hasYijunID() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint64 yijunID = 15;</code>
     *
     * <pre>
     *义军ID
     * </pre>
     */
    public long getYijunID() {
      return yijunID_;
    }

    // optional uint64 exp = 16;
    public static final int EXP_FIELD_NUMBER = 16;
    private long exp_;
    /**
     * <code>optional uint64 exp = 16;</code>
     *
     * <pre>
     *角色经验
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint64 exp = 16;</code>
     *
     * <pre>
     *角色经验
     * </pre>
     */
    public long getExp() {
      return exp_;
    }

    // optional uint64 jungong = 17;
    public static final int JUNGONG_FIELD_NUMBER = 17;
    private long jungong_;
    /**
     * <code>optional uint64 jungong = 17;</code>
     *
     * <pre>
     *军功
     * </pre>
     */
    public boolean hasJungong() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint64 jungong = 17;</code>
     *
     * <pre>
     *军功
     * </pre>
     */
    public long getJungong() {
      return jungong_;
    }

    // optional uint32 buyPowerCountToday = 18;
    public static final int BUYPOWERCOUNTTODAY_FIELD_NUMBER = 18;
    private int buyPowerCountToday_;
    /**
     * <code>optional uint32 buyPowerCountToday = 18;</code>
     *
     * <pre>
     *当天购买体力次数
     * </pre>
     */
    public boolean hasBuyPowerCountToday() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 buyPowerCountToday = 18;</code>
     *
     * <pre>
     *当天购买体力次数
     * </pre>
     */
    public int getBuyPowerCountToday() {
      return buyPowerCountToday_;
    }

    // optional uint64 arenaRoleRank = 19;
    public static final int ARENAROLERANK_FIELD_NUMBER = 19;
    private long arenaRoleRank_;
    /**
     * <code>optional uint64 arenaRoleRank = 19;</code>
     *
     * <pre>
     * 竞技场角色排名
     * </pre>
     */
    public boolean hasArenaRoleRank() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint64 arenaRoleRank = 19;</code>
     *
     * <pre>
     * 竞技场角色排名
     * </pre>
     */
    public long getArenaRoleRank() {
      return arenaRoleRank_;
    }

    // optional uint32 fight = 20;
    public static final int FIGHT_FIELD_NUMBER = 20;
    private int fight_;
    /**
     * <code>optional uint32 fight = 20;</code>
     *
     * <pre>
     * 战斗力
     * </pre>
     */
    public boolean hasFight() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 fight = 20;</code>
     *
     * <pre>
     * 战斗力
     * </pre>
     */
    public int getFight() {
      return fight_;
    }

    // optional uint32 goldTicket = 21;
    public static final int GOLDTICKET_FIELD_NUMBER = 21;
    private int goldTicket_;
    /**
     * <code>optional uint32 goldTicket = 21;</code>
     *
     * <pre>
     * 金奖券
     * </pre>
     */
    public boolean hasGoldTicket() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 goldTicket = 21;</code>
     *
     * <pre>
     * 金奖券
     * </pre>
     */
    public int getGoldTicket() {
      return goldTicket_;
    }

    // optional uint32 silverTicket = 22;
    public static final int SILVERTICKET_FIELD_NUMBER = 22;
    private int silverTicket_;
    /**
     * <code>optional uint32 silverTicket = 22;</code>
     *
     * <pre>
     * 银奖券
     * </pre>
     */
    public boolean hasSilverTicket() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 silverTicket = 22;</code>
     *
     * <pre>
     * 银奖券
     * </pre>
     */
    public int getSilverTicket() {
      return silverTicket_;
    }

    // optional uint32 copperTicket = 23;
    public static final int COPPERTICKET_FIELD_NUMBER = 23;
    private int copperTicket_;
    /**
     * <code>optional uint32 copperTicket = 23;</code>
     *
     * <pre>
     * 铜奖券
     * </pre>
     */
    public boolean hasCopperTicket() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint32 copperTicket = 23;</code>
     *
     * <pre>
     * 铜奖券
     * </pre>
     */
    public int getCopperTicket() {
      return copperTicket_;
    }

    // optional uint32 friendShip = 24;
    public static final int FRIENDSHIP_FIELD_NUMBER = 24;
    private int friendShip_;
    /**
     * <code>optional uint32 friendShip = 24;</code>
     *
     * <pre>
     * 友情点
     * </pre>
     */
    public boolean hasFriendShip() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 friendShip = 24;</code>
     *
     * <pre>
     * 友情点
     * </pre>
     */
    public int getFriendShip() {
      return friendShip_;
    }

    // required uint32 curtitle = 25;
    public static final int CURTITLE_FIELD_NUMBER = 25;
    private int curtitle_;
    /**
     * <code>required uint32 curtitle = 25;</code>
     *
     * <pre>
     *当前称号
     * </pre>
     */
    public boolean hasCurtitle() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>required uint32 curtitle = 25;</code>
     *
     * <pre>
     *当前称号
     * </pre>
     */
    public int getCurtitle() {
      return curtitle_;
    }

    // optional uint32 vipExperienceCardLevel = 26;
    public static final int VIPEXPERIENCECARDLEVEL_FIELD_NUMBER = 26;
    private int vipExperienceCardLevel_;
    /**
     * <code>optional uint32 vipExperienceCardLevel = 26;</code>
     *
     * <pre>
     * VIP体验卡等级
     * </pre>
     */
    public boolean hasVipExperienceCardLevel() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional uint32 vipExperienceCardLevel = 26;</code>
     *
     * <pre>
     * VIP体验卡等级
     * </pre>
     */
    public int getVipExperienceCardLevel() {
      return vipExperienceCardLevel_;
    }

    private void initFields() {
      roleID_ = 0L;
      roleName_ = "";
      roleLevel_ = 0;
      roleProfession_ = com.cwa.sanguo.messages.Constants.RoleProfession.WARRIOR;
      mapID_ = 0;
      copper_ = 0L;
      gold_ = 0;
      jade_ = 0;
      power_ = 0;
      vipLevel_ = 0;
      credit_ = 0L;
      honour_ = 0L;
      vipRewarded_ = java.util.Collections.emptyList();
      recharge_ = 0;
      yijunID_ = 0L;
      exp_ = 0L;
      jungong_ = 0L;
      buyPowerCountToday_ = 0;
      arenaRoleRank_ = 0L;
      fight_ = 0;
      goldTicket_ = 0;
      silverTicket_ = 0;
      copperTicket_ = 0;
      friendShip_ = 0;
      curtitle_ = 0;
      vipExperienceCardLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoleID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleProfession()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMapID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCopper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasJade()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVipLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCredit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurtitle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, roleID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getRoleNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, roleLevel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, roleProfession_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, mapID_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, copper_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, gold_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, jade_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, power_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, vipLevel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt64(11, credit_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt64(12, honour_);
      }
      for (int i = 0; i < vipRewarded_.size(); i++) {
        output.writeUInt32(13, vipRewarded_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(14, recharge_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt64(15, yijunID_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt64(16, exp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt64(17, jungong_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(18, buyPowerCountToday_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt64(19, arenaRoleRank_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(20, fight_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(21, goldTicket_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(22, silverTicket_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(23, copperTicket_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(24, friendShip_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt32(25, curtitle_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeUInt32(26, vipExperienceCardLevel_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, roleID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getRoleNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, roleLevel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, roleProfession_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, mapID_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, copper_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, gold_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, jade_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, power_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, vipLevel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, credit_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, honour_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vipRewarded_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(vipRewarded_.get(i));
        }
        size += dataSize;
        size += 1 * getVipRewardedList().size();
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, recharge_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(15, yijunID_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, exp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(17, jungong_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, buyPowerCountToday_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(19, arenaRoleRank_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, fight_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, goldTicket_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, silverTicket_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, copperTicket_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, friendShip_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, curtitle_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, vipExperienceCardLevel_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.Role.MsgRoleData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dto.Role.MsgRoleData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.MsgRoleData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dto.Role.MsgRoleData, Builder>
        implements com.cwa.sanguo.messages.dto.Role.MsgRoleDataOrBuilder {
      // Construct using com.cwa.sanguo.messages.dto.Role.MsgRoleData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roleID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        roleName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        roleLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        roleProfession_ = com.cwa.sanguo.messages.Constants.RoleProfession.WARRIOR;
        bitField0_ = (bitField0_ & ~0x00000008);
        mapID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        copper_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        jade_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        vipLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        credit_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        honour_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        vipRewarded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        recharge_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        yijunID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        exp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        jungong_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        buyPowerCountToday_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        arenaRoleRank_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        fight_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        goldTicket_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        silverTicket_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        copperTicket_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        friendShip_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        curtitle_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        vipExperienceCardLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dto.Role.MsgRoleData getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dto.Role.MsgRoleData.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dto.Role.MsgRoleData build() {
        com.cwa.sanguo.messages.dto.Role.MsgRoleData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dto.Role.MsgRoleData buildPartial() {
        com.cwa.sanguo.messages.dto.Role.MsgRoleData result = new com.cwa.sanguo.messages.dto.Role.MsgRoleData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleID_ = roleID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roleName_ = roleName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roleLevel_ = roleLevel_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.roleProfession_ = roleProfession_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mapID_ = mapID_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.copper_ = copper_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.jade_ = jade_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.vipLevel_ = vipLevel_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.credit_ = credit_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.honour_ = honour_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          vipRewarded_ = java.util.Collections.unmodifiableList(vipRewarded_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.vipRewarded_ = vipRewarded_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.recharge_ = recharge_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.yijunID_ = yijunID_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.jungong_ = jungong_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.buyPowerCountToday_ = buyPowerCountToday_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.arenaRoleRank_ = arenaRoleRank_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.fight_ = fight_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.goldTicket_ = goldTicket_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.silverTicket_ = silverTicket_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.copperTicket_ = copperTicket_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.friendShip_ = friendShip_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.curtitle_ = curtitle_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.vipExperienceCardLevel_ = vipExperienceCardLevel_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dto.Role.MsgRoleData other) {
        if (other == com.cwa.sanguo.messages.dto.Role.MsgRoleData.getDefaultInstance()) return this;
        if (other.hasRoleID()) {
          setRoleID(other.getRoleID());
        }
        if (other.hasRoleName()) {
          bitField0_ |= 0x00000002;
          roleName_ = other.roleName_;
          
        }
        if (other.hasRoleLevel()) {
          setRoleLevel(other.getRoleLevel());
        }
        if (other.hasRoleProfession()) {
          setRoleProfession(other.getRoleProfession());
        }
        if (other.hasMapID()) {
          setMapID(other.getMapID());
        }
        if (other.hasCopper()) {
          setCopper(other.getCopper());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasJade()) {
          setJade(other.getJade());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasVipLevel()) {
          setVipLevel(other.getVipLevel());
        }
        if (other.hasCredit()) {
          setCredit(other.getCredit());
        }
        if (other.hasHonour()) {
          setHonour(other.getHonour());
        }
        if (!other.vipRewarded_.isEmpty()) {
          if (vipRewarded_.isEmpty()) {
            vipRewarded_ = other.vipRewarded_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureVipRewardedIsMutable();
            vipRewarded_.addAll(other.vipRewarded_);
          }
          
        }
        if (other.hasRecharge()) {
          setRecharge(other.getRecharge());
        }
        if (other.hasYijunID()) {
          setYijunID(other.getYijunID());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasJungong()) {
          setJungong(other.getJungong());
        }
        if (other.hasBuyPowerCountToday()) {
          setBuyPowerCountToday(other.getBuyPowerCountToday());
        }
        if (other.hasArenaRoleRank()) {
          setArenaRoleRank(other.getArenaRoleRank());
        }
        if (other.hasFight()) {
          setFight(other.getFight());
        }
        if (other.hasGoldTicket()) {
          setGoldTicket(other.getGoldTicket());
        }
        if (other.hasSilverTicket()) {
          setSilverTicket(other.getSilverTicket());
        }
        if (other.hasCopperTicket()) {
          setCopperTicket(other.getCopperTicket());
        }
        if (other.hasFriendShip()) {
          setFriendShip(other.getFriendShip());
        }
        if (other.hasCurtitle()) {
          setCurtitle(other.getCurtitle());
        }
        if (other.hasVipExperienceCardLevel()) {
          setVipExperienceCardLevel(other.getVipExperienceCardLevel());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoleID()) {
          
          return false;
        }
        if (!hasRoleName()) {
          
          return false;
        }
        if (!hasRoleLevel()) {
          
          return false;
        }
        if (!hasRoleProfession()) {
          
          return false;
        }
        if (!hasMapID()) {
          
          return false;
        }
        if (!hasCopper()) {
          
          return false;
        }
        if (!hasGold()) {
          
          return false;
        }
        if (!hasJade()) {
          
          return false;
        }
        if (!hasPower()) {
          
          return false;
        }
        if (!hasVipLevel()) {
          
          return false;
        }
        if (!hasCredit()) {
          
          return false;
        }
        if (!hasCurtitle()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dto.Role.MsgRoleData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dto.Role.MsgRoleData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint64 roleID = 1;
      private long roleID_ ;
      /**
       * <code>required uint64 roleID = 1;</code>
       */
      public boolean hasRoleID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 roleID = 1;</code>
       */
      public long getRoleID() {
        return roleID_;
      }
      /**
       * <code>required uint64 roleID = 1;</code>
       */
      public Builder setRoleID(long value) {
        bitField0_ |= 0x00000001;
        roleID_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 roleID = 1;</code>
       */
      public Builder clearRoleID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleID_ = 0L;
        
        return this;
      }

      // required string roleName = 2;
      private java.lang.Object roleName_ = "";
      /**
       * <code>required string roleName = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public boolean hasRoleName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string roleName = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public java.lang.String getRoleName() {
        java.lang.Object ref = roleName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roleName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string roleName = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoleNameBytes() {
        java.lang.Object ref = roleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string roleName = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setRoleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        roleName_ = value;
        
        return this;
      }
      /**
       * <code>required string roleName = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder clearRoleName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roleName_ = getDefaultInstance().getRoleName();
        
        return this;
      }
      /**
       * <code>required string roleName = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setRoleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        roleName_ = value;
        
        return this;
      }

      // required uint32 roleLevel = 3;
      private int roleLevel_ ;
      /**
       * <code>required uint32 roleLevel = 3;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public boolean hasRoleLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 roleLevel = 3;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public int getRoleLevel() {
        return roleLevel_;
      }
      /**
       * <code>required uint32 roleLevel = 3;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public Builder setRoleLevel(int value) {
        bitField0_ |= 0x00000004;
        roleLevel_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 roleLevel = 3;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public Builder clearRoleLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roleLevel_ = 0;
        
        return this;
      }

      // required .sanguo.RoleProfession roleProfession = 4;
      private com.cwa.sanguo.messages.Constants.RoleProfession roleProfession_ = com.cwa.sanguo.messages.Constants.RoleProfession.WARRIOR;
      /**
       * <code>required .sanguo.RoleProfession roleProfession = 4;</code>
       *
       * <pre>
       *职业
       * </pre>
       */
      public boolean hasRoleProfession() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .sanguo.RoleProfession roleProfession = 4;</code>
       *
       * <pre>
       *职业
       * </pre>
       */
      public com.cwa.sanguo.messages.Constants.RoleProfession getRoleProfession() {
        return roleProfession_;
      }
      /**
       * <code>required .sanguo.RoleProfession roleProfession = 4;</code>
       *
       * <pre>
       *职业
       * </pre>
       */
      public Builder setRoleProfession(com.cwa.sanguo.messages.Constants.RoleProfession value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        roleProfession_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.RoleProfession roleProfession = 4;</code>
       *
       * <pre>
       *职业
       * </pre>
       */
      public Builder clearRoleProfession() {
        bitField0_ = (bitField0_ & ~0x00000008);
        roleProfession_ = com.cwa.sanguo.messages.Constants.RoleProfession.WARRIOR;
        
        return this;
      }

      // required uint32 mapID = 5;
      private int mapID_ ;
      /**
       * <code>required uint32 mapID = 5;</code>
       *
       * <pre>
       *所在地图ID（cityID）
       * </pre>
       */
      public boolean hasMapID() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 mapID = 5;</code>
       *
       * <pre>
       *所在地图ID（cityID）
       * </pre>
       */
      public int getMapID() {
        return mapID_;
      }
      /**
       * <code>required uint32 mapID = 5;</code>
       *
       * <pre>
       *所在地图ID（cityID）
       * </pre>
       */
      public Builder setMapID(int value) {
        bitField0_ |= 0x00000010;
        mapID_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 mapID = 5;</code>
       *
       * <pre>
       *所在地图ID（cityID）
       * </pre>
       */
      public Builder clearMapID() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mapID_ = 0;
        
        return this;
      }

      // required uint64 copper = 6;
      private long copper_ ;
      /**
       * <code>required uint64 copper = 6;</code>
       *
       * <pre>
       *铜钱
       * </pre>
       */
      public boolean hasCopper() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint64 copper = 6;</code>
       *
       * <pre>
       *铜钱
       * </pre>
       */
      public long getCopper() {
        return copper_;
      }
      /**
       * <code>required uint64 copper = 6;</code>
       *
       * <pre>
       *铜钱
       * </pre>
       */
      public Builder setCopper(long value) {
        bitField0_ |= 0x00000020;
        copper_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 copper = 6;</code>
       *
       * <pre>
       *铜钱
       * </pre>
       */
      public Builder clearCopper() {
        bitField0_ = (bitField0_ & ~0x00000020);
        copper_ = 0L;
        
        return this;
      }

      // required uint32 gold = 7;
      private int gold_ ;
      /**
       * <code>required uint32 gold = 7;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 gold = 7;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>required uint32 gold = 7;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000040;
        gold_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 gold = 7;</code>
       *
       * <pre>
       *元宝
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000040);
        gold_ = 0;
        
        return this;
      }

      // required uint32 jade = 8;
      private int jade_ ;
      /**
       * <code>required uint32 jade = 8;</code>
       *
       * <pre>
       *玉石
       * </pre>
       */
      public boolean hasJade() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required uint32 jade = 8;</code>
       *
       * <pre>
       *玉石
       * </pre>
       */
      public int getJade() {
        return jade_;
      }
      /**
       * <code>required uint32 jade = 8;</code>
       *
       * <pre>
       *玉石
       * </pre>
       */
      public Builder setJade(int value) {
        bitField0_ |= 0x00000080;
        jade_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 jade = 8;</code>
       *
       * <pre>
       *玉石
       * </pre>
       */
      public Builder clearJade() {
        bitField0_ = (bitField0_ & ~0x00000080);
        jade_ = 0;
        
        return this;
      }

      // required uint32 power = 9;
      private int power_ ;
      /**
       * <code>required uint32 power = 9;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required uint32 power = 9;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public int getPower() {
        return power_;
      }
      /**
       * <code>required uint32 power = 9;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public Builder setPower(int value) {
        bitField0_ |= 0x00000100;
        power_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 power = 9;</code>
       *
       * <pre>
       *体力
       * </pre>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000100);
        power_ = 0;
        
        return this;
      }

      // required uint32 vipLevel = 10;
      private int vipLevel_ ;
      /**
       * <code>required uint32 vipLevel = 10;</code>
       *
       * <pre>
       *vip等级
       * </pre>
       */
      public boolean hasVipLevel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required uint32 vipLevel = 10;</code>
       *
       * <pre>
       *vip等级
       * </pre>
       */
      public int getVipLevel() {
        return vipLevel_;
      }
      /**
       * <code>required uint32 vipLevel = 10;</code>
       *
       * <pre>
       *vip等级
       * </pre>
       */
      public Builder setVipLevel(int value) {
        bitField0_ |= 0x00000200;
        vipLevel_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 vipLevel = 10;</code>
       *
       * <pre>
       *vip等级
       * </pre>
       */
      public Builder clearVipLevel() {
        bitField0_ = (bitField0_ & ~0x00000200);
        vipLevel_ = 0;
        
        return this;
      }

      // required uint64 credit = 11;
      private long credit_ ;
      /**
       * <code>required uint64 credit = 11;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public boolean hasCredit() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required uint64 credit = 11;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public long getCredit() {
        return credit_;
      }
      /**
       * <code>required uint64 credit = 11;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setCredit(long value) {
        bitField0_ |= 0x00000400;
        credit_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 credit = 11;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearCredit() {
        bitField0_ = (bitField0_ & ~0x00000400);
        credit_ = 0L;
        
        return this;
      }

      // optional uint64 honour = 12;
      private long honour_ ;
      /**
       * <code>optional uint64 honour = 12;</code>
       *
       * <pre>
       *荣誉
       * </pre>
       */
      public boolean hasHonour() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint64 honour = 12;</code>
       *
       * <pre>
       *荣誉
       * </pre>
       */
      public long getHonour() {
        return honour_;
      }
      /**
       * <code>optional uint64 honour = 12;</code>
       *
       * <pre>
       *荣誉
       * </pre>
       */
      public Builder setHonour(long value) {
        bitField0_ |= 0x00000800;
        honour_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 honour = 12;</code>
       *
       * <pre>
       *荣誉
       * </pre>
       */
      public Builder clearHonour() {
        bitField0_ = (bitField0_ & ~0x00000800);
        honour_ = 0L;
        
        return this;
      }

      // repeated uint32 vipRewarded = 13;
      private java.util.List<java.lang.Integer> vipRewarded_ = java.util.Collections.emptyList();
      private void ensureVipRewardedIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          vipRewarded_ = new java.util.ArrayList<java.lang.Integer>(vipRewarded_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated uint32 vipRewarded = 13;</code>
       *
       * <pre>
       *vip领取记录
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getVipRewardedList() {
        return java.util.Collections.unmodifiableList(vipRewarded_);
      }
      /**
       * <code>repeated uint32 vipRewarded = 13;</code>
       *
       * <pre>
       *vip领取记录
       * </pre>
       */
      public int getVipRewardedCount() {
        return vipRewarded_.size();
      }
      /**
       * <code>repeated uint32 vipRewarded = 13;</code>
       *
       * <pre>
       *vip领取记录
       * </pre>
       */
      public int getVipRewarded(int index) {
        return vipRewarded_.get(index);
      }
      /**
       * <code>repeated uint32 vipRewarded = 13;</code>
       *
       * <pre>
       *vip领取记录
       * </pre>
       */
      public Builder setVipRewarded(
          int index, int value) {
        ensureVipRewardedIsMutable();
        vipRewarded_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated uint32 vipRewarded = 13;</code>
       *
       * <pre>
       *vip领取记录
       * </pre>
       */
      public Builder addVipRewarded(int value) {
        ensureVipRewardedIsMutable();
        vipRewarded_.add(value);
        
        return this;
      }
      /**
       * <code>repeated uint32 vipRewarded = 13;</code>
       *
       * <pre>
       *vip领取记录
       * </pre>
       */
      public Builder addAllVipRewarded(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureVipRewardedIsMutable();
        super.addAll(values, vipRewarded_);
        
        return this;
      }
      /**
       * <code>repeated uint32 vipRewarded = 13;</code>
       *
       * <pre>
       *vip领取记录
       * </pre>
       */
      public Builder clearVipRewarded() {
        vipRewarded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        
        return this;
      }

      // optional uint32 recharge = 14;
      private int recharge_ ;
      /**
       * <code>optional uint32 recharge = 14;</code>
       *
       * <pre>
       *充值数量
       * </pre>
       */
      public boolean hasRecharge() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 recharge = 14;</code>
       *
       * <pre>
       *充值数量
       * </pre>
       */
      public int getRecharge() {
        return recharge_;
      }
      /**
       * <code>optional uint32 recharge = 14;</code>
       *
       * <pre>
       *充值数量
       * </pre>
       */
      public Builder setRecharge(int value) {
        bitField0_ |= 0x00002000;
        recharge_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 recharge = 14;</code>
       *
       * <pre>
       *充值数量
       * </pre>
       */
      public Builder clearRecharge() {
        bitField0_ = (bitField0_ & ~0x00002000);
        recharge_ = 0;
        
        return this;
      }

      // optional uint64 yijunID = 15;
      private long yijunID_ ;
      /**
       * <code>optional uint64 yijunID = 15;</code>
       *
       * <pre>
       *义军ID
       * </pre>
       */
      public boolean hasYijunID() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint64 yijunID = 15;</code>
       *
       * <pre>
       *义军ID
       * </pre>
       */
      public long getYijunID() {
        return yijunID_;
      }
      /**
       * <code>optional uint64 yijunID = 15;</code>
       *
       * <pre>
       *义军ID
       * </pre>
       */
      public Builder setYijunID(long value) {
        bitField0_ |= 0x00004000;
        yijunID_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 yijunID = 15;</code>
       *
       * <pre>
       *义军ID
       * </pre>
       */
      public Builder clearYijunID() {
        bitField0_ = (bitField0_ & ~0x00004000);
        yijunID_ = 0L;
        
        return this;
      }

      // optional uint64 exp = 16;
      private long exp_ ;
      /**
       * <code>optional uint64 exp = 16;</code>
       *
       * <pre>
       *角色经验
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint64 exp = 16;</code>
       *
       * <pre>
       *角色经验
       * </pre>
       */
      public long getExp() {
        return exp_;
      }
      /**
       * <code>optional uint64 exp = 16;</code>
       *
       * <pre>
       *角色经验
       * </pre>
       */
      public Builder setExp(long value) {
        bitField0_ |= 0x00008000;
        exp_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 exp = 16;</code>
       *
       * <pre>
       *角色经验
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00008000);
        exp_ = 0L;
        
        return this;
      }

      // optional uint64 jungong = 17;
      private long jungong_ ;
      /**
       * <code>optional uint64 jungong = 17;</code>
       *
       * <pre>
       *军功
       * </pre>
       */
      public boolean hasJungong() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint64 jungong = 17;</code>
       *
       * <pre>
       *军功
       * </pre>
       */
      public long getJungong() {
        return jungong_;
      }
      /**
       * <code>optional uint64 jungong = 17;</code>
       *
       * <pre>
       *军功
       * </pre>
       */
      public Builder setJungong(long value) {
        bitField0_ |= 0x00010000;
        jungong_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 jungong = 17;</code>
       *
       * <pre>
       *军功
       * </pre>
       */
      public Builder clearJungong() {
        bitField0_ = (bitField0_ & ~0x00010000);
        jungong_ = 0L;
        
        return this;
      }

      // optional uint32 buyPowerCountToday = 18;
      private int buyPowerCountToday_ ;
      /**
       * <code>optional uint32 buyPowerCountToday = 18;</code>
       *
       * <pre>
       *当天购买体力次数
       * </pre>
       */
      public boolean hasBuyPowerCountToday() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 buyPowerCountToday = 18;</code>
       *
       * <pre>
       *当天购买体力次数
       * </pre>
       */
      public int getBuyPowerCountToday() {
        return buyPowerCountToday_;
      }
      /**
       * <code>optional uint32 buyPowerCountToday = 18;</code>
       *
       * <pre>
       *当天购买体力次数
       * </pre>
       */
      public Builder setBuyPowerCountToday(int value) {
        bitField0_ |= 0x00020000;
        buyPowerCountToday_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 buyPowerCountToday = 18;</code>
       *
       * <pre>
       *当天购买体力次数
       * </pre>
       */
      public Builder clearBuyPowerCountToday() {
        bitField0_ = (bitField0_ & ~0x00020000);
        buyPowerCountToday_ = 0;
        
        return this;
      }

      // optional uint64 arenaRoleRank = 19;
      private long arenaRoleRank_ ;
      /**
       * <code>optional uint64 arenaRoleRank = 19;</code>
       *
       * <pre>
       * 竞技场角色排名
       * </pre>
       */
      public boolean hasArenaRoleRank() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint64 arenaRoleRank = 19;</code>
       *
       * <pre>
       * 竞技场角色排名
       * </pre>
       */
      public long getArenaRoleRank() {
        return arenaRoleRank_;
      }
      /**
       * <code>optional uint64 arenaRoleRank = 19;</code>
       *
       * <pre>
       * 竞技场角色排名
       * </pre>
       */
      public Builder setArenaRoleRank(long value) {
        bitField0_ |= 0x00040000;
        arenaRoleRank_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 arenaRoleRank = 19;</code>
       *
       * <pre>
       * 竞技场角色排名
       * </pre>
       */
      public Builder clearArenaRoleRank() {
        bitField0_ = (bitField0_ & ~0x00040000);
        arenaRoleRank_ = 0L;
        
        return this;
      }

      // optional uint32 fight = 20;
      private int fight_ ;
      /**
       * <code>optional uint32 fight = 20;</code>
       *
       * <pre>
       * 战斗力
       * </pre>
       */
      public boolean hasFight() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 fight = 20;</code>
       *
       * <pre>
       * 战斗力
       * </pre>
       */
      public int getFight() {
        return fight_;
      }
      /**
       * <code>optional uint32 fight = 20;</code>
       *
       * <pre>
       * 战斗力
       * </pre>
       */
      public Builder setFight(int value) {
        bitField0_ |= 0x00080000;
        fight_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 fight = 20;</code>
       *
       * <pre>
       * 战斗力
       * </pre>
       */
      public Builder clearFight() {
        bitField0_ = (bitField0_ & ~0x00080000);
        fight_ = 0;
        
        return this;
      }

      // optional uint32 goldTicket = 21;
      private int goldTicket_ ;
      /**
       * <code>optional uint32 goldTicket = 21;</code>
       *
       * <pre>
       * 金奖券
       * </pre>
       */
      public boolean hasGoldTicket() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 goldTicket = 21;</code>
       *
       * <pre>
       * 金奖券
       * </pre>
       */
      public int getGoldTicket() {
        return goldTicket_;
      }
      /**
       * <code>optional uint32 goldTicket = 21;</code>
       *
       * <pre>
       * 金奖券
       * </pre>
       */
      public Builder setGoldTicket(int value) {
        bitField0_ |= 0x00100000;
        goldTicket_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 goldTicket = 21;</code>
       *
       * <pre>
       * 金奖券
       * </pre>
       */
      public Builder clearGoldTicket() {
        bitField0_ = (bitField0_ & ~0x00100000);
        goldTicket_ = 0;
        
        return this;
      }

      // optional uint32 silverTicket = 22;
      private int silverTicket_ ;
      /**
       * <code>optional uint32 silverTicket = 22;</code>
       *
       * <pre>
       * 银奖券
       * </pre>
       */
      public boolean hasSilverTicket() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 silverTicket = 22;</code>
       *
       * <pre>
       * 银奖券
       * </pre>
       */
      public int getSilverTicket() {
        return silverTicket_;
      }
      /**
       * <code>optional uint32 silverTicket = 22;</code>
       *
       * <pre>
       * 银奖券
       * </pre>
       */
      public Builder setSilverTicket(int value) {
        bitField0_ |= 0x00200000;
        silverTicket_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 silverTicket = 22;</code>
       *
       * <pre>
       * 银奖券
       * </pre>
       */
      public Builder clearSilverTicket() {
        bitField0_ = (bitField0_ & ~0x00200000);
        silverTicket_ = 0;
        
        return this;
      }

      // optional uint32 copperTicket = 23;
      private int copperTicket_ ;
      /**
       * <code>optional uint32 copperTicket = 23;</code>
       *
       * <pre>
       * 铜奖券
       * </pre>
       */
      public boolean hasCopperTicket() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 copperTicket = 23;</code>
       *
       * <pre>
       * 铜奖券
       * </pre>
       */
      public int getCopperTicket() {
        return copperTicket_;
      }
      /**
       * <code>optional uint32 copperTicket = 23;</code>
       *
       * <pre>
       * 铜奖券
       * </pre>
       */
      public Builder setCopperTicket(int value) {
        bitField0_ |= 0x00400000;
        copperTicket_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 copperTicket = 23;</code>
       *
       * <pre>
       * 铜奖券
       * </pre>
       */
      public Builder clearCopperTicket() {
        bitField0_ = (bitField0_ & ~0x00400000);
        copperTicket_ = 0;
        
        return this;
      }

      // optional uint32 friendShip = 24;
      private int friendShip_ ;
      /**
       * <code>optional uint32 friendShip = 24;</code>
       *
       * <pre>
       * 友情点
       * </pre>
       */
      public boolean hasFriendShip() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 friendShip = 24;</code>
       *
       * <pre>
       * 友情点
       * </pre>
       */
      public int getFriendShip() {
        return friendShip_;
      }
      /**
       * <code>optional uint32 friendShip = 24;</code>
       *
       * <pre>
       * 友情点
       * </pre>
       */
      public Builder setFriendShip(int value) {
        bitField0_ |= 0x00800000;
        friendShip_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 friendShip = 24;</code>
       *
       * <pre>
       * 友情点
       * </pre>
       */
      public Builder clearFriendShip() {
        bitField0_ = (bitField0_ & ~0x00800000);
        friendShip_ = 0;
        
        return this;
      }

      // required uint32 curtitle = 25;
      private int curtitle_ ;
      /**
       * <code>required uint32 curtitle = 25;</code>
       *
       * <pre>
       *当前称号
       * </pre>
       */
      public boolean hasCurtitle() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>required uint32 curtitle = 25;</code>
       *
       * <pre>
       *当前称号
       * </pre>
       */
      public int getCurtitle() {
        return curtitle_;
      }
      /**
       * <code>required uint32 curtitle = 25;</code>
       *
       * <pre>
       *当前称号
       * </pre>
       */
      public Builder setCurtitle(int value) {
        bitField0_ |= 0x01000000;
        curtitle_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 curtitle = 25;</code>
       *
       * <pre>
       *当前称号
       * </pre>
       */
      public Builder clearCurtitle() {
        bitField0_ = (bitField0_ & ~0x01000000);
        curtitle_ = 0;
        
        return this;
      }

      // optional uint32 vipExperienceCardLevel = 26;
      private int vipExperienceCardLevel_ ;
      /**
       * <code>optional uint32 vipExperienceCardLevel = 26;</code>
       *
       * <pre>
       * VIP体验卡等级
       * </pre>
       */
      public boolean hasVipExperienceCardLevel() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 vipExperienceCardLevel = 26;</code>
       *
       * <pre>
       * VIP体验卡等级
       * </pre>
       */
      public int getVipExperienceCardLevel() {
        return vipExperienceCardLevel_;
      }
      /**
       * <code>optional uint32 vipExperienceCardLevel = 26;</code>
       *
       * <pre>
       * VIP体验卡等级
       * </pre>
       */
      public Builder setVipExperienceCardLevel(int value) {
        bitField0_ |= 0x02000000;
        vipExperienceCardLevel_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 vipExperienceCardLevel = 26;</code>
       *
       * <pre>
       * VIP体验卡等级
       * </pre>
       */
      public Builder clearVipExperienceCardLevel() {
        bitField0_ = (bitField0_ & ~0x02000000);
        vipExperienceCardLevel_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.MsgRoleData)
    }

    static {
      defaultInstance = new MsgRoleData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.MsgRoleData)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
