// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recharge_info.proto

package com.cwa.sanguo.messages.dto;

public final class RechargeInfo {
  private RechargeInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MsgRechargeInfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *  充值选项ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *  充值选项ID
     * </pre>
     */
    int getId();

    // required uint32 jade = 2;
    /**
     * <code>required uint32 jade = 2;</code>
     *
     * <pre>
     * 充值玉石数量
     * </pre>
     */
    boolean hasJade();
    /**
     * <code>required uint32 jade = 2;</code>
     *
     * <pre>
     * 充值玉石数量
     * </pre>
     */
    int getJade();

    // required uint32 gold = 3;
    /**
     * <code>required uint32 gold = 3;</code>
     *
     * <pre>
     * 充值返回元宝数
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>required uint32 gold = 3;</code>
     *
     * <pre>
     * 充值返回元宝数
     * </pre>
     */
    int getGold();

    // required uint32 status = 4;
    /**
     * <code>required uint32 status = 4;</code>
     *
     * <pre>
     * 充值选项图标状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required uint32 status = 4;</code>
     *
     * <pre>
     * 充值选项图标状态
     * </pre>
     */
    int getStatus();

    // required uint32 iconID = 5;
    /**
     * <code>required uint32 iconID = 5;</code>
     *
     * <pre>
     * 充值选项图标id
     * </pre>
     */
    boolean hasIconID();
    /**
     * <code>required uint32 iconID = 5;</code>
     *
     * <pre>
     * 充值选项图标id
     * </pre>
     */
    int getIconID();

    // required uint32 jadeIconID = 6;
    /**
     * <code>required uint32 jadeIconID = 6;</code>
     *
     * <pre>
     * 充值选项玉石图标ID
     * </pre>
     */
    boolean hasJadeIconID();
    /**
     * <code>required uint32 jadeIconID = 6;</code>
     *
     * <pre>
     * 充值选项玉石图标ID
     * </pre>
     */
    int getJadeIconID();
  }
  /**
   * Protobuf type {@code sanguo.MsgRechargeInfo}
   *
   * <pre>
   * 充值选项
   * </pre>
   */
  public static final class MsgRechargeInfo extends
      com.google.protobuf.GeneratedMessageLite
      implements MsgRechargeInfoOrBuilder {
    // Use MsgRechargeInfo.newBuilder() to construct.
    private MsgRechargeInfo(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MsgRechargeInfo(boolean noInit) {}

    private static final MsgRechargeInfo defaultInstance;
    public static MsgRechargeInfo getDefaultInstance() {
      return defaultInstance;
    }

    public MsgRechargeInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MsgRechargeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jade_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gold_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              status_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              iconID_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              jadeIconID_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MsgRechargeInfo> PARSER =
        new com.google.protobuf.AbstractParser<MsgRechargeInfo>() {
      public MsgRechargeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgRechargeInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgRechargeInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *  充值选项ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *  充值选项ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 jade = 2;
    public static final int JADE_FIELD_NUMBER = 2;
    private int jade_;
    /**
     * <code>required uint32 jade = 2;</code>
     *
     * <pre>
     * 充值玉石数量
     * </pre>
     */
    public boolean hasJade() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 jade = 2;</code>
     *
     * <pre>
     * 充值玉石数量
     * </pre>
     */
    public int getJade() {
      return jade_;
    }

    // required uint32 gold = 3;
    public static final int GOLD_FIELD_NUMBER = 3;
    private int gold_;
    /**
     * <code>required uint32 gold = 3;</code>
     *
     * <pre>
     * 充值返回元宝数
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 gold = 3;</code>
     *
     * <pre>
     * 充值返回元宝数
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // required uint32 status = 4;
    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_;
    /**
     * <code>required uint32 status = 4;</code>
     *
     * <pre>
     * 充值选项图标状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 status = 4;</code>
     *
     * <pre>
     * 充值选项图标状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // required uint32 iconID = 5;
    public static final int ICONID_FIELD_NUMBER = 5;
    private int iconID_;
    /**
     * <code>required uint32 iconID = 5;</code>
     *
     * <pre>
     * 充值选项图标id
     * </pre>
     */
    public boolean hasIconID() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 iconID = 5;</code>
     *
     * <pre>
     * 充值选项图标id
     * </pre>
     */
    public int getIconID() {
      return iconID_;
    }

    // required uint32 jadeIconID = 6;
    public static final int JADEICONID_FIELD_NUMBER = 6;
    private int jadeIconID_;
    /**
     * <code>required uint32 jadeIconID = 6;</code>
     *
     * <pre>
     * 充值选项玉石图标ID
     * </pre>
     */
    public boolean hasJadeIconID() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 jadeIconID = 6;</code>
     *
     * <pre>
     * 充值选项玉石图标ID
     * </pre>
     */
    public int getJadeIconID() {
      return jadeIconID_;
    }

    private void initFields() {
      id_ = 0;
      jade_ = 0;
      gold_ = 0;
      status_ = 0;
      iconID_ = 0;
      jadeIconID_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasJade()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIconID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasJadeIconID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, jade_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, gold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, iconID_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, jadeIconID_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, jade_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, gold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, iconID_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, jadeIconID_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.MsgRechargeInfo}
     *
     * <pre>
     * 充值选项
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo, Builder>
        implements com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfoOrBuilder {
      // Construct using com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jade_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        iconID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        jadeIconID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo build() {
        com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo buildPartial() {
        com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo result = new com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jade_ = jade_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.iconID_ = iconID_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.jadeIconID_ = jadeIconID_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo other) {
        if (other == com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasJade()) {
          setJade(other.getJade());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasIconID()) {
          setIconID(other.getIconID());
        }
        if (other.hasJadeIconID()) {
          setJadeIconID(other.getJadeIconID());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasJade()) {
          
          return false;
        }
        if (!hasGold()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasIconID()) {
          
          return false;
        }
        if (!hasJadeIconID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dto.RechargeInfo.MsgRechargeInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *  充值选项ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *  充值选项ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *  充值选项ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *  充值选项ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 jade = 2;
      private int jade_ ;
      /**
       * <code>required uint32 jade = 2;</code>
       *
       * <pre>
       * 充值玉石数量
       * </pre>
       */
      public boolean hasJade() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 jade = 2;</code>
       *
       * <pre>
       * 充值玉石数量
       * </pre>
       */
      public int getJade() {
        return jade_;
      }
      /**
       * <code>required uint32 jade = 2;</code>
       *
       * <pre>
       * 充值玉石数量
       * </pre>
       */
      public Builder setJade(int value) {
        bitField0_ |= 0x00000002;
        jade_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 jade = 2;</code>
       *
       * <pre>
       * 充值玉石数量
       * </pre>
       */
      public Builder clearJade() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jade_ = 0;
        
        return this;
      }

      // required uint32 gold = 3;
      private int gold_ ;
      /**
       * <code>required uint32 gold = 3;</code>
       *
       * <pre>
       * 充值返回元宝数
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 gold = 3;</code>
       *
       * <pre>
       * 充值返回元宝数
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>required uint32 gold = 3;</code>
       *
       * <pre>
       * 充值返回元宝数
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000004;
        gold_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 gold = 3;</code>
       *
       * <pre>
       * 充值返回元宝数
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gold_ = 0;
        
        return this;
      }

      // required uint32 status = 4;
      private int status_ ;
      /**
       * <code>required uint32 status = 4;</code>
       *
       * <pre>
       * 充值选项图标状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 status = 4;</code>
       *
       * <pre>
       * 充值选项图标状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required uint32 status = 4;</code>
       *
       * <pre>
       * 充值选项图标状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000008;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 status = 4;</code>
       *
       * <pre>
       * 充值选项图标状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        
        return this;
      }

      // required uint32 iconID = 5;
      private int iconID_ ;
      /**
       * <code>required uint32 iconID = 5;</code>
       *
       * <pre>
       * 充值选项图标id
       * </pre>
       */
      public boolean hasIconID() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 iconID = 5;</code>
       *
       * <pre>
       * 充值选项图标id
       * </pre>
       */
      public int getIconID() {
        return iconID_;
      }
      /**
       * <code>required uint32 iconID = 5;</code>
       *
       * <pre>
       * 充值选项图标id
       * </pre>
       */
      public Builder setIconID(int value) {
        bitField0_ |= 0x00000010;
        iconID_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 iconID = 5;</code>
       *
       * <pre>
       * 充值选项图标id
       * </pre>
       */
      public Builder clearIconID() {
        bitField0_ = (bitField0_ & ~0x00000010);
        iconID_ = 0;
        
        return this;
      }

      // required uint32 jadeIconID = 6;
      private int jadeIconID_ ;
      /**
       * <code>required uint32 jadeIconID = 6;</code>
       *
       * <pre>
       * 充值选项玉石图标ID
       * </pre>
       */
      public boolean hasJadeIconID() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 jadeIconID = 6;</code>
       *
       * <pre>
       * 充值选项玉石图标ID
       * </pre>
       */
      public int getJadeIconID() {
        return jadeIconID_;
      }
      /**
       * <code>required uint32 jadeIconID = 6;</code>
       *
       * <pre>
       * 充值选项玉石图标ID
       * </pre>
       */
      public Builder setJadeIconID(int value) {
        bitField0_ |= 0x00000020;
        jadeIconID_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 jadeIconID = 6;</code>
       *
       * <pre>
       * 充值选项玉石图标ID
       * </pre>
       */
      public Builder clearJadeIconID() {
        bitField0_ = (bitField0_ & ~0x00000020);
        jadeIconID_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.MsgRechargeInfo)
    }

    static {
      defaultInstance = new MsgRechargeInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.MsgRechargeInfo)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
