// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_dungeon_reward.proto

package com.cwa.sanguo.messages.dto;

public final class RoleDungeonReward {
  private RoleDungeonReward() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MsgDungeonRewardOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional uint64 copper = 1;
    /**
     * <code>optional uint64 copper = 1;</code>
     *
     * <pre>
     * 当前的铜钱
     * </pre>
     */
    boolean hasCopper();
    /**
     * <code>optional uint64 copper = 1;</code>
     *
     * <pre>
     * 当前的铜钱
     * </pre>
     */
    long getCopper();

    // optional uint32 power = 2;
    /**
     * <code>optional uint32 power = 2;</code>
     *
     * <pre>
     * 当前的体力(扫荡扣除后的体力)    
     * </pre>
     */
    boolean hasPower();
    /**
     * <code>optional uint32 power = 2;</code>
     *
     * <pre>
     * 当前的体力(扫荡扣除后的体力)    
     * </pre>
     */
    int getPower();

    // optional uint64 jugong = 3;
    /**
     * <code>optional uint64 jugong = 3;</code>
     *
     * <pre>
     * 当前军功
     * </pre>
     */
    boolean hasJugong();
    /**
     * <code>optional uint64 jugong = 3;</code>
     *
     * <pre>
     * 当前军功
     * </pre>
     */
    long getJugong();

    // optional uint64 exp = 4;
    /**
     * <code>optional uint64 exp = 4;</code>
     *
     * <pre>
     * 完成一次副本增加经验
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>optional uint64 exp = 4;</code>
     *
     * <pre>
     * 完成一次副本增加经验
     * </pre>
     */
    long getExp();

    // optional uint32 star = 5;
    /**
     * <code>optional uint32 star = 5;</code>
     *
     * <pre>
     * 评星
     * </pre>
     */
    boolean hasStar();
    /**
     * <code>optional uint32 star = 5;</code>
     *
     * <pre>
     * 评星
     * </pre>
     */
    int getStar();
  }
  /**
   * Protobuf type {@code sanguo.MsgDungeonReward}
   */
  public static final class MsgDungeonReward extends
      com.google.protobuf.GeneratedMessageLite
      implements MsgDungeonRewardOrBuilder {
    // Use MsgDungeonReward.newBuilder() to construct.
    private MsgDungeonReward(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MsgDungeonReward(boolean noInit) {}

    private static final MsgDungeonReward defaultInstance;
    public static MsgDungeonReward getDefaultInstance() {
      return defaultInstance;
    }

    public MsgDungeonReward getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MsgDungeonReward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              copper_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              power_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              jugong_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              exp_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              star_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MsgDungeonReward> PARSER =
        new com.google.protobuf.AbstractParser<MsgDungeonReward>() {
      public MsgDungeonReward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgDungeonReward(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgDungeonReward> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 copper = 1;
    public static final int COPPER_FIELD_NUMBER = 1;
    private long copper_;
    /**
     * <code>optional uint64 copper = 1;</code>
     *
     * <pre>
     * 当前的铜钱
     * </pre>
     */
    public boolean hasCopper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 copper = 1;</code>
     *
     * <pre>
     * 当前的铜钱
     * </pre>
     */
    public long getCopper() {
      return copper_;
    }

    // optional uint32 power = 2;
    public static final int POWER_FIELD_NUMBER = 2;
    private int power_;
    /**
     * <code>optional uint32 power = 2;</code>
     *
     * <pre>
     * 当前的体力(扫荡扣除后的体力)    
     * </pre>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 power = 2;</code>
     *
     * <pre>
     * 当前的体力(扫荡扣除后的体力)    
     * </pre>
     */
    public int getPower() {
      return power_;
    }

    // optional uint64 jugong = 3;
    public static final int JUGONG_FIELD_NUMBER = 3;
    private long jugong_;
    /**
     * <code>optional uint64 jugong = 3;</code>
     *
     * <pre>
     * 当前军功
     * </pre>
     */
    public boolean hasJugong() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 jugong = 3;</code>
     *
     * <pre>
     * 当前军功
     * </pre>
     */
    public long getJugong() {
      return jugong_;
    }

    // optional uint64 exp = 4;
    public static final int EXP_FIELD_NUMBER = 4;
    private long exp_;
    /**
     * <code>optional uint64 exp = 4;</code>
     *
     * <pre>
     * 完成一次副本增加经验
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 exp = 4;</code>
     *
     * <pre>
     * 完成一次副本增加经验
     * </pre>
     */
    public long getExp() {
      return exp_;
    }

    // optional uint32 star = 5;
    public static final int STAR_FIELD_NUMBER = 5;
    private int star_;
    /**
     * <code>optional uint32 star = 5;</code>
     *
     * <pre>
     * 评星
     * </pre>
     */
    public boolean hasStar() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 star = 5;</code>
     *
     * <pre>
     * 评星
     * </pre>
     */
    public int getStar() {
      return star_;
    }

    private void initFields() {
      copper_ = 0L;
      power_ = 0;
      jugong_ = 0L;
      exp_ = 0L;
      star_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, copper_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, power_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, jugong_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, exp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, star_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, copper_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, power_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, jugong_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, exp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, star_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.MsgDungeonReward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward, Builder>
        implements com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonRewardOrBuilder {
      // Construct using com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        copper_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        jugong_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        exp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        star_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward build() {
        com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward buildPartial() {
        com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward result = new com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.copper_ = copper_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.jugong_ = jugong_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.star_ = star_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward other) {
        if (other == com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance()) return this;
        if (other.hasCopper()) {
          setCopper(other.getCopper());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasJugong()) {
          setJugong(other.getJugong());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasStar()) {
          setStar(other.getStar());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 copper = 1;
      private long copper_ ;
      /**
       * <code>optional uint64 copper = 1;</code>
       *
       * <pre>
       * 当前的铜钱
       * </pre>
       */
      public boolean hasCopper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 copper = 1;</code>
       *
       * <pre>
       * 当前的铜钱
       * </pre>
       */
      public long getCopper() {
        return copper_;
      }
      /**
       * <code>optional uint64 copper = 1;</code>
       *
       * <pre>
       * 当前的铜钱
       * </pre>
       */
      public Builder setCopper(long value) {
        bitField0_ |= 0x00000001;
        copper_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 copper = 1;</code>
       *
       * <pre>
       * 当前的铜钱
       * </pre>
       */
      public Builder clearCopper() {
        bitField0_ = (bitField0_ & ~0x00000001);
        copper_ = 0L;
        
        return this;
      }

      // optional uint32 power = 2;
      private int power_ ;
      /**
       * <code>optional uint32 power = 2;</code>
       *
       * <pre>
       * 当前的体力(扫荡扣除后的体力)    
       * </pre>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 power = 2;</code>
       *
       * <pre>
       * 当前的体力(扫荡扣除后的体力)    
       * </pre>
       */
      public int getPower() {
        return power_;
      }
      /**
       * <code>optional uint32 power = 2;</code>
       *
       * <pre>
       * 当前的体力(扫荡扣除后的体力)    
       * </pre>
       */
      public Builder setPower(int value) {
        bitField0_ |= 0x00000002;
        power_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 power = 2;</code>
       *
       * <pre>
       * 当前的体力(扫荡扣除后的体力)    
       * </pre>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000002);
        power_ = 0;
        
        return this;
      }

      // optional uint64 jugong = 3;
      private long jugong_ ;
      /**
       * <code>optional uint64 jugong = 3;</code>
       *
       * <pre>
       * 当前军功
       * </pre>
       */
      public boolean hasJugong() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 jugong = 3;</code>
       *
       * <pre>
       * 当前军功
       * </pre>
       */
      public long getJugong() {
        return jugong_;
      }
      /**
       * <code>optional uint64 jugong = 3;</code>
       *
       * <pre>
       * 当前军功
       * </pre>
       */
      public Builder setJugong(long value) {
        bitField0_ |= 0x00000004;
        jugong_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 jugong = 3;</code>
       *
       * <pre>
       * 当前军功
       * </pre>
       */
      public Builder clearJugong() {
        bitField0_ = (bitField0_ & ~0x00000004);
        jugong_ = 0L;
        
        return this;
      }

      // optional uint64 exp = 4;
      private long exp_ ;
      /**
       * <code>optional uint64 exp = 4;</code>
       *
       * <pre>
       * 完成一次副本增加经验
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 exp = 4;</code>
       *
       * <pre>
       * 完成一次副本增加经验
       * </pre>
       */
      public long getExp() {
        return exp_;
      }
      /**
       * <code>optional uint64 exp = 4;</code>
       *
       * <pre>
       * 完成一次副本增加经验
       * </pre>
       */
      public Builder setExp(long value) {
        bitField0_ |= 0x00000008;
        exp_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 exp = 4;</code>
       *
       * <pre>
       * 完成一次副本增加经验
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        exp_ = 0L;
        
        return this;
      }

      // optional uint32 star = 5;
      private int star_ ;
      /**
       * <code>optional uint32 star = 5;</code>
       *
       * <pre>
       * 评星
       * </pre>
       */
      public boolean hasStar() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 star = 5;</code>
       *
       * <pre>
       * 评星
       * </pre>
       */
      public int getStar() {
        return star_;
      }
      /**
       * <code>optional uint32 star = 5;</code>
       *
       * <pre>
       * 评星
       * </pre>
       */
      public Builder setStar(int value) {
        bitField0_ |= 0x00000010;
        star_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 star = 5;</code>
       *
       * <pre>
       * 评星
       * </pre>
       */
      public Builder clearStar() {
        bitField0_ = (bitField0_ & ~0x00000010);
        star_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.MsgDungeonReward)
    }

    static {
      defaultInstance = new MsgDungeonReward(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.MsgDungeonReward)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
