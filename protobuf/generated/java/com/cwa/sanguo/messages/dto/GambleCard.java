// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gamble_card.proto

package com.cwa.sanguo.messages.dto;

public final class GambleCard {
  private GambleCard() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MsgGambleCardItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 key = 1;
    /**
     * <code>required uint32 key = 1;</code>
     *
     * <pre>
     * 牌的类型(1 装备 技能竹简残卷 武学秘籍, 2 宝石 ,3 铜钱,4 荣誉)
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>required uint32 key = 1;</code>
     *
     * <pre>
     * 牌的类型(1 装备 技能竹简残卷 武学秘籍, 2 宝石 ,3 铜钱,4 荣誉)
     * </pre>
     */
    int getKey();

    // required uint64 value = 2;
    /**
     * <code>required uint64 value = 2;</code>
     *
     * <pre>
     * 牌值,根据类型表示具体的值
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>required uint64 value = 2;</code>
     *
     * <pre>
     * 牌值,根据类型表示具体的值
     * </pre>
     */
    long getValue();
  }
  /**
   * Protobuf type {@code sanguo.MsgGambleCardItem}
   */
  public static final class MsgGambleCardItem extends
      com.google.protobuf.GeneratedMessageLite
      implements MsgGambleCardItemOrBuilder {
    // Use MsgGambleCardItem.newBuilder() to construct.
    private MsgGambleCardItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MsgGambleCardItem(boolean noInit) {}

    private static final MsgGambleCardItem defaultInstance;
    public static MsgGambleCardItem getDefaultInstance() {
      return defaultInstance;
    }

    public MsgGambleCardItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MsgGambleCardItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              key_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MsgGambleCardItem> PARSER =
        new com.google.protobuf.AbstractParser<MsgGambleCardItem>() {
      public MsgGambleCardItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgGambleCardItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgGambleCardItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private int key_;
    /**
     * <code>required uint32 key = 1;</code>
     *
     * <pre>
     * 牌的类型(1 装备 技能竹简残卷 武学秘籍, 2 宝石 ,3 铜钱,4 荣誉)
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 key = 1;</code>
     *
     * <pre>
     * 牌的类型(1 装备 技能竹简残卷 武学秘籍, 2 宝石 ,3 铜钱,4 荣誉)
     * </pre>
     */
    public int getKey() {
      return key_;
    }

    // required uint64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private long value_;
    /**
     * <code>required uint64 value = 2;</code>
     *
     * <pre>
     * 牌值,根据类型表示具体的值
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 value = 2;</code>
     *
     * <pre>
     * 牌值,根据类型表示具体的值
     * </pre>
     */
    public long getValue() {
      return value_;
    }

    private void initFields() {
      key_ = 0;
      value_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, value_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, value_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.MsgGambleCardItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem, Builder>
        implements com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItemOrBuilder {
      // Construct using com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem build() {
        com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem buildPartial() {
        com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem result = new com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem other) {
        if (other == com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 key = 1;
      private int key_ ;
      /**
       * <code>required uint32 key = 1;</code>
       *
       * <pre>
       * 牌的类型(1 装备 技能竹简残卷 武学秘籍, 2 宝石 ,3 铜钱,4 荣誉)
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 key = 1;</code>
       *
       * <pre>
       * 牌的类型(1 装备 技能竹简残卷 武学秘籍, 2 宝石 ,3 铜钱,4 荣誉)
       * </pre>
       */
      public int getKey() {
        return key_;
      }
      /**
       * <code>required uint32 key = 1;</code>
       *
       * <pre>
       * 牌的类型(1 装备 技能竹简残卷 武学秘籍, 2 宝石 ,3 铜钱,4 荣誉)
       * </pre>
       */
      public Builder setKey(int value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 key = 1;</code>
       *
       * <pre>
       * 牌的类型(1 装备 技能竹简残卷 武学秘籍, 2 宝石 ,3 铜钱,4 荣誉)
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = 0;
        
        return this;
      }

      // required uint64 value = 2;
      private long value_ ;
      /**
       * <code>required uint64 value = 2;</code>
       *
       * <pre>
       * 牌值,根据类型表示具体的值
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 value = 2;</code>
       *
       * <pre>
       * 牌值,根据类型表示具体的值
       * </pre>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>required uint64 value = 2;</code>
       *
       * <pre>
       * 牌值,根据类型表示具体的值
       * </pre>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 value = 2;</code>
       *
       * <pre>
       * 牌值,根据类型表示具体的值
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.MsgGambleCardItem)
    }

    static {
      defaultInstance = new MsgGambleCardItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.MsgGambleCardItem)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
