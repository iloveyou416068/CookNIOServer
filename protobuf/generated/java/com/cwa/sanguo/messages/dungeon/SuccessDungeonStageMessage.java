// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: success_dungeon_stage.proto

package com.cwa.sanguo.messages.dungeon;

public final class SuccessDungeonStageMessage {
  private SuccessDungeonStageMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SuccessDungeonStageRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();

    // required uint32 stageId = 2;
    /**
     * <code>required uint32 stageId = 2;</code>
     *
     * <pre>
     * 副本id
     * </pre>
     */
    boolean hasStageId();
    /**
     * <code>required uint32 stageId = 2;</code>
     *
     * <pre>
     * 副本id
     * </pre>
     */
    int getStageId();

    // required uint32 type = 3;
    /**
     * <code>required uint32 type = 3;</code>
     *
     * <pre>
     * 副本类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required uint32 type = 3;</code>
     *
     * <pre>
     * 副本类型
     * </pre>
     */
    int getType();

    // required uint32 clearTime = 4;
    /**
     * <code>required uint32 clearTime = 4;</code>
     *
     * <pre>
     * 副本通关时间
     * </pre>
     */
    boolean hasClearTime();
    /**
     * <code>required uint32 clearTime = 4;</code>
     *
     * <pre>
     * 副本通关时间
     * </pre>
     */
    int getClearTime();

    // required uint32 maxBatter = 5;
    /**
     * <code>required uint32 maxBatter = 5;</code>
     *
     * <pre>
     * 最大连击数
     * </pre>
     */
    boolean hasMaxBatter();
    /**
     * <code>required uint32 maxBatter = 5;</code>
     *
     * <pre>
     * 最大连击数
     * </pre>
     */
    int getMaxBatter();

    // required float loseHP = 6;
    /**
     * <code>required float loseHP = 6;</code>
     *
     * <pre>
     * 损失血量
     * </pre>
     */
    boolean hasLoseHP();
    /**
     * <code>required float loseHP = 6;</code>
     *
     * <pre>
     * 损失血量
     * </pre>
     */
    float getLoseHP();

    // required uint32 reviveTimes = 7;
    /**
     * <code>required uint32 reviveTimes = 7;</code>
     *
     * <pre>
     * 复活次数
     * </pre>
     */
    boolean hasReviveTimes();
    /**
     * <code>required uint32 reviveTimes = 7;</code>
     *
     * <pre>
     * 复活次数
     * </pre>
     */
    int getReviveTimes();

    // required uint32 killEnemyCount = 8;
    /**
     * <code>required uint32 killEnemyCount = 8;</code>
     *
     * <pre>
     * 杀敌数量
     * </pre>
     */
    boolean hasKillEnemyCount();
    /**
     * <code>required uint32 killEnemyCount = 8;</code>
     *
     * <pre>
     * 杀敌数量
     * </pre>
     */
    int getKillEnemyCount();

    // required uint32 pickCopper = 9;
    /**
     * <code>required uint32 pickCopper = 9;</code>
     *
     * <pre>
     * 战斗中捡到的铜钱
     * </pre>
     */
    boolean hasPickCopper();
    /**
     * <code>required uint32 pickCopper = 9;</code>
     *
     * <pre>
     * 战斗中捡到的铜钱
     * </pre>
     */
    int getPickCopper();

    // required uint32 pickHonour = 10;
    /**
     * <code>required uint32 pickHonour = 10;</code>
     *
     * <pre>
     * 战斗中捡到的荣誉
     * </pre>
     */
    boolean hasPickHonour();
    /**
     * <code>required uint32 pickHonour = 10;</code>
     *
     * <pre>
     * 战斗中捡到的荣誉
     * </pre>
     */
    int getPickHonour();

    // required uint32 pickGold = 11;
    /**
     * <code>required uint32 pickGold = 11;</code>
     *
     * <pre>
     * 战斗中捡到的元宝
     * </pre>
     */
    boolean hasPickGold();
    /**
     * <code>required uint32 pickGold = 11;</code>
     *
     * <pre>
     * 战斗中捡到的元宝
     * </pre>
     */
    int getPickGold();

    // repeated uint32 rewardGoodsIds = 12;
    /**
     * <code>repeated uint32 rewardGoodsIds = 12;</code>
     *
     * <pre>
     * 在EnterDungeonStageMessage消息里发送的随机物品id
     * </pre>
     */
    java.util.List<java.lang.Integer> getRewardGoodsIdsList();
    /**
     * <code>repeated uint32 rewardGoodsIds = 12;</code>
     *
     * <pre>
     * 在EnterDungeonStageMessage消息里发送的随机物品id
     * </pre>
     */
    int getRewardGoodsIdsCount();
    /**
     * <code>repeated uint32 rewardGoodsIds = 12;</code>
     *
     * <pre>
     * 在EnterDungeonStageMessage消息里发送的随机物品id
     * </pre>
     */
    int getRewardGoodsIds(int index);
  }
  /**
   * Protobuf type {@code sanguo.SuccessDungeonStageRequest}
   */
  public static final class SuccessDungeonStageRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements SuccessDungeonStageRequestOrBuilder {
    // Use SuccessDungeonStageRequest.newBuilder() to construct.
    private SuccessDungeonStageRequest(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SuccessDungeonStageRequest(boolean noInit) {}

    private static final SuccessDungeonStageRequest defaultInstance;
    public static SuccessDungeonStageRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SuccessDungeonStageRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SuccessDungeonStageRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              stageId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              type_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              clearTime_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxBatter_ = input.readUInt32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              loseHP_ = input.readFloat();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              reviveTimes_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              killEnemyCount_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              pickCopper_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              pickHonour_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              pickGold_ = input.readUInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                rewardGoodsIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              rewardGoodsIds_.add(input.readUInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                rewardGoodsIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                rewardGoodsIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          rewardGoodsIds_ = java.util.Collections.unmodifiableList(rewardGoodsIds_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SuccessDungeonStageRequest> PARSER =
        new com.google.protobuf.AbstractParser<SuccessDungeonStageRequest>() {
      public SuccessDungeonStageRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SuccessDungeonStageRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SuccessDungeonStageRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    // required uint32 stageId = 2;
    public static final int STAGEID_FIELD_NUMBER = 2;
    private int stageId_;
    /**
     * <code>required uint32 stageId = 2;</code>
     *
     * <pre>
     * 副本id
     * </pre>
     */
    public boolean hasStageId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 stageId = 2;</code>
     *
     * <pre>
     * 副本id
     * </pre>
     */
    public int getStageId() {
      return stageId_;
    }

    // required uint32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>required uint32 type = 3;</code>
     *
     * <pre>
     * 副本类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 type = 3;</code>
     *
     * <pre>
     * 副本类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required uint32 clearTime = 4;
    public static final int CLEARTIME_FIELD_NUMBER = 4;
    private int clearTime_;
    /**
     * <code>required uint32 clearTime = 4;</code>
     *
     * <pre>
     * 副本通关时间
     * </pre>
     */
    public boolean hasClearTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 clearTime = 4;</code>
     *
     * <pre>
     * 副本通关时间
     * </pre>
     */
    public int getClearTime() {
      return clearTime_;
    }

    // required uint32 maxBatter = 5;
    public static final int MAXBATTER_FIELD_NUMBER = 5;
    private int maxBatter_;
    /**
     * <code>required uint32 maxBatter = 5;</code>
     *
     * <pre>
     * 最大连击数
     * </pre>
     */
    public boolean hasMaxBatter() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 maxBatter = 5;</code>
     *
     * <pre>
     * 最大连击数
     * </pre>
     */
    public int getMaxBatter() {
      return maxBatter_;
    }

    // required float loseHP = 6;
    public static final int LOSEHP_FIELD_NUMBER = 6;
    private float loseHP_;
    /**
     * <code>required float loseHP = 6;</code>
     *
     * <pre>
     * 损失血量
     * </pre>
     */
    public boolean hasLoseHP() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float loseHP = 6;</code>
     *
     * <pre>
     * 损失血量
     * </pre>
     */
    public float getLoseHP() {
      return loseHP_;
    }

    // required uint32 reviveTimes = 7;
    public static final int REVIVETIMES_FIELD_NUMBER = 7;
    private int reviveTimes_;
    /**
     * <code>required uint32 reviveTimes = 7;</code>
     *
     * <pre>
     * 复活次数
     * </pre>
     */
    public boolean hasReviveTimes() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint32 reviveTimes = 7;</code>
     *
     * <pre>
     * 复活次数
     * </pre>
     */
    public int getReviveTimes() {
      return reviveTimes_;
    }

    // required uint32 killEnemyCount = 8;
    public static final int KILLENEMYCOUNT_FIELD_NUMBER = 8;
    private int killEnemyCount_;
    /**
     * <code>required uint32 killEnemyCount = 8;</code>
     *
     * <pre>
     * 杀敌数量
     * </pre>
     */
    public boolean hasKillEnemyCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required uint32 killEnemyCount = 8;</code>
     *
     * <pre>
     * 杀敌数量
     * </pre>
     */
    public int getKillEnemyCount() {
      return killEnemyCount_;
    }

    // required uint32 pickCopper = 9;
    public static final int PICKCOPPER_FIELD_NUMBER = 9;
    private int pickCopper_;
    /**
     * <code>required uint32 pickCopper = 9;</code>
     *
     * <pre>
     * 战斗中捡到的铜钱
     * </pre>
     */
    public boolean hasPickCopper() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required uint32 pickCopper = 9;</code>
     *
     * <pre>
     * 战斗中捡到的铜钱
     * </pre>
     */
    public int getPickCopper() {
      return pickCopper_;
    }

    // required uint32 pickHonour = 10;
    public static final int PICKHONOUR_FIELD_NUMBER = 10;
    private int pickHonour_;
    /**
     * <code>required uint32 pickHonour = 10;</code>
     *
     * <pre>
     * 战斗中捡到的荣誉
     * </pre>
     */
    public boolean hasPickHonour() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required uint32 pickHonour = 10;</code>
     *
     * <pre>
     * 战斗中捡到的荣誉
     * </pre>
     */
    public int getPickHonour() {
      return pickHonour_;
    }

    // required uint32 pickGold = 11;
    public static final int PICKGOLD_FIELD_NUMBER = 11;
    private int pickGold_;
    /**
     * <code>required uint32 pickGold = 11;</code>
     *
     * <pre>
     * 战斗中捡到的元宝
     * </pre>
     */
    public boolean hasPickGold() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required uint32 pickGold = 11;</code>
     *
     * <pre>
     * 战斗中捡到的元宝
     * </pre>
     */
    public int getPickGold() {
      return pickGold_;
    }

    // repeated uint32 rewardGoodsIds = 12;
    public static final int REWARDGOODSIDS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> rewardGoodsIds_;
    /**
     * <code>repeated uint32 rewardGoodsIds = 12;</code>
     *
     * <pre>
     * 在EnterDungeonStageMessage消息里发送的随机物品id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRewardGoodsIdsList() {
      return rewardGoodsIds_;
    }
    /**
     * <code>repeated uint32 rewardGoodsIds = 12;</code>
     *
     * <pre>
     * 在EnterDungeonStageMessage消息里发送的随机物品id
     * </pre>
     */
    public int getRewardGoodsIdsCount() {
      return rewardGoodsIds_.size();
    }
    /**
     * <code>repeated uint32 rewardGoodsIds = 12;</code>
     *
     * <pre>
     * 在EnterDungeonStageMessage消息里发送的随机物品id
     * </pre>
     */
    public int getRewardGoodsIds(int index) {
      return rewardGoodsIds_.get(index);
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      stageId_ = 0;
      type_ = 0;
      clearTime_ = 0;
      maxBatter_ = 0;
      loseHP_ = 0F;
      reviveTimes_ = 0;
      killEnemyCount_ = 0;
      pickCopper_ = 0;
      pickHonour_ = 0;
      pickGold_ = 0;
      rewardGoodsIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStageId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClearTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxBatter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLoseHP()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReviveTimes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKillEnemyCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPickCopper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPickHonour()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPickGold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, stageId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, clearTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, maxBatter_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, loseHP_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, reviveTimes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, killEnemyCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, pickCopper_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, pickHonour_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, pickGold_);
      }
      for (int i = 0; i < rewardGoodsIds_.size(); i++) {
        output.writeUInt32(12, rewardGoodsIds_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, stageId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, clearTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, maxBatter_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, loseHP_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, reviveTimes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, killEnemyCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, pickCopper_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, pickHonour_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, pickGold_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rewardGoodsIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(rewardGoodsIds_.get(i));
        }
        size += dataSize;
        size += 1 * getRewardGoodsIdsList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.SuccessDungeonStageRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest, Builder>
        implements com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequestOrBuilder {
      // Construct using com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        stageId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        clearTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxBatter_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        loseHP_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        reviveTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        killEnemyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        pickCopper_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        pickHonour_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        pickGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        rewardGoodsIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest build() {
        com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest buildPartial() {
        com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest result = new com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stageId_ = stageId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clearTime_ = clearTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxBatter_ = maxBatter_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.loseHP_ = loseHP_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.reviveTimes_ = reviveTimes_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.killEnemyCount_ = killEnemyCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pickCopper_ = pickCopper_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pickHonour_ = pickHonour_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.pickGold_ = pickGold_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          rewardGoodsIds_ = java.util.Collections.unmodifiableList(rewardGoodsIds_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.rewardGoodsIds_ = rewardGoodsIds_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest other) {
        if (other == com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        if (other.hasStageId()) {
          setStageId(other.getStageId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasClearTime()) {
          setClearTime(other.getClearTime());
        }
        if (other.hasMaxBatter()) {
          setMaxBatter(other.getMaxBatter());
        }
        if (other.hasLoseHP()) {
          setLoseHP(other.getLoseHP());
        }
        if (other.hasReviveTimes()) {
          setReviveTimes(other.getReviveTimes());
        }
        if (other.hasKillEnemyCount()) {
          setKillEnemyCount(other.getKillEnemyCount());
        }
        if (other.hasPickCopper()) {
          setPickCopper(other.getPickCopper());
        }
        if (other.hasPickHonour()) {
          setPickHonour(other.getPickHonour());
        }
        if (other.hasPickGold()) {
          setPickGold(other.getPickGold());
        }
        if (!other.rewardGoodsIds_.isEmpty()) {
          if (rewardGoodsIds_.isEmpty()) {
            rewardGoodsIds_ = other.rewardGoodsIds_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureRewardGoodsIdsIsMutable();
            rewardGoodsIds_.addAll(other.rewardGoodsIds_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        if (!hasStageId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasClearTime()) {
          
          return false;
        }
        if (!hasMaxBatter()) {
          
          return false;
        }
        if (!hasLoseHP()) {
          
          return false;
        }
        if (!hasReviveTimes()) {
          
          return false;
        }
        if (!hasKillEnemyCount()) {
          
          return false;
        }
        if (!hasPickCopper()) {
          
          return false;
        }
        if (!hasPickHonour()) {
          
          return false;
        }
        if (!hasPickGold()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // required uint32 stageId = 2;
      private int stageId_ ;
      /**
       * <code>required uint32 stageId = 2;</code>
       *
       * <pre>
       * 副本id
       * </pre>
       */
      public boolean hasStageId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 stageId = 2;</code>
       *
       * <pre>
       * 副本id
       * </pre>
       */
      public int getStageId() {
        return stageId_;
      }
      /**
       * <code>required uint32 stageId = 2;</code>
       *
       * <pre>
       * 副本id
       * </pre>
       */
      public Builder setStageId(int value) {
        bitField0_ |= 0x00000002;
        stageId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 stageId = 2;</code>
       *
       * <pre>
       * 副本id
       * </pre>
       */
      public Builder clearStageId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stageId_ = 0;
        
        return this;
      }

      // required uint32 type = 3;
      private int type_ ;
      /**
       * <code>required uint32 type = 3;</code>
       *
       * <pre>
       * 副本类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 type = 3;</code>
       *
       * <pre>
       * 副本类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required uint32 type = 3;</code>
       *
       * <pre>
       * 副本类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 type = 3;</code>
       *
       * <pre>
       * 副本类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        
        return this;
      }

      // required uint32 clearTime = 4;
      private int clearTime_ ;
      /**
       * <code>required uint32 clearTime = 4;</code>
       *
       * <pre>
       * 副本通关时间
       * </pre>
       */
      public boolean hasClearTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 clearTime = 4;</code>
       *
       * <pre>
       * 副本通关时间
       * </pre>
       */
      public int getClearTime() {
        return clearTime_;
      }
      /**
       * <code>required uint32 clearTime = 4;</code>
       *
       * <pre>
       * 副本通关时间
       * </pre>
       */
      public Builder setClearTime(int value) {
        bitField0_ |= 0x00000008;
        clearTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 clearTime = 4;</code>
       *
       * <pre>
       * 副本通关时间
       * </pre>
       */
      public Builder clearClearTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clearTime_ = 0;
        
        return this;
      }

      // required uint32 maxBatter = 5;
      private int maxBatter_ ;
      /**
       * <code>required uint32 maxBatter = 5;</code>
       *
       * <pre>
       * 最大连击数
       * </pre>
       */
      public boolean hasMaxBatter() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 maxBatter = 5;</code>
       *
       * <pre>
       * 最大连击数
       * </pre>
       */
      public int getMaxBatter() {
        return maxBatter_;
      }
      /**
       * <code>required uint32 maxBatter = 5;</code>
       *
       * <pre>
       * 最大连击数
       * </pre>
       */
      public Builder setMaxBatter(int value) {
        bitField0_ |= 0x00000010;
        maxBatter_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 maxBatter = 5;</code>
       *
       * <pre>
       * 最大连击数
       * </pre>
       */
      public Builder clearMaxBatter() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxBatter_ = 0;
        
        return this;
      }

      // required float loseHP = 6;
      private float loseHP_ ;
      /**
       * <code>required float loseHP = 6;</code>
       *
       * <pre>
       * 损失血量
       * </pre>
       */
      public boolean hasLoseHP() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float loseHP = 6;</code>
       *
       * <pre>
       * 损失血量
       * </pre>
       */
      public float getLoseHP() {
        return loseHP_;
      }
      /**
       * <code>required float loseHP = 6;</code>
       *
       * <pre>
       * 损失血量
       * </pre>
       */
      public Builder setLoseHP(float value) {
        bitField0_ |= 0x00000020;
        loseHP_ = value;
        
        return this;
      }
      /**
       * <code>required float loseHP = 6;</code>
       *
       * <pre>
       * 损失血量
       * </pre>
       */
      public Builder clearLoseHP() {
        bitField0_ = (bitField0_ & ~0x00000020);
        loseHP_ = 0F;
        
        return this;
      }

      // required uint32 reviveTimes = 7;
      private int reviveTimes_ ;
      /**
       * <code>required uint32 reviveTimes = 7;</code>
       *
       * <pre>
       * 复活次数
       * </pre>
       */
      public boolean hasReviveTimes() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 reviveTimes = 7;</code>
       *
       * <pre>
       * 复活次数
       * </pre>
       */
      public int getReviveTimes() {
        return reviveTimes_;
      }
      /**
       * <code>required uint32 reviveTimes = 7;</code>
       *
       * <pre>
       * 复活次数
       * </pre>
       */
      public Builder setReviveTimes(int value) {
        bitField0_ |= 0x00000040;
        reviveTimes_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 reviveTimes = 7;</code>
       *
       * <pre>
       * 复活次数
       * </pre>
       */
      public Builder clearReviveTimes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        reviveTimes_ = 0;
        
        return this;
      }

      // required uint32 killEnemyCount = 8;
      private int killEnemyCount_ ;
      /**
       * <code>required uint32 killEnemyCount = 8;</code>
       *
       * <pre>
       * 杀敌数量
       * </pre>
       */
      public boolean hasKillEnemyCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required uint32 killEnemyCount = 8;</code>
       *
       * <pre>
       * 杀敌数量
       * </pre>
       */
      public int getKillEnemyCount() {
        return killEnemyCount_;
      }
      /**
       * <code>required uint32 killEnemyCount = 8;</code>
       *
       * <pre>
       * 杀敌数量
       * </pre>
       */
      public Builder setKillEnemyCount(int value) {
        bitField0_ |= 0x00000080;
        killEnemyCount_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 killEnemyCount = 8;</code>
       *
       * <pre>
       * 杀敌数量
       * </pre>
       */
      public Builder clearKillEnemyCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        killEnemyCount_ = 0;
        
        return this;
      }

      // required uint32 pickCopper = 9;
      private int pickCopper_ ;
      /**
       * <code>required uint32 pickCopper = 9;</code>
       *
       * <pre>
       * 战斗中捡到的铜钱
       * </pre>
       */
      public boolean hasPickCopper() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required uint32 pickCopper = 9;</code>
       *
       * <pre>
       * 战斗中捡到的铜钱
       * </pre>
       */
      public int getPickCopper() {
        return pickCopper_;
      }
      /**
       * <code>required uint32 pickCopper = 9;</code>
       *
       * <pre>
       * 战斗中捡到的铜钱
       * </pre>
       */
      public Builder setPickCopper(int value) {
        bitField0_ |= 0x00000100;
        pickCopper_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 pickCopper = 9;</code>
       *
       * <pre>
       * 战斗中捡到的铜钱
       * </pre>
       */
      public Builder clearPickCopper() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pickCopper_ = 0;
        
        return this;
      }

      // required uint32 pickHonour = 10;
      private int pickHonour_ ;
      /**
       * <code>required uint32 pickHonour = 10;</code>
       *
       * <pre>
       * 战斗中捡到的荣誉
       * </pre>
       */
      public boolean hasPickHonour() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required uint32 pickHonour = 10;</code>
       *
       * <pre>
       * 战斗中捡到的荣誉
       * </pre>
       */
      public int getPickHonour() {
        return pickHonour_;
      }
      /**
       * <code>required uint32 pickHonour = 10;</code>
       *
       * <pre>
       * 战斗中捡到的荣誉
       * </pre>
       */
      public Builder setPickHonour(int value) {
        bitField0_ |= 0x00000200;
        pickHonour_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 pickHonour = 10;</code>
       *
       * <pre>
       * 战斗中捡到的荣誉
       * </pre>
       */
      public Builder clearPickHonour() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pickHonour_ = 0;
        
        return this;
      }

      // required uint32 pickGold = 11;
      private int pickGold_ ;
      /**
       * <code>required uint32 pickGold = 11;</code>
       *
       * <pre>
       * 战斗中捡到的元宝
       * </pre>
       */
      public boolean hasPickGold() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required uint32 pickGold = 11;</code>
       *
       * <pre>
       * 战斗中捡到的元宝
       * </pre>
       */
      public int getPickGold() {
        return pickGold_;
      }
      /**
       * <code>required uint32 pickGold = 11;</code>
       *
       * <pre>
       * 战斗中捡到的元宝
       * </pre>
       */
      public Builder setPickGold(int value) {
        bitField0_ |= 0x00000400;
        pickGold_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 pickGold = 11;</code>
       *
       * <pre>
       * 战斗中捡到的元宝
       * </pre>
       */
      public Builder clearPickGold() {
        bitField0_ = (bitField0_ & ~0x00000400);
        pickGold_ = 0;
        
        return this;
      }

      // repeated uint32 rewardGoodsIds = 12;
      private java.util.List<java.lang.Integer> rewardGoodsIds_ = java.util.Collections.emptyList();
      private void ensureRewardGoodsIdsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          rewardGoodsIds_ = new java.util.ArrayList<java.lang.Integer>(rewardGoodsIds_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated uint32 rewardGoodsIds = 12;</code>
       *
       * <pre>
       * 在EnterDungeonStageMessage消息里发送的随机物品id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRewardGoodsIdsList() {
        return java.util.Collections.unmodifiableList(rewardGoodsIds_);
      }
      /**
       * <code>repeated uint32 rewardGoodsIds = 12;</code>
       *
       * <pre>
       * 在EnterDungeonStageMessage消息里发送的随机物品id
       * </pre>
       */
      public int getRewardGoodsIdsCount() {
        return rewardGoodsIds_.size();
      }
      /**
       * <code>repeated uint32 rewardGoodsIds = 12;</code>
       *
       * <pre>
       * 在EnterDungeonStageMessage消息里发送的随机物品id
       * </pre>
       */
      public int getRewardGoodsIds(int index) {
        return rewardGoodsIds_.get(index);
      }
      /**
       * <code>repeated uint32 rewardGoodsIds = 12;</code>
       *
       * <pre>
       * 在EnterDungeonStageMessage消息里发送的随机物品id
       * </pre>
       */
      public Builder setRewardGoodsIds(
          int index, int value) {
        ensureRewardGoodsIdsIsMutable();
        rewardGoodsIds_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated uint32 rewardGoodsIds = 12;</code>
       *
       * <pre>
       * 在EnterDungeonStageMessage消息里发送的随机物品id
       * </pre>
       */
      public Builder addRewardGoodsIds(int value) {
        ensureRewardGoodsIdsIsMutable();
        rewardGoodsIds_.add(value);
        
        return this;
      }
      /**
       * <code>repeated uint32 rewardGoodsIds = 12;</code>
       *
       * <pre>
       * 在EnterDungeonStageMessage消息里发送的随机物品id
       * </pre>
       */
      public Builder addAllRewardGoodsIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRewardGoodsIdsIsMutable();
        super.addAll(values, rewardGoodsIds_);
        
        return this;
      }
      /**
       * <code>repeated uint32 rewardGoodsIds = 12;</code>
       *
       * <pre>
       * 在EnterDungeonStageMessage消息里发送的随机物品id
       * </pre>
       */
      public Builder clearRewardGoodsIds() {
        rewardGoodsIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.SuccessDungeonStageRequest)
    }

    static {
      defaultInstance = new SuccessDungeonStageRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.SuccessDungeonStageRequest)
  }

  public interface SuccessDungeonStageResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();

    // required .sanguo.StatusCode status = 2;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus();

    // optional uint32 roleRemainPower = 3;
    /**
     * <code>optional uint32 roleRemainPower = 3;</code>
     */
    boolean hasRoleRemainPower();
    /**
     * <code>optional uint32 roleRemainPower = 3;</code>
     */
    int getRoleRemainPower();

    // optional .sanguo.MsgDungeonReward dungeonReward = 4;
    /**
     * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
     */
    boolean hasDungeonReward();
    /**
     * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
     */
    com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward getDungeonReward();

    // optional .sanguo.MsgGambleCardReward gambleReward = 5;
    /**
     * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
     */
    boolean hasGambleReward();
    /**
     * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
     */
    com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward getGambleReward();

    // repeated .sanguo.MsgGambleCardItem gambleCards = 6;
    /**
     * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
     */
    java.util.List<com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem> 
        getGambleCardsList();
    /**
     * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
     */
    com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem getGambleCards(int index);
    /**
     * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
     */
    int getGambleCardsCount();

    // repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
     *
     * <pre>
     *精英怪掉落
     * </pre>
     */
    java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> 
        getRandomDropRewardsList();
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
     *
     * <pre>
     *精英怪掉落
     * </pre>
     */
    com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods getRandomDropRewards(int index);
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
     *
     * <pre>
     *精英怪掉落
     * </pre>
     */
    int getRandomDropRewardsCount();
  }
  /**
   * Protobuf type {@code sanguo.SuccessDungeonStageResponse}
   */
  public static final class SuccessDungeonStageResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements SuccessDungeonStageResponseOrBuilder {
    // Use SuccessDungeonStageResponse.newBuilder() to construct.
    private SuccessDungeonStageResponse(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SuccessDungeonStageResponse(boolean noInit) {}

    private static final SuccessDungeonStageResponse defaultInstance;
    public static SuccessDungeonStageResponse getDefaultInstance() {
      return defaultInstance;
    }

    public SuccessDungeonStageResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SuccessDungeonStageResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgStatusCode.StatusCode value = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roleRemainPower_ = input.readUInt32();
              break;
            }
            case 34: {
              com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = dungeonReward_.toBuilder();
              }
              dungeonReward_ = input.readMessage(com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dungeonReward_);
                dungeonReward_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = gambleReward_.toBuilder();
              }
              gambleReward_ = input.readMessage(com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gambleReward_);
                gambleReward_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                gambleCards_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem>();
                mutable_bitField0_ |= 0x00000020;
              }
              gambleCards_.add(input.readMessage(com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                randomDropRewards_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods>();
                mutable_bitField0_ |= 0x00000040;
              }
              randomDropRewards_.add(input.readMessage(com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          gambleCards_ = java.util.Collections.unmodifiableList(gambleCards_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          randomDropRewards_ = java.util.Collections.unmodifiableList(randomDropRewards_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SuccessDungeonStageResponse> PARSER =
        new com.google.protobuf.AbstractParser<SuccessDungeonStageResponse>() {
      public SuccessDungeonStageResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SuccessDungeonStageResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SuccessDungeonStageResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    // required .sanguo.StatusCode status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
      return status_;
    }

    // optional uint32 roleRemainPower = 3;
    public static final int ROLEREMAINPOWER_FIELD_NUMBER = 3;
    private int roleRemainPower_;
    /**
     * <code>optional uint32 roleRemainPower = 3;</code>
     */
    public boolean hasRoleRemainPower() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 roleRemainPower = 3;</code>
     */
    public int getRoleRemainPower() {
      return roleRemainPower_;
    }

    // optional .sanguo.MsgDungeonReward dungeonReward = 4;
    public static final int DUNGEONREWARD_FIELD_NUMBER = 4;
    private com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward dungeonReward_;
    /**
     * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
     */
    public boolean hasDungeonReward() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
     */
    public com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward getDungeonReward() {
      return dungeonReward_;
    }

    // optional .sanguo.MsgGambleCardReward gambleReward = 5;
    public static final int GAMBLEREWARD_FIELD_NUMBER = 5;
    private com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward gambleReward_;
    /**
     * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
     */
    public boolean hasGambleReward() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
     */
    public com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward getGambleReward() {
      return gambleReward_;
    }

    // repeated .sanguo.MsgGambleCardItem gambleCards = 6;
    public static final int GAMBLECARDS_FIELD_NUMBER = 6;
    private java.util.List<com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem> gambleCards_;
    /**
     * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
     */
    public java.util.List<com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem> getGambleCardsList() {
      return gambleCards_;
    }
    /**
     * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
     */
    public java.util.List<? extends com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItemOrBuilder> 
        getGambleCardsOrBuilderList() {
      return gambleCards_;
    }
    /**
     * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
     */
    public int getGambleCardsCount() {
      return gambleCards_.size();
    }
    /**
     * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
     */
    public com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem getGambleCards(int index) {
      return gambleCards_.get(index);
    }
    /**
     * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
     */
    public com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItemOrBuilder getGambleCardsOrBuilder(
        int index) {
      return gambleCards_.get(index);
    }

    // repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;
    public static final int RANDOMDROPREWARDS_FIELD_NUMBER = 7;
    private java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> randomDropRewards_;
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
     *
     * <pre>
     *精英怪掉落
     * </pre>
     */
    public java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> getRandomDropRewardsList() {
      return randomDropRewards_;
    }
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
     *
     * <pre>
     *精英怪掉落
     * </pre>
     */
    public java.util.List<? extends com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoodsOrBuilder> 
        getRandomDropRewardsOrBuilderList() {
      return randomDropRewards_;
    }
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
     *
     * <pre>
     *精英怪掉落
     * </pre>
     */
    public int getRandomDropRewardsCount() {
      return randomDropRewards_.size();
    }
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
     *
     * <pre>
     *精英怪掉落
     * </pre>
     */
    public com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods getRandomDropRewards(int index) {
      return randomDropRewards_.get(index);
    }
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
     *
     * <pre>
     *精英怪掉落
     * </pre>
     */
    public com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoodsOrBuilder getRandomDropRewardsOrBuilder(
        int index) {
      return randomDropRewards_.get(index);
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      roleRemainPower_ = 0;
      dungeonReward_ = com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance();
      gambleReward_ = com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.getDefaultInstance();
      gambleCards_ = java.util.Collections.emptyList();
      randomDropRewards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasGambleReward()) {
        if (!getGambleReward().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGambleCardsCount(); i++) {
        if (!getGambleCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRandomDropRewardsCount(); i++) {
        if (!getRandomDropRewards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, roleRemainPower_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, dungeonReward_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, gambleReward_);
      }
      for (int i = 0; i < gambleCards_.size(); i++) {
        output.writeMessage(6, gambleCards_.get(i));
      }
      for (int i = 0; i < randomDropRewards_.size(); i++) {
        output.writeMessage(7, randomDropRewards_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, roleRemainPower_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, dungeonReward_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, gambleReward_);
      }
      for (int i = 0; i < gambleCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, gambleCards_.get(i));
      }
      for (int i = 0; i < randomDropRewards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, randomDropRewards_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.SuccessDungeonStageResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse, Builder>
        implements com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponseOrBuilder {
      // Construct using com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        bitField0_ = (bitField0_ & ~0x00000002);
        roleRemainPower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dungeonReward_ = com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        gambleReward_ = com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        gambleCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        randomDropRewards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse build() {
        com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse buildPartial() {
        com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse result = new com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roleRemainPower_ = roleRemainPower_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dungeonReward_ = dungeonReward_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gambleReward_ = gambleReward_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          gambleCards_ = java.util.Collections.unmodifiableList(gambleCards_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.gambleCards_ = gambleCards_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          randomDropRewards_ = java.util.Collections.unmodifiableList(randomDropRewards_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.randomDropRewards_ = randomDropRewards_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse other) {
        if (other == com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRoleRemainPower()) {
          setRoleRemainPower(other.getRoleRemainPower());
        }
        if (other.hasDungeonReward()) {
          mergeDungeonReward(other.getDungeonReward());
        }
        if (other.hasGambleReward()) {
          mergeGambleReward(other.getGambleReward());
        }
        if (!other.gambleCards_.isEmpty()) {
          if (gambleCards_.isEmpty()) {
            gambleCards_ = other.gambleCards_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureGambleCardsIsMutable();
            gambleCards_.addAll(other.gambleCards_);
          }
          
        }
        if (!other.randomDropRewards_.isEmpty()) {
          if (randomDropRewards_.isEmpty()) {
            randomDropRewards_ = other.randomDropRewards_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRandomDropRewardsIsMutable();
            randomDropRewards_.addAll(other.randomDropRewards_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (hasGambleReward()) {
          if (!getGambleReward().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getGambleCardsCount(); i++) {
          if (!getGambleCards(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRandomDropRewardsCount(); i++) {
          if (!getRandomDropRewards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.dungeon.SuccessDungeonStageMessage.SuccessDungeonStageResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // required .sanguo.StatusCode status = 2;
      private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
        return status_;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder setStatus(com.cwa.sanguo.messages.MsgStatusCode.StatusCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        
        return this;
      }

      // optional uint32 roleRemainPower = 3;
      private int roleRemainPower_ ;
      /**
       * <code>optional uint32 roleRemainPower = 3;</code>
       */
      public boolean hasRoleRemainPower() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 roleRemainPower = 3;</code>
       */
      public int getRoleRemainPower() {
        return roleRemainPower_;
      }
      /**
       * <code>optional uint32 roleRemainPower = 3;</code>
       */
      public Builder setRoleRemainPower(int value) {
        bitField0_ |= 0x00000004;
        roleRemainPower_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 roleRemainPower = 3;</code>
       */
      public Builder clearRoleRemainPower() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roleRemainPower_ = 0;
        
        return this;
      }

      // optional .sanguo.MsgDungeonReward dungeonReward = 4;
      private com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward dungeonReward_ = com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance();
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
       */
      public boolean hasDungeonReward() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
       */
      public com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward getDungeonReward() {
        return dungeonReward_;
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
       */
      public Builder setDungeonReward(com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward value) {
        if (value == null) {
          throw new NullPointerException();
        }
        dungeonReward_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
       */
      public Builder setDungeonReward(
          com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.Builder builderForValue) {
        dungeonReward_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
       */
      public Builder mergeDungeonReward(com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            dungeonReward_ != com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance()) {
          dungeonReward_ =
            com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.newBuilder(dungeonReward_).mergeFrom(value).buildPartial();
        } else {
          dungeonReward_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgDungeonReward dungeonReward = 4;</code>
       */
      public Builder clearDungeonReward() {
        dungeonReward_ = com.cwa.sanguo.messages.dto.RoleDungeonReward.MsgDungeonReward.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // optional .sanguo.MsgGambleCardReward gambleReward = 5;
      private com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward gambleReward_ = com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.getDefaultInstance();
      /**
       * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
       */
      public boolean hasGambleReward() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
       */
      public com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward getGambleReward() {
        return gambleReward_;
      }
      /**
       * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
       */
      public Builder setGambleReward(com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward value) {
        if (value == null) {
          throw new NullPointerException();
        }
        gambleReward_ = value;

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
       */
      public Builder setGambleReward(
          com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.Builder builderForValue) {
        gambleReward_ = builderForValue.build();

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
       */
      public Builder mergeGambleReward(com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            gambleReward_ != com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.getDefaultInstance()) {
          gambleReward_ =
            com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.newBuilder(gambleReward_).mergeFrom(value).buildPartial();
        } else {
          gambleReward_ = value;
        }

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgGambleCardReward gambleReward = 5;</code>
       */
      public Builder clearGambleReward() {
        gambleReward_ = com.cwa.sanguo.messages.dto.RoleGambleCardReward.MsgGambleCardReward.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      // repeated .sanguo.MsgGambleCardItem gambleCards = 6;
      private java.util.List<com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem> gambleCards_ =
        java.util.Collections.emptyList();
      private void ensureGambleCardsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          gambleCards_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem>(gambleCards_);
          bitField0_ |= 0x00000020;
         }
      }

      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public java.util.List<com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem> getGambleCardsList() {
        return java.util.Collections.unmodifiableList(gambleCards_);
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public int getGambleCardsCount() {
        return gambleCards_.size();
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem getGambleCards(int index) {
        return gambleCards_.get(index);
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public Builder setGambleCards(
          int index, com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGambleCardsIsMutable();
        gambleCards_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public Builder setGambleCards(
          int index, com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem.Builder builderForValue) {
        ensureGambleCardsIsMutable();
        gambleCards_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public Builder addGambleCards(com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGambleCardsIsMutable();
        gambleCards_.add(value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public Builder addGambleCards(
          int index, com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGambleCardsIsMutable();
        gambleCards_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public Builder addGambleCards(
          com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem.Builder builderForValue) {
        ensureGambleCardsIsMutable();
        gambleCards_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public Builder addGambleCards(
          int index, com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem.Builder builderForValue) {
        ensureGambleCardsIsMutable();
        gambleCards_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public Builder addAllGambleCards(
          java.lang.Iterable<? extends com.cwa.sanguo.messages.dto.GambleCard.MsgGambleCardItem> values) {
        ensureGambleCardsIsMutable();
        super.addAll(values, gambleCards_);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public Builder clearGambleCards() {
        gambleCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgGambleCardItem gambleCards = 6;</code>
       */
      public Builder removeGambleCards(int index) {
        ensureGambleCardsIsMutable();
        gambleCards_.remove(index);

        return this;
      }

      // repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;
      private java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> randomDropRewards_ =
        java.util.Collections.emptyList();
      private void ensureRandomDropRewardsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          randomDropRewards_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods>(randomDropRewards_);
          bitField0_ |= 0x00000040;
         }
      }

      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> getRandomDropRewardsList() {
        return java.util.Collections.unmodifiableList(randomDropRewards_);
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public int getRandomDropRewardsCount() {
        return randomDropRewards_.size();
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods getRandomDropRewards(int index) {
        return randomDropRewards_.get(index);
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public Builder setRandomDropRewards(
          int index, com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRandomDropRewardsIsMutable();
        randomDropRewards_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public Builder setRandomDropRewards(
          int index, com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods.Builder builderForValue) {
        ensureRandomDropRewardsIsMutable();
        randomDropRewards_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public Builder addRandomDropRewards(com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRandomDropRewardsIsMutable();
        randomDropRewards_.add(value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public Builder addRandomDropRewards(
          int index, com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRandomDropRewardsIsMutable();
        randomDropRewards_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public Builder addRandomDropRewards(
          com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods.Builder builderForValue) {
        ensureRandomDropRewardsIsMutable();
        randomDropRewards_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public Builder addRandomDropRewards(
          int index, com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods.Builder builderForValue) {
        ensureRandomDropRewardsIsMutable();
        randomDropRewards_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public Builder addAllRandomDropRewards(
          java.lang.Iterable<? extends com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> values) {
        ensureRandomDropRewardsIsMutable();
        super.addAll(values, randomDropRewards_);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public Builder clearRandomDropRewards() {
        randomDropRewards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods randomDropRewards = 7;</code>
       *
       * <pre>
       *精英怪掉落
       * </pre>
       */
      public Builder removeRandomDropRewards(int index) {
        ensureRandomDropRewardsIsMutable();
        randomDropRewards_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.SuccessDungeonStageResponse)
    }

    static {
      defaultInstance = new SuccessDungeonStageResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.SuccessDungeonStageResponse)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
