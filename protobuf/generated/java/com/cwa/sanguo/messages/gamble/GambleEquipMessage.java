// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gamble_equip.proto

package com.cwa.sanguo.messages.gamble;

public final class GambleEquipMessage {
  private GambleEquipMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface GambleEquipRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();

    // required uint32 chestType = 2;
    /**
     * <code>required uint32 chestType = 2;</code>
     */
    boolean hasChestType();
    /**
     * <code>required uint32 chestType = 2;</code>
     */
    int getChestType();

    // required uint32 costType = 3;
    /**
     * <code>required uint32 costType = 3;</code>
     *
     * <pre>
     * 消费类型 1 免费次数 2 奖券(根据chestType来判断奖券类型) 3 玉石 GambleEquipCostType定义了枚举
     * </pre>
     */
    boolean hasCostType();
    /**
     * <code>required uint32 costType = 3;</code>
     *
     * <pre>
     * 消费类型 1 免费次数 2 奖券(根据chestType来判断奖券类型) 3 玉石 GambleEquipCostType定义了枚举
     * </pre>
     */
    int getCostType();
  }
  /**
   * Protobuf type {@code sanguo.GambleEquipRequest}
   */
  public static final class GambleEquipRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements GambleEquipRequestOrBuilder {
    // Use GambleEquipRequest.newBuilder() to construct.
    private GambleEquipRequest(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private GambleEquipRequest(boolean noInit) {}

    private static final GambleEquipRequest defaultInstance;
    public static GambleEquipRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GambleEquipRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private GambleEquipRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              chestType_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              costType_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<GambleEquipRequest> PARSER =
        new com.google.protobuf.AbstractParser<GambleEquipRequest>() {
      public GambleEquipRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GambleEquipRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GambleEquipRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    // required uint32 chestType = 2;
    public static final int CHESTTYPE_FIELD_NUMBER = 2;
    private int chestType_;
    /**
     * <code>required uint32 chestType = 2;</code>
     */
    public boolean hasChestType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 chestType = 2;</code>
     */
    public int getChestType() {
      return chestType_;
    }

    // required uint32 costType = 3;
    public static final int COSTTYPE_FIELD_NUMBER = 3;
    private int costType_;
    /**
     * <code>required uint32 costType = 3;</code>
     *
     * <pre>
     * 消费类型 1 免费次数 2 奖券(根据chestType来判断奖券类型) 3 玉石 GambleEquipCostType定义了枚举
     * </pre>
     */
    public boolean hasCostType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 costType = 3;</code>
     *
     * <pre>
     * 消费类型 1 免费次数 2 奖券(根据chestType来判断奖券类型) 3 玉石 GambleEquipCostType定义了枚举
     * </pre>
     */
    public int getCostType() {
      return costType_;
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      chestType_ = 0;
      costType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChestType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCostType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, chestType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, costType_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, chestType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, costType_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.GambleEquipRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest, Builder>
        implements com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequestOrBuilder {
      // Construct using com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        chestType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        costType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest build() {
        com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest buildPartial() {
        com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest result = new com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chestType_ = chestType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.costType_ = costType_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest other) {
        if (other == com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        if (other.hasChestType()) {
          setChestType(other.getChestType());
        }
        if (other.hasCostType()) {
          setCostType(other.getCostType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        if (!hasChestType()) {
          
          return false;
        }
        if (!hasCostType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // required uint32 chestType = 2;
      private int chestType_ ;
      /**
       * <code>required uint32 chestType = 2;</code>
       */
      public boolean hasChestType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 chestType = 2;</code>
       */
      public int getChestType() {
        return chestType_;
      }
      /**
       * <code>required uint32 chestType = 2;</code>
       */
      public Builder setChestType(int value) {
        bitField0_ |= 0x00000002;
        chestType_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 chestType = 2;</code>
       */
      public Builder clearChestType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chestType_ = 0;
        
        return this;
      }

      // required uint32 costType = 3;
      private int costType_ ;
      /**
       * <code>required uint32 costType = 3;</code>
       *
       * <pre>
       * 消费类型 1 免费次数 2 奖券(根据chestType来判断奖券类型) 3 玉石 GambleEquipCostType定义了枚举
       * </pre>
       */
      public boolean hasCostType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 costType = 3;</code>
       *
       * <pre>
       * 消费类型 1 免费次数 2 奖券(根据chestType来判断奖券类型) 3 玉石 GambleEquipCostType定义了枚举
       * </pre>
       */
      public int getCostType() {
        return costType_;
      }
      /**
       * <code>required uint32 costType = 3;</code>
       *
       * <pre>
       * 消费类型 1 免费次数 2 奖券(根据chestType来判断奖券类型) 3 玉石 GambleEquipCostType定义了枚举
       * </pre>
       */
      public Builder setCostType(int value) {
        bitField0_ |= 0x00000004;
        costType_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 costType = 3;</code>
       *
       * <pre>
       * 消费类型 1 免费次数 2 奖券(根据chestType来判断奖券类型) 3 玉石 GambleEquipCostType定义了枚举
       * </pre>
       */
      public Builder clearCostType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        costType_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.GambleEquipRequest)
    }

    static {
      defaultInstance = new GambleEquipRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.GambleEquipRequest)
  }

  public interface GambleEquipResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();

    // required .sanguo.StatusCode status = 2;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus();

    // repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
     *
     * <pre>
     *获得的装备
     * </pre>
     */
    java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> 
        getRoleBagGoodsList();
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
     *
     * <pre>
     *获得的装备
     * </pre>
     */
    com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods getRoleBagGoods(int index);
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
     *
     * <pre>
     *获得的装备
     * </pre>
     */
    int getRoleBagGoodsCount();

    // optional .sanguo.MsgRoleCooldown roleCooldown = 4;
    /**
     * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
     *
     * <pre>
     *冷却时间状态
     * </pre>
     */
    boolean hasRoleCooldown();
    /**
     * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
     *
     * <pre>
     *冷却时间状态
     * </pre>
     */
    com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown getRoleCooldown();

    // optional uint32 remainTimes = 5;
    /**
     * <code>optional uint32 remainTimes = 5;</code>
     *
     * <pre>
     *铜宝箱剩余次数 
     * </pre>
     */
    boolean hasRemainTimes();
    /**
     * <code>optional uint32 remainTimes = 5;</code>
     *
     * <pre>
     *铜宝箱剩余次数 
     * </pre>
     */
    int getRemainTimes();
  }
  /**
   * Protobuf type {@code sanguo.GambleEquipResponse}
   */
  public static final class GambleEquipResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements GambleEquipResponseOrBuilder {
    // Use GambleEquipResponse.newBuilder() to construct.
    private GambleEquipResponse(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private GambleEquipResponse(boolean noInit) {}

    private static final GambleEquipResponse defaultInstance;
    public static GambleEquipResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GambleEquipResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private GambleEquipResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgStatusCode.StatusCode value = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                roleBagGoods_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods>();
                mutable_bitField0_ |= 0x00000004;
              }
              roleBagGoods_.add(input.readMessage(com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = roleCooldown_.toBuilder();
              }
              roleCooldown_ = input.readMessage(com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roleCooldown_);
                roleCooldown_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              remainTimes_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          roleBagGoods_ = java.util.Collections.unmodifiableList(roleBagGoods_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<GambleEquipResponse> PARSER =
        new com.google.protobuf.AbstractParser<GambleEquipResponse>() {
      public GambleEquipResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GambleEquipResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GambleEquipResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    // required .sanguo.StatusCode status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
      return status_;
    }

    // repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;
    public static final int ROLEBAGGOODS_FIELD_NUMBER = 3;
    private java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> roleBagGoods_;
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
     *
     * <pre>
     *获得的装备
     * </pre>
     */
    public java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> getRoleBagGoodsList() {
      return roleBagGoods_;
    }
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
     *
     * <pre>
     *获得的装备
     * </pre>
     */
    public java.util.List<? extends com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoodsOrBuilder> 
        getRoleBagGoodsOrBuilderList() {
      return roleBagGoods_;
    }
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
     *
     * <pre>
     *获得的装备
     * </pre>
     */
    public int getRoleBagGoodsCount() {
      return roleBagGoods_.size();
    }
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
     *
     * <pre>
     *获得的装备
     * </pre>
     */
    public com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods getRoleBagGoods(int index) {
      return roleBagGoods_.get(index);
    }
    /**
     * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
     *
     * <pre>
     *获得的装备
     * </pre>
     */
    public com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoodsOrBuilder getRoleBagGoodsOrBuilder(
        int index) {
      return roleBagGoods_.get(index);
    }

    // optional .sanguo.MsgRoleCooldown roleCooldown = 4;
    public static final int ROLECOOLDOWN_FIELD_NUMBER = 4;
    private com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown roleCooldown_;
    /**
     * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
     *
     * <pre>
     *冷却时间状态
     * </pre>
     */
    public boolean hasRoleCooldown() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
     *
     * <pre>
     *冷却时间状态
     * </pre>
     */
    public com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown getRoleCooldown() {
      return roleCooldown_;
    }

    // optional uint32 remainTimes = 5;
    public static final int REMAINTIMES_FIELD_NUMBER = 5;
    private int remainTimes_;
    /**
     * <code>optional uint32 remainTimes = 5;</code>
     *
     * <pre>
     *铜宝箱剩余次数 
     * </pre>
     */
    public boolean hasRemainTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 remainTimes = 5;</code>
     *
     * <pre>
     *铜宝箱剩余次数 
     * </pre>
     */
    public int getRemainTimes() {
      return remainTimes_;
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      roleBagGoods_ = java.util.Collections.emptyList();
      roleCooldown_ = com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance();
      remainTimes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRoleBagGoodsCount(); i++) {
        if (!getRoleBagGoods(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRoleCooldown()) {
        if (!getRoleCooldown().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      for (int i = 0; i < roleBagGoods_.size(); i++) {
        output.writeMessage(3, roleBagGoods_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, roleCooldown_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, remainTimes_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      for (int i = 0; i < roleBagGoods_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, roleBagGoods_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, roleCooldown_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, remainTimes_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.GambleEquipResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse, Builder>
        implements com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponseOrBuilder {
      // Construct using com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        bitField0_ = (bitField0_ & ~0x00000002);
        roleBagGoods_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        roleCooldown_ = com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        remainTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse build() {
        com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse buildPartial() {
        com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse result = new com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          roleBagGoods_ = java.util.Collections.unmodifiableList(roleBagGoods_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.roleBagGoods_ = roleBagGoods_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roleCooldown_ = roleCooldown_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.remainTimes_ = remainTimes_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse other) {
        if (other == com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (!other.roleBagGoods_.isEmpty()) {
          if (roleBagGoods_.isEmpty()) {
            roleBagGoods_ = other.roleBagGoods_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRoleBagGoodsIsMutable();
            roleBagGoods_.addAll(other.roleBagGoods_);
          }
          
        }
        if (other.hasRoleCooldown()) {
          mergeRoleCooldown(other.getRoleCooldown());
        }
        if (other.hasRemainTimes()) {
          setRemainTimes(other.getRemainTimes());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        for (int i = 0; i < getRoleBagGoodsCount(); i++) {
          if (!getRoleBagGoods(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasRoleCooldown()) {
          if (!getRoleCooldown().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.gamble.GambleEquipMessage.GambleEquipResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // required .sanguo.StatusCode status = 2;
      private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
        return status_;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder setStatus(com.cwa.sanguo.messages.MsgStatusCode.StatusCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        
        return this;
      }

      // repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;
      private java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> roleBagGoods_ =
        java.util.Collections.emptyList();
      private void ensureRoleBagGoodsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          roleBagGoods_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods>(roleBagGoods_);
          bitField0_ |= 0x00000004;
         }
      }

      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public java.util.List<com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> getRoleBagGoodsList() {
        return java.util.Collections.unmodifiableList(roleBagGoods_);
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public int getRoleBagGoodsCount() {
        return roleBagGoods_.size();
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods getRoleBagGoods(int index) {
        return roleBagGoods_.get(index);
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public Builder setRoleBagGoods(
          int index, com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoleBagGoodsIsMutable();
        roleBagGoods_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public Builder setRoleBagGoods(
          int index, com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods.Builder builderForValue) {
        ensureRoleBagGoodsIsMutable();
        roleBagGoods_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public Builder addRoleBagGoods(com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoleBagGoodsIsMutable();
        roleBagGoods_.add(value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public Builder addRoleBagGoods(
          int index, com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoleBagGoodsIsMutable();
        roleBagGoods_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public Builder addRoleBagGoods(
          com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods.Builder builderForValue) {
        ensureRoleBagGoodsIsMutable();
        roleBagGoods_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public Builder addRoleBagGoods(
          int index, com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods.Builder builderForValue) {
        ensureRoleBagGoodsIsMutable();
        roleBagGoods_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public Builder addAllRoleBagGoods(
          java.lang.Iterable<? extends com.cwa.sanguo.messages.dto.RoleBagGoods.MsgRoleBagGoods> values) {
        ensureRoleBagGoodsIsMutable();
        super.addAll(values, roleBagGoods_);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public Builder clearRoleBagGoods() {
        roleBagGoods_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRoleBagGoods roleBagGoods = 3;</code>
       *
       * <pre>
       *获得的装备
       * </pre>
       */
      public Builder removeRoleBagGoods(int index) {
        ensureRoleBagGoodsIsMutable();
        roleBagGoods_.remove(index);

        return this;
      }

      // optional .sanguo.MsgRoleCooldown roleCooldown = 4;
      private com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown roleCooldown_ = com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance();
      /**
       * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
       *
       * <pre>
       *冷却时间状态
       * </pre>
       */
      public boolean hasRoleCooldown() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
       *
       * <pre>
       *冷却时间状态
       * </pre>
       */
      public com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown getRoleCooldown() {
        return roleCooldown_;
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
       *
       * <pre>
       *冷却时间状态
       * </pre>
       */
      public Builder setRoleCooldown(com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown value) {
        if (value == null) {
          throw new NullPointerException();
        }
        roleCooldown_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
       *
       * <pre>
       *冷却时间状态
       * </pre>
       */
      public Builder setRoleCooldown(
          com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.Builder builderForValue) {
        roleCooldown_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
       *
       * <pre>
       *冷却时间状态
       * </pre>
       */
      public Builder mergeRoleCooldown(com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            roleCooldown_ != com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance()) {
          roleCooldown_ =
            com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.newBuilder(roleCooldown_).mergeFrom(value).buildPartial();
        } else {
          roleCooldown_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .sanguo.MsgRoleCooldown roleCooldown = 4;</code>
       *
       * <pre>
       *冷却时间状态
       * </pre>
       */
      public Builder clearRoleCooldown() {
        roleCooldown_ = com.cwa.sanguo.messages.dto.RoleCooldown.MsgRoleCooldown.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // optional uint32 remainTimes = 5;
      private int remainTimes_ ;
      /**
       * <code>optional uint32 remainTimes = 5;</code>
       *
       * <pre>
       *铜宝箱剩余次数 
       * </pre>
       */
      public boolean hasRemainTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 remainTimes = 5;</code>
       *
       * <pre>
       *铜宝箱剩余次数 
       * </pre>
       */
      public int getRemainTimes() {
        return remainTimes_;
      }
      /**
       * <code>optional uint32 remainTimes = 5;</code>
       *
       * <pre>
       *铜宝箱剩余次数 
       * </pre>
       */
      public Builder setRemainTimes(int value) {
        bitField0_ |= 0x00000010;
        remainTimes_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 remainTimes = 5;</code>
       *
       * <pre>
       *铜宝箱剩余次数 
       * </pre>
       */
      public Builder clearRemainTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        remainTimes_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.GambleEquipResponse)
    }

    static {
      defaultInstance = new GambleEquipResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.GambleEquipResponse)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
