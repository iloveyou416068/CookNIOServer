// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init_dice_data.proto

package com.cwa.sanguo.messages.gamble;

public final class InitDiceDataMessage {
  private InitDiceDataMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface InitDiceDataRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();
  }
  /**
   * Protobuf type {@code sanguo.InitDiceDataRequest}
   */
  public static final class InitDiceDataRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements InitDiceDataRequestOrBuilder {
    // Use InitDiceDataRequest.newBuilder() to construct.
    private InitDiceDataRequest(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private InitDiceDataRequest(boolean noInit) {}

    private static final InitDiceDataRequest defaultInstance;
    public static InitDiceDataRequest getDefaultInstance() {
      return defaultInstance;
    }

    public InitDiceDataRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private InitDiceDataRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<InitDiceDataRequest> PARSER =
        new com.google.protobuf.AbstractParser<InitDiceDataRequest>() {
      public InitDiceDataRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitDiceDataRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InitDiceDataRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.InitDiceDataRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest, Builder>
        implements com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequestOrBuilder {
      // Construct using com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest build() {
        com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest buildPartial() {
        com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest result = new com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest other) {
        if (other == com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.InitDiceDataRequest)
    }

    static {
      defaultInstance = new InitDiceDataRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.InitDiceDataRequest)
  }

  public interface InitDiceDataResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .sanguo.MsgID msgID = 1;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    boolean hasMsgID();
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    com.cwa.sanguo.messages.MsgId.MsgID getMsgID();

    // required .sanguo.StatusCode status = 2;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus();

    // optional uint32 leftRollCount = 3;
    /**
     * <code>optional uint32 leftRollCount = 3;</code>
     *
     * <pre>
     *剩余的摇骰子次数
     * </pre>
     */
    boolean hasLeftRollCount();
    /**
     * <code>optional uint32 leftRollCount = 3;</code>
     *
     * <pre>
     *剩余的摇骰子次数
     * </pre>
     */
    int getLeftRollCount();

    // optional uint32 rewardMultiple = 4;
    /**
     * <code>optional uint32 rewardMultiple = 4;</code>
     *
     * <pre>
     *当前奖励的倍数
     * </pre>
     */
    boolean hasRewardMultiple();
    /**
     * <code>optional uint32 rewardMultiple = 4;</code>
     *
     * <pre>
     *当前奖励的倍数
     * </pre>
     */
    int getRewardMultiple();

    // optional uint32 vipLeftRollCount = 5;
    /**
     * <code>optional uint32 vipLeftRollCount = 5;</code>
     *
     * <pre>
     * 剩余VIP摇骰子次数
     * </pre>
     */
    boolean hasVipLeftRollCount();
    /**
     * <code>optional uint32 vipLeftRollCount = 5;</code>
     *
     * <pre>
     * 剩余VIP摇骰子次数
     * </pre>
     */
    int getVipLeftRollCount();

    // repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;
    /**
     * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
     */
    java.util.List<com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo> 
        getRollDiceInfosList();
    /**
     * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
     */
    com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo getRollDiceInfos(int index);
    /**
     * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
     */
    int getRollDiceInfosCount();
  }
  /**
   * Protobuf type {@code sanguo.InitDiceDataResponse}
   */
  public static final class InitDiceDataResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements InitDiceDataResponseOrBuilder {
    // Use InitDiceDataResponse.newBuilder() to construct.
    private InitDiceDataResponse(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private InitDiceDataResponse(boolean noInit) {}

    private static final InitDiceDataResponse defaultInstance;
    public static InitDiceDataResponse getDefaultInstance() {
      return defaultInstance;
    }

    public InitDiceDataResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private InitDiceDataResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgId.MsgID value = com.cwa.sanguo.messages.MsgId.MsgID.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                msgID_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.cwa.sanguo.messages.MsgStatusCode.StatusCode value = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              leftRollCount_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rewardMultiple_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              vipLeftRollCount_ = input.readUInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                rollDiceInfos_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              rollDiceInfos_.add(input.readMessage(com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          rollDiceInfos_ = java.util.Collections.unmodifiableList(rollDiceInfos_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<InitDiceDataResponse> PARSER =
        new com.google.protobuf.AbstractParser<InitDiceDataResponse>() {
      public InitDiceDataResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitDiceDataResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InitDiceDataResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .sanguo.MsgID msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private com.cwa.sanguo.messages.MsgId.MsgID msgID_;
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .sanguo.MsgID msgID = 1;</code>
     */
    public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
      return msgID_;
    }

    // required .sanguo.StatusCode status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_;
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .sanguo.StatusCode status = 2;</code>
     */
    public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
      return status_;
    }

    // optional uint32 leftRollCount = 3;
    public static final int LEFTROLLCOUNT_FIELD_NUMBER = 3;
    private int leftRollCount_;
    /**
     * <code>optional uint32 leftRollCount = 3;</code>
     *
     * <pre>
     *剩余的摇骰子次数
     * </pre>
     */
    public boolean hasLeftRollCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 leftRollCount = 3;</code>
     *
     * <pre>
     *剩余的摇骰子次数
     * </pre>
     */
    public int getLeftRollCount() {
      return leftRollCount_;
    }

    // optional uint32 rewardMultiple = 4;
    public static final int REWARDMULTIPLE_FIELD_NUMBER = 4;
    private int rewardMultiple_;
    /**
     * <code>optional uint32 rewardMultiple = 4;</code>
     *
     * <pre>
     *当前奖励的倍数
     * </pre>
     */
    public boolean hasRewardMultiple() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 rewardMultiple = 4;</code>
     *
     * <pre>
     *当前奖励的倍数
     * </pre>
     */
    public int getRewardMultiple() {
      return rewardMultiple_;
    }

    // optional uint32 vipLeftRollCount = 5;
    public static final int VIPLEFTROLLCOUNT_FIELD_NUMBER = 5;
    private int vipLeftRollCount_;
    /**
     * <code>optional uint32 vipLeftRollCount = 5;</code>
     *
     * <pre>
     * 剩余VIP摇骰子次数
     * </pre>
     */
    public boolean hasVipLeftRollCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 vipLeftRollCount = 5;</code>
     *
     * <pre>
     * 剩余VIP摇骰子次数
     * </pre>
     */
    public int getVipLeftRollCount() {
      return vipLeftRollCount_;
    }

    // repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;
    public static final int ROLLDICEINFOS_FIELD_NUMBER = 6;
    private java.util.List<com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo> rollDiceInfos_;
    /**
     * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
     */
    public java.util.List<com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo> getRollDiceInfosList() {
      return rollDiceInfos_;
    }
    /**
     * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
     */
    public java.util.List<? extends com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfoOrBuilder> 
        getRollDiceInfosOrBuilderList() {
      return rollDiceInfos_;
    }
    /**
     * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
     */
    public int getRollDiceInfosCount() {
      return rollDiceInfos_.size();
    }
    /**
     * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
     */
    public com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo getRollDiceInfos(int index) {
      return rollDiceInfos_.get(index);
    }
    /**
     * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
     */
    public com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfoOrBuilder getRollDiceInfosOrBuilder(
        int index) {
      return rollDiceInfos_.get(index);
    }

    private void initFields() {
      msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      leftRollCount_ = 0;
      rewardMultiple_ = 0;
      vipLeftRollCount_ = 0;
      rollDiceInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRollDiceInfosCount(); i++) {
        if (!getRollDiceInfos(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, leftRollCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, rewardMultiple_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, vipLeftRollCount_);
      }
      for (int i = 0; i < rollDiceInfos_.size(); i++) {
        output.writeMessage(6, rollDiceInfos_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, leftRollCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, rewardMultiple_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, vipLeftRollCount_);
      }
      for (int i = 0; i < rollDiceInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, rollDiceInfos_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code sanguo.InitDiceDataResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse, Builder>
        implements com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponseOrBuilder {
      // Construct using com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        bitField0_ = (bitField0_ & ~0x00000002);
        leftRollCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rewardMultiple_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        vipLeftRollCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        rollDiceInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse getDefaultInstanceForType() {
        return com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse.getDefaultInstance();
      }

      public com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse build() {
        com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse buildPartial() {
        com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse result = new com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.leftRollCount_ = leftRollCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rewardMultiple_ = rewardMultiple_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.vipLeftRollCount_ = vipLeftRollCount_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          rollDiceInfos_ = java.util.Collections.unmodifiableList(rollDiceInfos_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.rollDiceInfos_ = rollDiceInfos_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse other) {
        if (other == com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasLeftRollCount()) {
          setLeftRollCount(other.getLeftRollCount());
        }
        if (other.hasRewardMultiple()) {
          setRewardMultiple(other.getRewardMultiple());
        }
        if (other.hasVipLeftRollCount()) {
          setVipLeftRollCount(other.getVipLeftRollCount());
        }
        if (!other.rollDiceInfos_.isEmpty()) {
          if (rollDiceInfos_.isEmpty()) {
            rollDiceInfos_ = other.rollDiceInfos_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRollDiceInfosIsMutable();
            rollDiceInfos_.addAll(other.rollDiceInfos_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        for (int i = 0; i < getRollDiceInfosCount(); i++) {
          if (!getRollDiceInfos(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.sanguo.messages.gamble.InitDiceDataMessage.InitDiceDataResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .sanguo.MsgID msgID = 1;
      private com.cwa.sanguo.messages.MsgId.MsgID msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public com.cwa.sanguo.messages.MsgId.MsgID getMsgID() {
        return msgID_;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder setMsgID(com.cwa.sanguo.messages.MsgId.MsgID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgID_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.MsgID msgID = 1;</code>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = com.cwa.sanguo.messages.MsgId.MsgID.MSG_LOGIN;
        
        return this;
      }

      // required .sanguo.StatusCode status = 2;
      private com.cwa.sanguo.messages.MsgStatusCode.StatusCode status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public com.cwa.sanguo.messages.MsgStatusCode.StatusCode getStatus() {
        return status_;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder setStatus(com.cwa.sanguo.messages.MsgStatusCode.StatusCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required .sanguo.StatusCode status = 2;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = com.cwa.sanguo.messages.MsgStatusCode.StatusCode.OK;
        
        return this;
      }

      // optional uint32 leftRollCount = 3;
      private int leftRollCount_ ;
      /**
       * <code>optional uint32 leftRollCount = 3;</code>
       *
       * <pre>
       *剩余的摇骰子次数
       * </pre>
       */
      public boolean hasLeftRollCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 leftRollCount = 3;</code>
       *
       * <pre>
       *剩余的摇骰子次数
       * </pre>
       */
      public int getLeftRollCount() {
        return leftRollCount_;
      }
      /**
       * <code>optional uint32 leftRollCount = 3;</code>
       *
       * <pre>
       *剩余的摇骰子次数
       * </pre>
       */
      public Builder setLeftRollCount(int value) {
        bitField0_ |= 0x00000004;
        leftRollCount_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 leftRollCount = 3;</code>
       *
       * <pre>
       *剩余的摇骰子次数
       * </pre>
       */
      public Builder clearLeftRollCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leftRollCount_ = 0;
        
        return this;
      }

      // optional uint32 rewardMultiple = 4;
      private int rewardMultiple_ ;
      /**
       * <code>optional uint32 rewardMultiple = 4;</code>
       *
       * <pre>
       *当前奖励的倍数
       * </pre>
       */
      public boolean hasRewardMultiple() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 rewardMultiple = 4;</code>
       *
       * <pre>
       *当前奖励的倍数
       * </pre>
       */
      public int getRewardMultiple() {
        return rewardMultiple_;
      }
      /**
       * <code>optional uint32 rewardMultiple = 4;</code>
       *
       * <pre>
       *当前奖励的倍数
       * </pre>
       */
      public Builder setRewardMultiple(int value) {
        bitField0_ |= 0x00000008;
        rewardMultiple_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 rewardMultiple = 4;</code>
       *
       * <pre>
       *当前奖励的倍数
       * </pre>
       */
      public Builder clearRewardMultiple() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rewardMultiple_ = 0;
        
        return this;
      }

      // optional uint32 vipLeftRollCount = 5;
      private int vipLeftRollCount_ ;
      /**
       * <code>optional uint32 vipLeftRollCount = 5;</code>
       *
       * <pre>
       * 剩余VIP摇骰子次数
       * </pre>
       */
      public boolean hasVipLeftRollCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 vipLeftRollCount = 5;</code>
       *
       * <pre>
       * 剩余VIP摇骰子次数
       * </pre>
       */
      public int getVipLeftRollCount() {
        return vipLeftRollCount_;
      }
      /**
       * <code>optional uint32 vipLeftRollCount = 5;</code>
       *
       * <pre>
       * 剩余VIP摇骰子次数
       * </pre>
       */
      public Builder setVipLeftRollCount(int value) {
        bitField0_ |= 0x00000010;
        vipLeftRollCount_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 vipLeftRollCount = 5;</code>
       *
       * <pre>
       * 剩余VIP摇骰子次数
       * </pre>
       */
      public Builder clearVipLeftRollCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        vipLeftRollCount_ = 0;
        
        return this;
      }

      // repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;
      private java.util.List<com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo> rollDiceInfos_ =
        java.util.Collections.emptyList();
      private void ensureRollDiceInfosIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          rollDiceInfos_ = new java.util.ArrayList<com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo>(rollDiceInfos_);
          bitField0_ |= 0x00000020;
         }
      }

      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public java.util.List<com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo> getRollDiceInfosList() {
        return java.util.Collections.unmodifiableList(rollDiceInfos_);
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public int getRollDiceInfosCount() {
        return rollDiceInfos_.size();
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo getRollDiceInfos(int index) {
        return rollDiceInfos_.get(index);
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public Builder setRollDiceInfos(
          int index, com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRollDiceInfosIsMutable();
        rollDiceInfos_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public Builder setRollDiceInfos(
          int index, com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo.Builder builderForValue) {
        ensureRollDiceInfosIsMutable();
        rollDiceInfos_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public Builder addRollDiceInfos(com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRollDiceInfosIsMutable();
        rollDiceInfos_.add(value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public Builder addRollDiceInfos(
          int index, com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRollDiceInfosIsMutable();
        rollDiceInfos_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public Builder addRollDiceInfos(
          com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo.Builder builderForValue) {
        ensureRollDiceInfosIsMutable();
        rollDiceInfos_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public Builder addRollDiceInfos(
          int index, com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo.Builder builderForValue) {
        ensureRollDiceInfosIsMutable();
        rollDiceInfos_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public Builder addAllRollDiceInfos(
          java.lang.Iterable<? extends com.cwa.sanguo.messages.dto.RollDiceInfo.MsgRollDiceInfo> values) {
        ensureRollDiceInfosIsMutable();
        super.addAll(values, rollDiceInfos_);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public Builder clearRollDiceInfos() {
        rollDiceInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);

        return this;
      }
      /**
       * <code>repeated .sanguo.MsgRollDiceInfo rollDiceInfos = 6;</code>
       */
      public Builder removeRollDiceInfos(int index) {
        ensureRollDiceInfosIsMutable();
        rollDiceInfos_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:sanguo.InitDiceDataResponse)
    }

    static {
      defaultInstance = new InitDiceDataResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sanguo.InitDiceDataResponse)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
